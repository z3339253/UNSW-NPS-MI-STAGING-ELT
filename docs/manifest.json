{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v4.json", "dbt_version": "1.0.0", "generated_at": "2022-01-17T23:15:51.577908Z", "invocation_id": "3acc250b-6ff4-418b-8569-6ca29060e5f7", "env": {}, "project_id": "1bf0aec3658bf9205681214a9928062c", "user_id": "f946b23d-17da-4680-9da4-c4bea6a192f5", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"model.nps_mi_2021.src_postcode_phncode": {"raw_sql": "{{config(materialized='view')}}\n\nwith distinct_postcode as (\n\nselect distinct cast(POSTCODE_2019 as STRING) as POSTCODE_2019, cast(PHN_CODE_2017 as string) as PHN_CODE_2017 from {{ref('POSTCODE')}}\n\n),\n\nstring_joined as (\nselect POSTCODE_2019, STRING_AGG(PHN_CODE_2017, ',') as PHN_CODE_2017\nFrom distinct_postcode\ngroup by POSTCODE_2019\n)\n\nselect * from string_joined", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.POSTCODE"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "phn", "src_postcode_phncode"], "unique_id": "model.nps_mi_2021.src_postcode_phncode", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\phn\\src_postcode_phncode.sql", "original_file_path": "models\\source\\phn\\src_postcode_phncode.sql", "name": "src_postcode_phncode", "alias": "src_postcode_phncode", "checksum": {"name": "sha256", "checksum": "a7236c318cc5b5032de7b643818a223e503d91a3cca909c4778cee4c20200f25"}, "tags": [], "refs": [["POSTCODE"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\phn\\src_postcode_phncode.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642359251.2356915, "compiled_sql": "\n\nwith distinct_postcode as (\n\nselect distinct cast(POSTCODE_2019 as STRING) as POSTCODE_2019, cast(PHN_CODE_2017 as string) as PHN_CODE_2017 from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`POSTCODE`\n\n),\n\nstring_joined as (\nselect POSTCODE_2019, STRING_AGG(PHN_CODE_2017, ',') as PHN_CODE_2017\nFrom distinct_postcode\ngroup by POSTCODE_2019\n)\n\nselect * from string_joined", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_postcode_phncode`"}, "model.nps_mi_2021.PRIMARY_HEALTH_NETWORK": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nselect *\r\nfrom {{ref('PHNCODE_DATA')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.nps_mi_2021.PHNCODE_DATA"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "phn", "PRIMARY_HEALTH_NETWORK"], "unique_id": "model.nps_mi_2021.PRIMARY_HEALTH_NETWORK", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\phn\\PRIMARY_HEALTH_NETWORK.sql", "original_file_path": "models\\staging\\phn\\PRIMARY_HEALTH_NETWORK.sql", "name": "PRIMARY_HEALTH_NETWORK", "alias": "PRIMARY_HEALTH_NETWORK", "checksum": {"name": "sha256", "checksum": "9ef00c48eed9fa5a7d39df60d172f817c6fdf675cfaa17d08d2713bb69d76c43"}, "tags": [], "refs": [["PHNCODE_DATA"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\phn\\PRIMARY_HEALTH_NETWORK.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642359251.3386195, "compiled_sql": "\n\nselect *\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`PHNCODE_DATA`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRIMARY_HEALTH_NETWORK`"}, "model.nps_mi_2021.POSTCODE": {"raw_sql": "{{config(materialized='table')}}\n\nselect \nPOSTCODE_ID\t,\nCAST(POSTCODE_2019 AS INT) AS POSTCODE_2019,\nSA2_MAINCODE_2016,\nCITY,\nCAST(PHN_CODE_2017 AS STRING) AS PHN_CODE_2017,\nIRSAD_SCORE_2016,\nIRSAD_DECILE_2016,\nIRSD_SCORE_2016,\nIRSD_DECILE_2016,\nIER_SCORE_2016,\nIER_DECILE_2016,\nIEO_SCORE_2016,\nIEO_DECILE_2016,\nUSUAL_RESIDENT_POPULATION_2016,\nIRSAD_SCORE_2011,\nIRSAD_DECILE_2011,\nIRSD_SCORE_2011,\nIRSD_DECILE_2011,\nIER_SCORE_2011,\nIER_DECILE_2011,\nIEO_SCORE_2011,\nIEO_DECILE_2011,\nASGS_RA_CODE_2016,\nASGS_RA_NAME_2016,\nREMOTENESS_AREA_RATIO_2016,\nASGS_RA_CODE_2011,\nASGS_RA_NAME_2011,\nREMOTENESS_AREA_RATIO_2011,\nASGS_RA_CODE_2011_MODIFIED,\nASGS_RA_CODE_2016_MODIFIED,\nASGS_RA_NAME_2011_MODIFIED,\nASGS_RA_NAME_2016_MODIFIED,\nIEO_QUINTILE_2011,\nIEO_QUINTILE_2016,\nIER_QUINTILE_2011,\nIER_QUINTILE_2016,\nIRSAD_QUINTILE_2011,\nIRSAD_QUINTILE_2016,\nIRSD_QUINTILE_2011,\nIRSD_QUINTILE_2016\nfrom {{ref('POSTCODE_DATA')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.nps_mi_2021.POSTCODE_DATA"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "postcode", "POSTCODE"], "unique_id": "model.nps_mi_2021.POSTCODE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\postcode\\POSTCODE.sql", "original_file_path": "models\\staging\\postcode\\POSTCODE.sql", "name": "POSTCODE", "alias": "POSTCODE", "checksum": {"name": "sha256", "checksum": "d16229491f4c5a9c298f68c2104732efb2337505019c0a24d16690be2e305c04"}, "tags": [], "refs": [["POSTCODE_DATA"]], "sources": [], "description": "", "columns": {"IRSAD_SCORE_2016": {"name": "IRSAD_SCORE_2016", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "nps_mi_2021://models\\staging\\postcode\\postcode_test.yml", "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\postcode\\POSTCODE.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642359251.6415162, "compiled_sql": "\n\nselect \nPOSTCODE_ID\t,\nCAST(POSTCODE_2019 AS INT) AS POSTCODE_2019,\nSA2_MAINCODE_2016,\nCITY,\nCAST(PHN_CODE_2017 AS STRING) AS PHN_CODE_2017,\nIRSAD_SCORE_2016,\nIRSAD_DECILE_2016,\nIRSD_SCORE_2016,\nIRSD_DECILE_2016,\nIER_SCORE_2016,\nIER_DECILE_2016,\nIEO_SCORE_2016,\nIEO_DECILE_2016,\nUSUAL_RESIDENT_POPULATION_2016,\nIRSAD_SCORE_2011,\nIRSAD_DECILE_2011,\nIRSD_SCORE_2011,\nIRSD_DECILE_2011,\nIER_SCORE_2011,\nIER_DECILE_2011,\nIEO_SCORE_2011,\nIEO_DECILE_2011,\nASGS_RA_CODE_2016,\nASGS_RA_NAME_2016,\nREMOTENESS_AREA_RATIO_2016,\nASGS_RA_CODE_2011,\nASGS_RA_NAME_2011,\nREMOTENESS_AREA_RATIO_2011,\nASGS_RA_CODE_2011_MODIFIED,\nASGS_RA_CODE_2016_MODIFIED,\nASGS_RA_NAME_2011_MODIFIED,\nASGS_RA_NAME_2016_MODIFIED,\nIEO_QUINTILE_2011,\nIEO_QUINTILE_2016,\nIER_QUINTILE_2011,\nIER_QUINTILE_2016,\nIRSAD_QUINTILE_2011,\nIRSAD_QUINTILE_2016,\nIRSD_QUINTILE_2011,\nIRSD_QUINTILE_2016\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`POSTCODE_DATA`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`POSTCODE`"}, "seed.nps_mi_2021.PHNCODE_DATA": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "fqn": ["nps_mi_2021", "PHNCODE_DATA"], "unique_id": "seed.nps_mi_2021.PHNCODE_DATA", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "PHNCODE_DATA.csv", "original_file_path": "seeds\\PHNCODE_DATA.csv", "name": "PHNCODE_DATA", "alias": "PHNCODE_DATA", "checksum": {"name": "sha256", "checksum": "42eee2d60c51f4bc7e1519728d9470350b099fe6ee20940f810547aac60de6f6"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021"}, "created_at": 1642359251.3693292, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`PHNCODE_DATA`"}, "seed.nps_mi_2021.POSTCODE_DATA": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "fqn": ["nps_mi_2021", "POSTCODE_DATA"], "unique_id": "seed.nps_mi_2021.POSTCODE_DATA", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "POSTCODE_DATA.csv", "original_file_path": "seeds\\POSTCODE_DATA.csv", "name": "POSTCODE_DATA", "alias": "POSTCODE_DATA", "checksum": {"name": "path", "checksum": "seeds\\POSTCODE_DATA.csv"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021"}, "created_at": 1642359251.371335, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`POSTCODE_DATA`"}, "test.nps_mi_2021.dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.4da88fdc6d": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "IRSAD_SCORE_2016", "model": "{{ get_where_subquery(ref('POSTCODE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["model.nps_mi_2021.POSTCODE"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "staging", "postcode", "dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016"], "unique_id": "test.nps_mi_2021.dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.4da88fdc6d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.sql", "original_file_path": "models\\staging\\postcode\\postcode_test.yml", "name": "dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016", "alias": "dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["POSTCODE"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\postcode\\postcode_test.yml\\dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1642359251.6424758, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when IRSAD_SCORE_2016 is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`POSTCODE`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "IRSAD_SCORE_2016", "file_key_name": "models.POSTCODE"}, "model.nps_mi_2021.PATHOLOGY_RESULT": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_pathology_result as\r\n(\r\nselect * from {{ref('src_pathology_result_bp')}}\r\nunion all \r\nselect * from {{ref('src_pathology_result_md')}}\r\nunion all\r\nselect * from {{ref('src_pathology_result_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_pathology_result_phc_md')}}\r\n)\r\nselect * from source_pathology_result", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_pathology_result_phc_bp", "model.nps_mi_2021.src_pathology_result_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "pathology_result", "PATHOLOGY_RESULT"], "unique_id": "model.nps_mi_2021.PATHOLOGY_RESULT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\pathology_result\\PATHOLOGY_RESULT.sql", "original_file_path": "models\\staging\\pathology_result\\PATHOLOGY_RESULT.sql", "name": "PATHOLOGY_RESULT", "alias": "PATHOLOGY_RESULT", "checksum": {"name": "sha256", "checksum": "ffeaf97c56e7a59436f05be71359f112c0b2f123c05aef43c680ca9fc751c4d5"}, "tags": [], "refs": [["src_pathology_result_bp"], ["src_pathology_result_md"], ["src_pathology_result_phc_bp"], ["src_pathology_result_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\pathology_result\\PATHOLOGY_RESULT.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.261614, "compiled_sql": "\n\nwith source_pathology_result as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_phc_md`\n)\nselect * from source_pathology_result", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`"}, "model.nps_mi_2021.src_pathology_result_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_result_phc_md as (\r\nselect\r\ncast(NULL as string) as PATIENT_NUMBER,\r\ncast(hpr.SITE_ID as string) as SITE_ID,\r\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\ncast('SAT_PATHOLOGY_RESULT_MD_OMOP' as string) as SOURCE_TABLE,\r\nNULL as PROVIDER_ID,\r\nNULL as PATHOLOGY_RESULT_ATOM_ID,\r\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\r\ncast(sprm.RESULT_DATE as TIMESTAMP) as RESULT_DATE,\r\ncast(sprm.PATH_CODE as string) as DATA_TYPE, \r\ncast(sprm.LOINC as string) as LOINC_CODE, \r\ncast(sprm.TEST_NAME as string) as RESULT_NAME, \r\ncast(sprm.RESULT as string) as RESULT_VALUE, \r\ncast(sprm.UNITS as string) as UNITS, \r\ncast(sprm.NORMAL_RANGE as string) AS NORMAL_RANGE, \r\ncast(sprm.ABNORMAL_FLAGS as string) as ABNORMAL_FLAG, \r\ncast(NULL as string) as RECORD_STATUS, \r\ncast(sprm.STAMP_CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \r\ncast(sprm.STAMP_DATETIME as timestamp) as UPDATED_DATETIME ,\r\nCAST(sprm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sprm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sprm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sprm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sprm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sprm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sprm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sprm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_RESULT_OMOP')}} hpr\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_RESULT_PHC_MD_OMOP')}} sprm \r\non hpr.HUB_PATHOLOGY_RESULT_SK = sprm.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_SITE_RESULT_OMOP')}} lpr \r\non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_SITE_RESULT_OMOP')}} lspr\r\non lpr.LNK_PATHOLOGY_SITE_RESULT_SK = lspr.LNK_PATHOLOGY_SITE_RESULT_SK\r\nWHERE\r\n\tsprm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sprm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_result_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_SITE_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_SITE_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology_result", "src_pathology_result_phc_md"], "unique_id": "model.nps_mi_2021.src_pathology_result_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology_result\\src_pathology_result_phc_md.sql", "original_file_path": "models\\source\\pathology_result\\src_pathology_result_phc_md.sql", "name": "src_pathology_result_phc_md", "alias": "src_pathology_result_phc_md", "checksum": {"name": "sha256", "checksum": "56f98f6b732e03a2c4e18dbd5caffbc65ea6666b03cc9ec825318d493e205d47"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_SITE_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_SITE_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_RESULT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology_result\\src_pathology_result_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2636702, "compiled_sql": "\n\nwith pathology_result_phc_md as (\nselect\ncast(NULL as string) as PATIENT_NUMBER,\ncast(hpr.SITE_ID as string) as SITE_ID,\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\ncast('SAT_PATHOLOGY_RESULT_MD_OMOP' as string) as SOURCE_TABLE,\nNULL as PROVIDER_ID,\nNULL as PATHOLOGY_RESULT_ATOM_ID,\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\ncast(sprm.RESULT_DATE as TIMESTAMP) as RESULT_DATE,\ncast(sprm.PATH_CODE as string) as DATA_TYPE, \ncast(sprm.LOINC as string) as LOINC_CODE, \ncast(sprm.TEST_NAME as string) as RESULT_NAME, \ncast(sprm.RESULT as string) as RESULT_VALUE, \ncast(sprm.UNITS as string) as UNITS, \ncast(sprm.NORMAL_RANGE as string) AS NORMAL_RANGE, \ncast(sprm.ABNORMAL_FLAGS as string) as ABNORMAL_FLAG, \ncast(NULL as string) as RECORD_STATUS, \ncast(sprm.STAMP_CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \ncast(sprm.STAMP_DATETIME as timestamp) as UPDATED_DATETIME ,\nCAST(sprm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sprm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sprm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sprm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sprm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sprm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sprm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sprm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_RESULT_OMOP` hpr\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_PHC_MD_OMOP` sprm \non hpr.HUB_PATHOLOGY_RESULT_SK = sprm.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_SITE_RESULT_OMOP` lpr \non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_SITE_RESULT_OMOP` lspr\non lpr.LNK_PATHOLOGY_SITE_RESULT_SK = lspr.LNK_PATHOLOGY_SITE_RESULT_SK\nWHERE\n\tsprm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sprm.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_result_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_phc_md`"}, "model.nps_mi_2021.ALCOHOL_STATUS": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_alcohol_status as\r\n(\r\nselect * from {{ref('src_alcohol_bp')}}\r\nUNION ALL\r\nselect * from {{ref('src_alcohol_phc_bp')}}\r\nUNION ALL\r\nselect * from {{ref('src_alcohol_md')}}\r\nUNION ALL\r\nselect * from {{ref('src_alcohol_phc_md')}}\r\n)\r\n\r\nselect * from source_alcohol_status", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_alcohol_phc_bp", "model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_alcohol_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "alcohol_status", "ALCOHOL_STATUS"], "unique_id": "model.nps_mi_2021.ALCOHOL_STATUS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\alcohol_status\\ALCOHOL_STATUS.sql", "original_file_path": "models\\staging\\alcohol_status\\ALCOHOL_STATUS.sql", "name": "ALCOHOL_STATUS", "alias": "ALCOHOL_STATUS", "checksum": {"name": "sha256", "checksum": "b0e31de350faf976913e882def61c3cebde52affb3dca89ee8b60f4d7f51d864"}, "tags": [], "refs": [["src_alcohol_bp"], ["src_alcohol_phc_bp"], ["src_alcohol_md"], ["src_alcohol_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\alcohol_status\\ALCOHOL_STATUS.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2657144, "compiled_sql": "\n\nwith source_alcohol_status as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_bp`\nUNION ALL\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_phc_bp`\nUNION ALL\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_md`\nUNION ALL\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_phc_md`\n)\n\nselect * from source_alcohol_status", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`"}, "model.nps_mi_2021.src_alcohol_bp": {"raw_sql": "{{config(materialized='view')}}\n\nwith alcohol_bp as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(hasb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(hasb.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(sspasb.RECORD_STATUS AS STRING) AS RECORD_STATUS,\nCAST(sspasb.ALCOHOL_CODE AS STRING) AS ALCOHOL_CODE,\nCAST(CASE\n\t\tWHEN sspasb.ALCOHOL_CODE = 1\n\t\tTHEN 'Nil'\n\t\tWHEN sspasb.ALCOHOL_CODE = 2\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspasb.ALCOHOL_CODE = 3\n\t\tTHEN 'Moderate'\n\t\tWHEN sspasb.ALCOHOL_CODE = 4\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(sspasb.PAST_ALCOHOL_LEVEL as STRING) AS PAST_ALCOHOL_CODE,\nCAST(sspasb.DRINKS_PER_DAY AS INT) AS DRINKS_PER_DAY,\nCAST(sspasb.DAYS_PER_WEEK AS INT) AS DAYS_PER_WEEK,\nCAST(null AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(sspasb.YEAR_STARTED AS STRING) AS YEAR_STARTED,\nCAST(sspasb.YEAR_STOPPED AS STRING) AS YEAR_STOPPED,\nCAST(sspasb.PAST_DRINKS_PER_DAY AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(sspasb.PAST_DAYS_PER_WEEK AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspasb.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspasb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspasb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspasb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspasb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspasb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspasb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspasb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspasb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspasb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} hasb\ninner join \n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} sspasb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = sspasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} lasb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} lsasb\non lasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lsasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\non lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from alcohol_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "alcohol_status", "src_alcohol_bp"], "unique_id": "model.nps_mi_2021.src_alcohol_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\alcohol_status\\src_alcohol_bp.sql", "original_file_path": "models\\source\\alcohol_status\\src_alcohol_bp.sql", "name": "src_alcohol_bp", "alias": "src_alcohol_bp", "checksum": {"name": "sha256", "checksum": "ce5d610b0bdcd8cc8402ec7a0f215a80b060bd19ae5bbf1caca1e738e2bfcbe1"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\alcohol_status\\src_alcohol_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2677088, "compiled_sql": "\n\nwith alcohol_bp as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(hasb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(hasb.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(sspasb.RECORD_STATUS AS STRING) AS RECORD_STATUS,\nCAST(sspasb.ALCOHOL_CODE AS STRING) AS ALCOHOL_CODE,\nCAST(CASE\n\t\tWHEN sspasb.ALCOHOL_CODE = 1\n\t\tTHEN 'Nil'\n\t\tWHEN sspasb.ALCOHOL_CODE = 2\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspasb.ALCOHOL_CODE = 3\n\t\tTHEN 'Moderate'\n\t\tWHEN sspasb.ALCOHOL_CODE = 4\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(sspasb.PAST_ALCOHOL_LEVEL as STRING) AS PAST_ALCOHOL_CODE,\nCAST(sspasb.DRINKS_PER_DAY AS INT) AS DRINKS_PER_DAY,\nCAST(sspasb.DAYS_PER_WEEK AS INT) AS DAYS_PER_WEEK,\nCAST(null AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(sspasb.YEAR_STARTED AS STRING) AS YEAR_STARTED,\nCAST(sspasb.YEAR_STOPPED AS STRING) AS YEAR_STOPPED,\nCAST(sspasb.PAST_DRINKS_PER_DAY AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(sspasb.PAST_DAYS_PER_WEEK AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspasb.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspasb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspasb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspasb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspasb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspasb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspasb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspasb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspasb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspasb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` hasb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` sspasb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = sspasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` lasb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` lsasb\non lasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lsasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\non lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from alcohol_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_bp`"}, "model.nps_mi_2021.src_alcohol_phc_bp": {"raw_sql": "{{config(materialized='view')}}\n\nwith alcohol_phc_bp as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(hasb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(hasb.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(sspaspb.RECORD_STATUS AS STRING) AS RECORD_STATUS,\nCAST(sspaspb.ALCOHOL_CODE AS STRING) AS ALCOHOL_CODE,\nCAST(CASE\n\t\tWHEN sspaspb.ALCOHOL_CODE = 1\n\t\tTHEN 'Nil'\n\t\tWHEN sspaspb.ALCOHOL_CODE = 2\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspaspb.ALCOHOL_CODE = 3\n\t\tTHEN 'Moderate'\n\t\tWHEN sspaspb.ALCOHOL_CODE = 4\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(sspaspb.PAST_ALCOHOL_LEVEL as STRING) AS PAST_ALCOHOL_CODE,\nCAST(sspaspb.DRINKS_PER_DAY AS INT) AS DRINKS_PER_DAY,\nCAST(sspaspb.DAYS_PER_WEEK AS INT) AS DAYS_PER_WEEK,\nCAST(null AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(sspaspb.YEAR_STARTED AS STRING) AS YEAR_STARTED,\nCAST(sspaspb.YEAR_STOPPED AS STRING) AS YEAR_STOPPED,\nCAST(sspaspb.PAST_DRINKS_PER_DAY AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(sspaspb.PAST_DAYS_PER_WEEK AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspaspb.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspaspb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspaspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspaspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspaspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspaspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspaspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspaspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspaspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspaspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} hasb\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP')}} sspaspb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = sspaspb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} lasb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP')}} lsasb\non lasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lsasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\nON lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspaspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspaspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect * from alcohol_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "alcohol_status", "src_alcohol_phc_bp"], "unique_id": "model.nps_mi_2021.src_alcohol_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\alcohol_status\\src_alcohol_phc_bp.sql", "original_file_path": "models\\source\\alcohol_status\\src_alcohol_phc_bp.sql", "name": "src_alcohol_phc_bp", "alias": "src_alcohol_phc_bp", "checksum": {"name": "sha256", "checksum": "981dd439e4ea21948f64c523faed2fb128639c83fc732d4bfe1644d06a9bdd76"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\alcohol_status\\src_alcohol_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.269712, "compiled_sql": "\n\nwith alcohol_phc_bp as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(hasb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(hasb.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(sspaspb.RECORD_STATUS AS STRING) AS RECORD_STATUS,\nCAST(sspaspb.ALCOHOL_CODE AS STRING) AS ALCOHOL_CODE,\nCAST(CASE\n\t\tWHEN sspaspb.ALCOHOL_CODE = 1\n\t\tTHEN 'Nil'\n\t\tWHEN sspaspb.ALCOHOL_CODE = 2\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspaspb.ALCOHOL_CODE = 3\n\t\tTHEN 'Moderate'\n\t\tWHEN sspaspb.ALCOHOL_CODE = 4\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(sspaspb.PAST_ALCOHOL_LEVEL as STRING) AS PAST_ALCOHOL_CODE,\nCAST(sspaspb.DRINKS_PER_DAY AS INT) AS DRINKS_PER_DAY,\nCAST(sspaspb.DAYS_PER_WEEK AS INT) AS DAYS_PER_WEEK,\nCAST(null AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(sspaspb.YEAR_STARTED AS STRING) AS YEAR_STARTED,\nCAST(sspaspb.YEAR_STOPPED AS STRING) AS YEAR_STOPPED,\nCAST(sspaspb.PAST_DRINKS_PER_DAY AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(sspaspb.PAST_DAYS_PER_WEEK AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspaspb.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspaspb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspaspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspaspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspaspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspaspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspaspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspaspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspaspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspaspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` hasb\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP` sspaspb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = sspaspb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` lasb\non hasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lasb.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP` lsasb\non lasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK = lsasb.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspaspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspaspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect * from alcohol_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_phc_bp`"}, "model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_matched as\r\n(\r\nselect * from {{ref('src_matched_bp')}}\r\nunion all \r\nselect * from {{ref('src_matched_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_matched_md')}}\r\nunion all\r\nselect * from {{ref('src_matched_phc_md')}}\r\n)\r\nselect * from source_matched", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "patient_matched_usual_provider", "PATIENT_MATCHED_USUAL_PROVIDER"], "unique_id": "model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\patient_matched_usual_provider\\PATIENT_MATCHED_USUAL_PROVIDER.sql", "original_file_path": "models\\staging\\patient_matched_usual_provider\\PATIENT_MATCHED_USUAL_PROVIDER.sql", "name": "PATIENT_MATCHED_USUAL_PROVIDER", "alias": "PATIENT_MATCHED_USUAL_PROVIDER", "checksum": {"name": "sha256", "checksum": "74d7d13b065f55b08421c520318d0e7b9f37d2712820606645a5ba172d9d5756"}, "tags": [], "refs": [["src_matched_bp"], ["src_matched_phc_bp"], ["src_matched_md"], ["src_matched_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\patient_matched_usual_provider\\PATIENT_MATCHED_USUAL_PROVIDER.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.271715, "compiled_sql": "\n\nwith source_matched as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_phc_md`\n)\nselect * from source_matched", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT_MATCHED_USUAL_PROVIDER`"}, "model.nps_mi_2021.src_matched_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nselect \r\ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PROVIDER_ID,\r\ncast(\"BP\" as string) as SOURCE_SYSTEM,\r\ncast('SAT_SITE_PROVIDER_BP_OMOP' as string) as SOURCE_TABLE,\r\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\r\ncast(null as string) as PROVIDER_SALUTATION,\r\ncast(sspb.PRACTICE_PROVIDER_FIRST_NAME as string) as PROVIDER_FIRSTNAME,\r\ncast(sspb.PRACTICE_PROVIDER_SURNAME as string) as PROVIDER_LASTNAME,\r\ncast(null as string) as CRM_PERSON_ID,\r\ncast(null as string) as PROVIDER_ACRRM,\r\ncast(null as string) as PROVIDER_RACGP,\r\ncast(sspb.AHPRA_REGISTRATION_NUMBER as string) as PROVIDER_AHPRA,\r\ncast(null as string) as CRM_CONTACT_ID,\r\ncast(null as string) as PROVIDER_PSA_NUMBER,\r\ncast(NULL as string) as PROVIDER_GENDER,\r\ncast(null as string) as PROVIDER_AGE_GROUP,\r\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_DECEASED_STATUS,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\r\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\r\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\r\ncast(null as string) as PROVIDER_WORK_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\r\ncast(null as string) as PROVIDER_CIS_STATUS,\r\ncast(null as string) as PROVIDER_TYPE,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\r\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_BP_OMOP')}} llsp \r\non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lbdv \r\non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lsbdv \r\non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PRACTITIONER_OMOP')}} hpro \r\non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_BP_OMOP')}} sspb \r\non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nwhere \r\n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient_matched_usual_provider", "src_matched_bp"], "unique_id": "model.nps_mi_2021.src_matched_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient_matched_usual_provider\\src_matched_bp.sql", "original_file_path": "models\\source\\patient_matched_usual_provider\\src_matched_bp.sql", "name": "src_matched_bp", "alias": "src_matched_bp", "checksum": {"name": "sha256", "checksum": "c587103721896b17ef3746192aa0282f5c397599a92efa088c5561a826a9629b"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRACTITIONER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient_matched_usual_provider\\src_matched_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2738857, "compiled_sql": "\n\nselect \ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PROVIDER_ID,\ncast(\"BP\" as string) as SOURCE_SYSTEM,\ncast('SAT_SITE_PROVIDER_BP_OMOP' as string) as SOURCE_TABLE,\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\ncast(null as string) as PROVIDER_SALUTATION,\ncast(sspb.PRACTICE_PROVIDER_FIRST_NAME as string) as PROVIDER_FIRSTNAME,\ncast(sspb.PRACTICE_PROVIDER_SURNAME as string) as PROVIDER_LASTNAME,\ncast(null as string) as CRM_PERSON_ID,\ncast(null as string) as PROVIDER_ACRRM,\ncast(null as string) as PROVIDER_RACGP,\ncast(sspb.AHPRA_REGISTRATION_NUMBER as string) as PROVIDER_AHPRA,\ncast(null as string) as CRM_CONTACT_ID,\ncast(null as string) as PROVIDER_PSA_NUMBER,\ncast(NULL as string) as PROVIDER_GENDER,\ncast(null as string) as PROVIDER_AGE_GROUP,\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_DECEASED_STATUS,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\ncast(null as string) as PROVIDER_WORK_STATUS,\ncast(null as string) as PROVIDER_CONSENT_STATUS,\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\ncast(null as string) as PROVIDER_CIS_STATUS,\ncast(null as string) as PROVIDER_TYPE,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP` llsp \non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP` lbdv \non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP` lsbdv \non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRACTITIONER_OMOP` hpro \non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_BP_OMOP` sspb \non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nwhere \n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_bp`"}, "model.nps_mi_2021.src_matched_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nselect \r\ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpo.SITE_ID as string) as SITE_ID,\r\ncast(hpo.PRACTITIONER_ID as string) as PROVIDER_ID,\r\ncast(\"MD\" as string) as SOURCE_SYSTEM,\r\ncast('SAT_SITE_PROVIDER_MD_OMOP' as string) as SOURCE_TABLE,\r\ncast(NULL as string) as PROVIDER_NUMBER,\r\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\r\ncast(null as string) as PROVIDER_SALUTATION,\r\ncast(NULL as string) as PROVIDER_FIRSTNAME,\r\ncast(NULL as string) as PROVIDER_LASTNAME,\r\ncast(null as string) as CRM_PERSON_ID,\r\ncast(null as string) as PROVIDER_ACRRM,\r\ncast(null as string) as PROVIDER_RACGP,\r\ncast(sspb.STATE_REGISTRATION_NUMBER as string) as PROVIDER_AHPRA,\r\ncast(null as string) as CRM_CONTACT_ID,\r\ncast(null as string) as PROVIDER_PSA_NUMBER,\r\ncast(sspb.GENDER_CODE as string) as PROVIDER_GENDER,\r\ncast(null as string) as PROVIDER_AGE_GROUP,\r\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_DECEASED_STATUS,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\r\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\r\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\r\ncast(null as string) as PROVIDER_WORK_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\r\ncast(null as string) as PROVIDER_CIS_STATUS,\r\ncast(null as string) as PROVIDER_TYPE,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\r\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PROVIDER_MD_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_MD_OMOP')}} llsp \r\non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lbdv \r\non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lsbdv \r\non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PRACTITIONER_OMOP')}} hpro \r\non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_MD_OMOP')}} sspb\r\non llsp.HUB_SITE_PROVIDER_MD_SK = sspb.HUB_SITE_PROVIDER_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nwhere \r\n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient_matched_usual_provider", "src_matched_md"], "unique_id": "model.nps_mi_2021.src_matched_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient_matched_usual_provider\\src_matched_md.sql", "original_file_path": "models\\source\\patient_matched_usual_provider\\src_matched_md.sql", "name": "src_matched_md", "alias": "src_matched_md", "checksum": {"name": "sha256", "checksum": "fb3b06f542576368aec8da50a1b5151782ad2231f4ab08874ec5630c4ac8ac9f"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRACTITIONER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient_matched_usual_provider\\src_matched_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.275886, "compiled_sql": "\n\nselect \ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpo.SITE_ID as string) as SITE_ID,\ncast(hpo.PRACTITIONER_ID as string) as PROVIDER_ID,\ncast(\"MD\" as string) as SOURCE_SYSTEM,\ncast('SAT_SITE_PROVIDER_MD_OMOP' as string) as SOURCE_TABLE,\ncast(NULL as string) as PROVIDER_NUMBER,\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\ncast(null as string) as PROVIDER_SALUTATION,\ncast(NULL as string) as PROVIDER_FIRSTNAME,\ncast(NULL as string) as PROVIDER_LASTNAME,\ncast(null as string) as CRM_PERSON_ID,\ncast(null as string) as PROVIDER_ACRRM,\ncast(null as string) as PROVIDER_RACGP,\ncast(sspb.STATE_REGISTRATION_NUMBER as string) as PROVIDER_AHPRA,\ncast(null as string) as CRM_CONTACT_ID,\ncast(null as string) as PROVIDER_PSA_NUMBER,\ncast(sspb.GENDER_CODE as string) as PROVIDER_GENDER,\ncast(null as string) as PROVIDER_AGE_GROUP,\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_DECEASED_STATUS,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\ncast(null as string) as PROVIDER_WORK_STATUS,\ncast(null as string) as PROVIDER_CONSENT_STATUS,\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\ncast(null as string) as PROVIDER_CIS_STATUS,\ncast(null as string) as PROVIDER_TYPE,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP` llsp \non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP` lbdv \non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP` lsbdv \non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRACTITIONER_OMOP` hpro \non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_MD_OMOP` sspb\non llsp.HUB_SITE_PROVIDER_MD_SK = sspb.HUB_SITE_PROVIDER_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nwhere \n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_md`"}, "model.nps_mi_2021.src_matched_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nselect \r\ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PROVIDER_ID,\r\ncast('PHC_BP' as string) as SOURCE_SYSTEM,\r\ncast('SAT_SITE_PROVIDER_PHC_BP_OMOP' as string) as SOURCE_TABLE,\r\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\r\ncast(null as string) as PROVIDER_SALUTATION,\r\ncast(sspb.FIRST_NAME as string) as PROVIDER_FIRSTNAME,\r\ncast(sspb.SURNAME as string) as PROVIDER_LASTNAME,\r\ncast(null as string) as CRM_PERSON_ID,\r\ncast(null as string) as PROVIDER_ACRRM,\r\ncast(null as string) as PROVIDER_RACGP,\r\ncast(NULL as string) as PROVIDER_AHPRA,\r\ncast(null as string) as CRM_CONTACT_ID,\r\ncast(null as string) as PROVIDER_PSA_NUMBER,\r\ncast(NULL as string) as PROVIDER_GENDER,\r\ncast(null as string) as PROVIDER_AGE_GROUP,\r\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_DECEASED_STATUS,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\r\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\r\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\r\ncast(null as string) as PROVIDER_WORK_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\r\ncast(null as string) as PROVIDER_CIS_STATUS,\r\ncast(null as string) as PROVIDER_TYPE,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\r\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_BP_OMOP')}} llsp \r\non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lbdv \r\non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lsbdv \r\non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PRACTITIONER_OMOP')}} hpro \r\non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_PHC_BP_OMOP')}} sspb \r\non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nwhere \r\n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient_matched_usual_provider", "src_matched_phc_bp"], "unique_id": "model.nps_mi_2021.src_matched_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient_matched_usual_provider\\src_matched_phc_bp.sql", "original_file_path": "models\\source\\patient_matched_usual_provider\\src_matched_phc_bp.sql", "name": "src_matched_phc_bp", "alias": "src_matched_phc_bp", "checksum": {"name": "sha256", "checksum": "060ef8e64283bc43132c6ffeae20b4e87ee1a6ead33540253b3961a94190037a"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRACTITIONER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient_matched_usual_provider\\src_matched_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2778852, "compiled_sql": "\n\n\nselect \ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PROVIDER_ID,\ncast('PHC_BP' as string) as SOURCE_SYSTEM,\ncast('SAT_SITE_PROVIDER_PHC_BP_OMOP' as string) as SOURCE_TABLE,\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\ncast(null as string) as PROVIDER_SALUTATION,\ncast(sspb.FIRST_NAME as string) as PROVIDER_FIRSTNAME,\ncast(sspb.SURNAME as string) as PROVIDER_LASTNAME,\ncast(null as string) as CRM_PERSON_ID,\ncast(null as string) as PROVIDER_ACRRM,\ncast(null as string) as PROVIDER_RACGP,\ncast(NULL as string) as PROVIDER_AHPRA,\ncast(null as string) as CRM_CONTACT_ID,\ncast(null as string) as PROVIDER_PSA_NUMBER,\ncast(NULL as string) as PROVIDER_GENDER,\ncast(null as string) as PROVIDER_AGE_GROUP,\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_DECEASED_STATUS,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\ncast(null as string) as PROVIDER_WORK_STATUS,\ncast(null as string) as PROVIDER_CONSENT_STATUS,\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\ncast(null as string) as PROVIDER_CIS_STATUS,\ncast(null as string) as PROVIDER_TYPE,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP` llsp \non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP` lbdv \non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP` lsbdv \non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRACTITIONER_OMOP` hpro \non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_BP_OMOP` sspb \non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nwhere \n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_phc_bp`"}, "model.nps_mi_2021.src_matched_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nselect \r\ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpo.SITE_ID as string) as SITE_ID,\r\ncast(hpo.PRACTITIONER_ID as string) as PROVIDER_ID,\r\ncast('PHC_MD' as string) as SOURCE_SYSTEM,\r\ncast('SAT_SITE_PROVIDER_PHC_MD_OMOP' as string) as SOURCE_TABLE,\r\ncast(sspb.PROVIDER_NO as string) AS PROVIDER_NUMBER,\r\ncast(sspb.PRESCRIBER_NO as string) as PRESCRIBER_NUMBER,\r\ncast(null as string) as PROVIDER_SALUTATION,\r\ncast(NULL as string) as PROVIDER_FIRSTNAME,\r\ncast(NULL as string) as PROVIDER_LASTNAME,\r\ncast(null as string) as CRM_PERSON_ID,\r\ncast(null as string) as PROVIDER_ACRRM,\r\ncast(null as string) as PROVIDER_RACGP,\r\ncast(sspb.STATE_REGISTRATION_NO as string) as PROVIDER_AHPRA,\r\ncast(null as string) as CRM_CONTACT_ID,\r\ncast(null as string) as PROVIDER_PSA_NUMBER,\r\ncast(sspb.GENDER_CODE as string) as PROVIDER_GENDER,\r\ncast(null as string) as PROVIDER_AGE_GROUP,\r\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\r\ncast(null as string) as PROVIDER_DECEASED_STATUS,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\r\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\r\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\r\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\r\ncast(null as string) as PROVIDER_WORK_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS,\r\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\r\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\r\ncast(null as string) as PROVIDER_CIS_STATUS,\r\ncast(null as string) as PROVIDER_TYPE,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\r\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\r\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PROVIDER_MD_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_MD_OMOP')}} llsp \r\non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_PHC_MD_OMOP')}} sspb\r\non llsp.HUB_SITE_PROVIDER_MD_SK = sspb.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lbdv \r\non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP')}} lsbdv \r\non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nwhere \r\n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient_matched_usual_provider", "src_matched_phc_md"], "unique_id": "model.nps_mi_2021.src_matched_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient_matched_usual_provider\\src_matched_phc_md.sql", "original_file_path": "models\\source\\patient_matched_usual_provider\\src_matched_phc_md.sql", "name": "src_matched_phc_md", "alias": "src_matched_phc_md", "checksum": {"name": "sha256", "checksum": "24f972d50b77f2641ab3e82df9d4825ecd5de1f4b2bf37f012ad170fc84e4cde"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient_matched_usual_provider\\src_matched_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2808826, "compiled_sql": "\n\n\nselect \ncast(lbdv.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpo.SITE_ID as string) as SITE_ID,\ncast(hpo.PRACTITIONER_ID as string) as PROVIDER_ID,\ncast('PHC_MD' as string) as SOURCE_SYSTEM,\ncast('SAT_SITE_PROVIDER_PHC_MD_OMOP' as string) as SOURCE_TABLE,\ncast(sspb.PROVIDER_NO as string) AS PROVIDER_NUMBER,\ncast(sspb.PRESCRIBER_NO as string) as PRESCRIBER_NUMBER,\ncast(null as string) as PROVIDER_SALUTATION,\ncast(NULL as string) as PROVIDER_FIRSTNAME,\ncast(NULL as string) as PROVIDER_LASTNAME,\ncast(null as string) as CRM_PERSON_ID,\ncast(null as string) as PROVIDER_ACRRM,\ncast(null as string) as PROVIDER_RACGP,\ncast(sspb.STATE_REGISTRATION_NO as string) as PROVIDER_AHPRA,\ncast(null as string) as CRM_CONTACT_ID,\ncast(null as string) as PROVIDER_PSA_NUMBER,\ncast(sspb.GENDER_CODE as string) as PROVIDER_GENDER,\ncast(null as string) as PROVIDER_AGE_GROUP,\ncast(null as string) as PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA,\ncast(null as string) as PROVIDER_DECEASED_STATUS,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_START_DATE,\ncast(null as string) as PROVIDER_CONTACT_RELATIONSHIP_END_DATE,\ncast(null as string) as PROVIDER_MEDICINEINSIGHT_ROLE,\ncast(null as string) as PROVIDER_REPORT_ACCESS_AUTHORISATION,\ncast(null as string) as PROVIDER_WORK_STATUS,\ncast(null as string) as PROVIDER_CONSENT_STATUS,\ncast(null as string) as PROVIDER_CONSENT_COMMENTS,\ncast(null as string) as PROVIDER_CONSENT_STATUS_START_DATE,\ncast(null as string) as PROVIDER_CONSENT_STATUS_END_DATE,\ncast(null as string) as PROVIDER_CIS_STATUS,\ncast(null as string) as PROVIDER_TYPE,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR,\ncast(null as string) as PROVIDER_GP_MATCHING_ON_NAME_INDICATOR,\nCAST(sspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP` llsp \non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_MD_OMOP` sspb\non llsp.HUB_SITE_PROVIDER_MD_SK = sspb.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP` lbdv \non llsp.HUB_LOGIN_SK = lbdv.HUB_LOGIN_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP` lsbdv \non lbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK = lsbdv.LNK_BDV_PATIENT_USUAL_PROVIDER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbdv.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nwhere \n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsbdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbdv.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_matched_phc_md`"}, "model.nps_mi_2021.CLINICAL_USER": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_clinical_user as\r\n(\r\nselect * from {{ref('src_clinical_user_bp')}}\r\nunion all \r\nselect * from {{ref('src_clinical_user_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_clinical_user_md')}}\r\nunion all\r\nselect * from {{ref('src_clinical_user_phc_md')}}\r\n)\r\nselect * from source_clinical_user", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_clinical_user_bp", "model.nps_mi_2021.src_clinical_user_phc_bp", "model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_clinical_user_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "clinical_user", "CLINICAL_USER"], "unique_id": "model.nps_mi_2021.CLINICAL_USER", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\clinical_user\\CLINICAL_USER.sql", "original_file_path": "models\\staging\\clinical_user\\CLINICAL_USER.sql", "name": "CLINICAL_USER", "alias": "CLINICAL_USER", "checksum": {"name": "sha256", "checksum": "a67674a95dffc53d84fa8eeee151dc49697d1295e481a49046fa15e341a970a8"}, "tags": [], "refs": [["src_clinical_user_bp"], ["src_clinical_user_phc_bp"], ["src_clinical_user_md"], ["src_clinical_user_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\clinical_user\\CLINICAL_USER.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2830966, "compiled_sql": "\n\nwith source_clinical_user as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_phc_md`\n)\nselect * from source_clinical_user", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`"}, "model.nps_mi_2021.src_clinical_user_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith clinical_user_bp as (\r\nselect \r\ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PROVIDER_ID,\r\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\r\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(\"BP\" as string) as SOURCE_SYSTEM,\r\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\r\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\r\ncast(NULL as string) as DOCTOR_INDICATOR,\r\ncast(NULL as string) as NURSE_INDICATOR,\r\ncast(NULL as string) as PROVIDER_CIS_STATUS,\r\ncast(NULL as string) as PROVIDER_WORK_STATUS,\r\ncast(sspb.PRACTICE_PROVIDER_INACTIVE_DATE as string) as PROVIDER_INACTIVE_DATE,\r\ncast(sspb.PRACTICE_PROVIDER_CREATED_DATETIME as string) as CREATE_DATETTIME,\r\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\r\ncast(sspb.PRACTICE_PROVIDER_UPDATED_DATETIME as string) as PROVIDER_UPDATED_DATETIME,\r\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\r\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_BP_OMOP')}} llsp \r\non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PRACTITIONER_OMOP')}} hpro \r\non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_BP_OMOP')}} sspb \r\non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK\r\nwhere \r\n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\n\r\nselect * from clinical_user_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "clinical_user", "src_clinical_user_bp"], "unique_id": "model.nps_mi_2021.src_clinical_user_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\clinical_user\\src_clinical_user_bp.sql", "original_file_path": "models\\source\\clinical_user\\src_clinical_user_bp.sql", "name": "src_clinical_user_bp", "alias": "src_clinical_user_bp", "checksum": {"name": "sha256", "checksum": "0ebefaa06e8855a225ab9fccfcf54bc5ba7e6f81e482a6b7281ce2d4ea9e63f8"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRACTITIONER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\clinical_user\\src_clinical_user_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2841387, "compiled_sql": "\n\nwith clinical_user_bp as (\nselect \ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PROVIDER_ID,\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(\"BP\" as string) as SOURCE_SYSTEM,\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\ncast(NULL as string) as DOCTOR_INDICATOR,\ncast(NULL as string) as NURSE_INDICATOR,\ncast(NULL as string) as PROVIDER_CIS_STATUS,\ncast(NULL as string) as PROVIDER_WORK_STATUS,\ncast(sspb.PRACTICE_PROVIDER_INACTIVE_DATE as string) as PROVIDER_INACTIVE_DATE,\ncast(sspb.PRACTICE_PROVIDER_CREATED_DATETIME as string) as CREATE_DATETTIME,\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\ncast(sspb.PRACTICE_PROVIDER_UPDATED_DATETIME as string) as PROVIDER_UPDATED_DATETIME,\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP` llsp \non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRACTITIONER_OMOP` hpro \non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_BP_OMOP` sspb \non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK\nwhere \n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\n\nselect * from clinical_user_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_bp`"}, "model.nps_mi_2021.src_clinical_user_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith clinical_user_md as (\r\nselect \r\ncast(hpo.SITE_ID as string) as SITE_ID,\r\ncast(hpo.PRACTITIONER_ID  as string) as PROVIDER_ID,\r\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\r\ncast(hprov.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(\"MD\" as string) as SOURCE_SYSTEM,\r\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\r\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\r\ncast(NULL as string) as DOCTOR_INDICATOR,\r\ncast(NULL as string) as NURSE_INDICATOR,\r\ncast(NULL as string) as PROVIDER_CIS_STATUS,\r\ncast(NULL as string) as PROVIDER_WORK_STATUS,\r\ncast(null as string) as PROVIDER_INACTIVE_DATE,\r\ncast(sspm.PRACTITIONER_CREATED_DATETIME as string) as CREATE_DATETTIME,\r\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\r\ncast(sspm.PRACTITIONER_UPDATED_DATETIME as string) as PROVIDER_UPDATED_DATETIME,\r\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\r\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PROVIDER_MD_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_MD_OMOP')}} llsp \r\non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_MD_OMOP')}} sspm \r\non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PRACTITIONER_OMOP')}} hpro \r\non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hprov\r\non llsp.HUB_PROVIDER_SK = hprov.HUB_PROVIDER_SK \r\nwhere \r\n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\n\r\nselect * from clinical_user_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "clinical_user", "src_clinical_user_md"], "unique_id": "model.nps_mi_2021.src_clinical_user_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\clinical_user\\src_clinical_user_md.sql", "original_file_path": "models\\source\\clinical_user\\src_clinical_user_md.sql", "name": "src_clinical_user_md", "alias": "src_clinical_user_md", "checksum": {"name": "sha256", "checksum": "3080910f249de2dcfb3eb9176f960234fb3387e135a6bb451c38f78e61de5471"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRACTITIONER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\clinical_user\\src_clinical_user_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2861395, "compiled_sql": "\n\nwith clinical_user_md as (\nselect \ncast(hpo.SITE_ID as string) as SITE_ID,\ncast(hpo.PRACTITIONER_ID  as string) as PROVIDER_ID,\ncast(hpro.PRESCRIBER_NUMBER as string) as PRESCRIBER_NUMBER,\ncast(hprov.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(\"MD\" as string) as SOURCE_SYSTEM,\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\ncast(NULL as string) as DOCTOR_INDICATOR,\ncast(NULL as string) as NURSE_INDICATOR,\ncast(NULL as string) as PROVIDER_CIS_STATUS,\ncast(NULL as string) as PROVIDER_WORK_STATUS,\ncast(null as string) as PROVIDER_INACTIVE_DATE,\ncast(sspm.PRACTITIONER_CREATED_DATETIME as string) as CREATE_DATETTIME,\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\ncast(sspm.PRACTITIONER_UPDATED_DATETIME as string) as PROVIDER_UPDATED_DATETIME,\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP` llsp \non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_MD_OMOP` sspm \non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRACTITIONER_OMOP` hpro \non llsp.HUB_PRACTITIONER_SK = hpro.HUB_PRACTITIONER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hprov\non llsp.HUB_PROVIDER_SK = hprov.HUB_PROVIDER_SK \nwhere \n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\n\nselect * from clinical_user_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_md`"}, "model.nps_mi_2021.DIAGNOSIS": {"raw_sql": "SELECT\n    LNK_BDV.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    SAT_BDV.OMD_NPS_SITE_ID AS SITE_ID,\n    SAT_BDV.DIAGNOSIS_ID AS DIAGNOSIS_ID,\n    SAT_BDV.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP' AS DIAGNOSIS_SOURCE_TABLE,\n    SAT_BDV.DIAGNOSIS_TYPE AS DIAGNOSIS_TYPE,\n    SAT_BDV.DIAGNOSIS_NAME AS DIAGNOSIS_REASON,\n    SAT_BDV.DIAGNOSIS_CODE AS DIAGNOSIS_REASON_CODE,\n    CAST(SAT_BDV.DIAGNOSIS_DATE AS STRING) AS DIAGNOSIS_DATE,\n    SAT_BDV.CIS_CODED_STATUS AS CIS_CODED_STATUS,\n    SAT_BDV.DIAGNOSIS_STATUS_ACTIVE_FLAG AS DIAGNOSIS_STATUS_ACTIVE_FLAG,\n    SAT_BDV.CONFIDENTIAL_FLAG AS CONFIDENTIAL_FLAG,\n    SAT_BDV.SUMMARY_FLAG AS SUMMARY_FLAG,\n    SAT_BDV.DIFFERENTIAL_FLAG AS DIFFERENTIAL_FLAG,\n    SAT_BDV.PROVISIONAL_FLAG AS PROVISIONAL_FLAG,\n    CAST(SAT_BDV.CIS_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME,\n    CAST(SAT_BDV.CIS_CREATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\n    CAST(SAT_BDV.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_BDV.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_BDV.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_BDV.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_BDV.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_BDV.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_BDV.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_BDV.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** BDV table joins **/\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_BDV_DIAGNOSIS_OMOP')}} HUB_BDV\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_BDV_DIAGNOSIS_OMOP')}} LNK_BDV\nON\n     HUB_BDV.HUB_BDV_DIAGNOSIS_SK = LNK_BDV.HUB_BDV_DIAGNOSIS_SK\nJOIN    \n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP')}} SAT_BDV\nON\n    LNK_BDV.HUB_BDV_DIAGNOSIS_SK = SAT_BDV.HUB_BDV_DIAGNOSIS_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_BDV_DIAGNOSIS_OMOP')}} LSAT_BDV\nON\n\tLNK_BDV.LNK_BDV_DIAGNOSIS_SK = LSAT_BDV.LNK_BDV_DIAGNOSIS_SK\nJOIN\n/** Patient table joins **/\n\t{{ref('src_active_patients')}} ACTIVE_PATIENTS\nON\n\tLNK_BDV.HUB_SITE_PATIENT_SK = ACTIVE_PATIENTS.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_BDV.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_BDV.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND LSAT_BDV.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_BDV.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_DIAGNOSIS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_DIAGNOSIS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_DIAGNOSIS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP", "model.nps_mi_2021.src_active_patients"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "diagnosis", "DIAGNOSIS"], "unique_id": "model.nps_mi_2021.DIAGNOSIS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\diagnosis\\DIAGNOSIS.sql", "original_file_path": "models\\staging\\diagnosis\\DIAGNOSIS.sql", "name": "DIAGNOSIS", "alias": "DIAGNOSIS", "checksum": {"name": "sha256", "checksum": "01ce929ae222c81d095977943f74876f716199c570de98e6d79cda23164ad775"}, "tags": [], "refs": [["src_active_patients"]], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_DIAGNOSIS_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_DIAGNOSIS_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_DIAGNOSIS_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\diagnosis\\DIAGNOSIS.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.288702, "compiled_sql": "SELECT\n    LNK_BDV.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    SAT_BDV.OMD_NPS_SITE_ID AS SITE_ID,\n    SAT_BDV.DIAGNOSIS_ID AS DIAGNOSIS_ID,\n    SAT_BDV.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP' AS DIAGNOSIS_SOURCE_TABLE,\n    SAT_BDV.DIAGNOSIS_TYPE AS DIAGNOSIS_TYPE,\n    SAT_BDV.DIAGNOSIS_NAME AS DIAGNOSIS_REASON,\n    SAT_BDV.DIAGNOSIS_CODE AS DIAGNOSIS_REASON_CODE,\n    CAST(SAT_BDV.DIAGNOSIS_DATE AS STRING) AS DIAGNOSIS_DATE,\n    SAT_BDV.CIS_CODED_STATUS AS CIS_CODED_STATUS,\n    SAT_BDV.DIAGNOSIS_STATUS_ACTIVE_FLAG AS DIAGNOSIS_STATUS_ACTIVE_FLAG,\n    SAT_BDV.CONFIDENTIAL_FLAG AS CONFIDENTIAL_FLAG,\n    SAT_BDV.SUMMARY_FLAG AS SUMMARY_FLAG,\n    SAT_BDV.DIFFERENTIAL_FLAG AS DIFFERENTIAL_FLAG,\n    SAT_BDV.PROVISIONAL_FLAG AS PROVISIONAL_FLAG,\n    CAST(SAT_BDV.CIS_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME,\n    CAST(SAT_BDV.CIS_CREATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\n    CAST(SAT_BDV.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_BDV.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_BDV.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_BDV.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_BDV.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_BDV.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_BDV.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_BDV.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** BDV table joins **/\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_DIAGNOSIS_OMOP` HUB_BDV\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_DIAGNOSIS_OMOP` LNK_BDV\nON\n     HUB_BDV.HUB_BDV_DIAGNOSIS_SK = LNK_BDV.HUB_BDV_DIAGNOSIS_SK\nJOIN    \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP` SAT_BDV\nON\n    LNK_BDV.HUB_BDV_DIAGNOSIS_SK = SAT_BDV.HUB_BDV_DIAGNOSIS_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_DIAGNOSIS_OMOP` LSAT_BDV\nON\n\tLNK_BDV.LNK_BDV_DIAGNOSIS_SK = LSAT_BDV.LNK_BDV_DIAGNOSIS_SK\nJOIN\n/** Patient table joins **/\n\t`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_active_patients` ACTIVE_PATIENTS\nON\n\tLNK_BDV.HUB_SITE_PATIENT_SK = ACTIVE_PATIENTS.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_BDV.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_BDV.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND LSAT_BDV.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_BDV.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`DIAGNOSIS`"}, "model.nps_mi_2021.SCRIPT_ITEM": {"raw_sql": "with source_script_item as\n(\nselect * from {{ref('src_script_item_grh_md')}}\nunion all \nselect * from {{ref('src_script_item_grh_bp')}}\nunion all\nselect * from {{ref('src_script_item_phc_md')}}\nunion all\nselect * from {{ref('src_script_item_phc_bp')}}\n)\nselect * from source_script_item", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_phc_md", "model.nps_mi_2021.src_script_item_phc_bp"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "script_item", "SCRIPT_ITEM"], "unique_id": "model.nps_mi_2021.SCRIPT_ITEM", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\script_item\\SCRIPT_ITEM.sql", "original_file_path": "models\\staging\\script_item\\SCRIPT_ITEM.sql", "name": "SCRIPT_ITEM", "alias": "SCRIPT_ITEM", "checksum": {"name": "sha256", "checksum": "4868a722bdd01b9760469c85a33ac537045dc7d2ffce71511c4fc07d751706b7"}, "tags": [], "refs": [["src_script_item_grh_md"], ["src_script_item_grh_bp"], ["src_script_item_phc_md"], ["src_script_item_phc_bp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\script_item\\SCRIPT_ITEM.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2907503, "compiled_sql": "with source_script_item as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_grh_md`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_grh_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_phc_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_phc_bp`\n)\nselect * from source_script_item", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SCRIPT_ITEM`"}, "model.nps_mi_2021.src_script_item_grh_bp": {"raw_sql": "{{config(materialized='view')}}\n\nwith script_item_grh_bp as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_BP_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(SAT_SCRIPT_ITEM.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tCAST(SAT_SCRIPT_ITEM.FREQUENCY AS STRING) AS FREQUENCY,\n\tSAT_SCRIPT_ITEM.PRN AS PRN,\n\tCAST(SAT_SCRIPT_ITEM.ROUTE AS STRING) AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tCAST(SAT_SCRIPT_ITEM.QUANTITY AS STRING) AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_MEDICINE_PRESCRIPTION.DRUG_NAME AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,\n\tCAST(SAT_SCRIPT.RESTRICTION_CODE AS STRING)\tAS RESTRICTION_CODE,\n\tSAT_SCRIPT.AUTHORITY_NUMBER AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.CREATED_BY AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.CREATED_DATETIME AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.UPDATED_BY AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.UPDATED_DATETIME AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT.SCRIPT_DATE AS SCRIPT_DATE,\n\tSAT_SCRIPT.PRINT_DATE AS PRINT_DATE,\n\tSAT_SCRIPT.LOCATION_ID AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tSAT_SCRIPT.CREATED_BY AS SCRIPT_CREATED_BY,\n\tSAT_SCRIPT.CREATED_DATETIME AS SCRIPT_CREATED_DATETIME,\n\tSAT_SCRIPT.UPDATED_BY AS SCRIPT_UPDATED_BY,\n\tSAT_SCRIPT.UPDATED_DATETIME AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_ITEM_OMOP')}} HUB_SCRIPT_ITEM\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_ITEM_BP_OMOP')}} SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_SCRIPT_SCRIPT_ITEM_OMOP')}} LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_SCRIPT_SCRIPT_ITEM_OMOP')}} LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_OMOP')}} HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_BP_OMOP')}} SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PRESCRIPTION_BP_OMOP')}} SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_BP_OMOP')}} SAT_PATIENT_GRH_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_grh_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "script_item", "src_script_item_grh_bp"], "unique_id": "model.nps_mi_2021.src_script_item_grh_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\script_item\\src_script_item_grh_bp.sql", "original_file_path": "models\\source\\script_item\\src_script_item_grh_bp.sql", "name": "src_script_item_grh_bp", "alias": "src_script_item_grh_bp", "checksum": {"name": "sha256", "checksum": "3a881381ac50c329442fbe8490ed96156adb171b89108bf3607fd98807fd4c28"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PRESCRIPTION_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\script_item\\src_script_item_grh_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.292751, "compiled_sql": "\n\nwith script_item_grh_bp as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_BP_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(SAT_SCRIPT_ITEM.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tCAST(SAT_SCRIPT_ITEM.FREQUENCY AS STRING) AS FREQUENCY,\n\tSAT_SCRIPT_ITEM.PRN AS PRN,\n\tCAST(SAT_SCRIPT_ITEM.ROUTE AS STRING) AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tCAST(SAT_SCRIPT_ITEM.QUANTITY AS STRING) AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_MEDICINE_PRESCRIPTION.DRUG_NAME AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,\n\tCAST(SAT_SCRIPT.RESTRICTION_CODE AS STRING)\tAS RESTRICTION_CODE,\n\tSAT_SCRIPT.AUTHORITY_NUMBER AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.CREATED_BY AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.CREATED_DATETIME AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.UPDATED_BY AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.UPDATED_DATETIME AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT.SCRIPT_DATE AS SCRIPT_DATE,\n\tSAT_SCRIPT.PRINT_DATE AS PRINT_DATE,\n\tSAT_SCRIPT.LOCATION_ID AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tSAT_SCRIPT.CREATED_BY AS SCRIPT_CREATED_BY,\n\tSAT_SCRIPT.CREATED_DATETIME AS SCRIPT_CREATED_DATETIME,\n\tSAT_SCRIPT.UPDATED_BY AS SCRIPT_UPDATED_BY,\n\tSAT_SCRIPT.UPDATED_DATETIME AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_ITEM_OMOP` HUB_SCRIPT_ITEM\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_BP_OMOP` SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SCRIPT_SCRIPT_ITEM_OMOP` LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SCRIPT_SCRIPT_ITEM_OMOP` LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_OMOP` HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_BP_OMOP` SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PRESCRIPTION_BP_OMOP` SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` SAT_PATIENT_GRH_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_grh_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_grh_bp`"}, "model.nps_mi_2021.src_script_item_grh_md": {"raw_sql": "{{config(materialized='view')}}\n\nwith script_item_grh_md as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_MD_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(NULL AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tSAT_SCRIPT_ITEM.FREQUENCY AS FREQUENCY,\n\tCAST(NULL AS FLOAT64) AS PRN,\n\tSAT_SCRIPT_ITEM.ROUTE_CODE AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tSAT_SCRIPT_ITEM.QUANTITY AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_SCRIPT_ITEM.ITEM AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n\tSAT_SCRIPT_ITEM.SCRIPT_CODE AS RESTRICTION_CODE,\n\tSAT_SCRIPT_ITEM.AUTHORITY_NO AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_DATETIME AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.GENERIC_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT_ITEM.SCRIPT_DATE AS SCRIPT_DATE,\n\tCAST(NULL AS STRING) AS PRINT_DATE,\n\tCAST(NULL AS FLOAT64) AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_CREATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_CREATED_DATETIME,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_UPDATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_ITEM_OMOP')}} HUB_SCRIPT_ITEM\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_ITEM_MD_OMOP')}} SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_SCRIPT_SCRIPT_ITEM_OMOP')}} LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_SCRIPT_SCRIPT_ITEM_OMOP')}} LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_OMOP')}} HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_MD_OMOP')}} SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PRESCRIPTION_MD_OMOP')}} SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_MD_OMOP')}} SAT_PATIENT_GRH_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_grh_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "script_item", "src_script_item_grh_md"], "unique_id": "model.nps_mi_2021.src_script_item_grh_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\script_item\\src_script_item_grh_md.sql", "original_file_path": "models\\source\\script_item\\src_script_item_grh_md.sql", "name": "src_script_item_grh_md", "alias": "src_script_item_grh_md", "checksum": {"name": "sha256", "checksum": "8e5999704cdbc6afc8da8711141c9cbe7842908528ce303a13245275b282d6db"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PRESCRIPTION_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\script_item\\src_script_item_grh_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.294868, "compiled_sql": "\n\nwith script_item_grh_md as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_MD_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(NULL AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tSAT_SCRIPT_ITEM.FREQUENCY AS FREQUENCY,\n\tCAST(NULL AS FLOAT64) AS PRN,\n\tSAT_SCRIPT_ITEM.ROUTE_CODE AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tSAT_SCRIPT_ITEM.QUANTITY AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_SCRIPT_ITEM.ITEM AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n\tSAT_SCRIPT_ITEM.SCRIPT_CODE AS RESTRICTION_CODE,\n\tSAT_SCRIPT_ITEM.AUTHORITY_NO AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_DATETIME AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.GENERIC_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT_ITEM.SCRIPT_DATE AS SCRIPT_DATE,\n\tCAST(NULL AS STRING) AS PRINT_DATE,\n\tCAST(NULL AS FLOAT64) AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_CREATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_CREATED_DATETIME,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_UPDATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_ITEM_OMOP` HUB_SCRIPT_ITEM\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_MD_OMOP` SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SCRIPT_SCRIPT_ITEM_OMOP` LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SCRIPT_SCRIPT_ITEM_OMOP` LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_OMOP` HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_MD_OMOP` SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PRESCRIPTION_MD_OMOP` SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` SAT_PATIENT_GRH_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_grh_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_grh_md`"}, "model.nps_mi_2021.src_script_item_phc_bp": {"raw_sql": "{{config(materialized='view')}}\n\nwith script_item_phc_bp as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_PHC_BP_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(SAT_SCRIPT_ITEM.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tCAST(SAT_SCRIPT_ITEM.FREQUENCY AS STRING) AS FREQUENCY,\n\tSAT_SCRIPT_ITEM.PRN AS PRN,\n\tCAST(SAT_SCRIPT_ITEM.ROUTE AS STRING) AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tCAST(SAT_SCRIPT_ITEM.QUANTITY AS STRING) AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_SCRIPT_ITEM.PRODUCT_DESCRIPTION AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,\n\tCAST(SAT_SCRIPT.RESTRICTION_CODE AS STRING)\tAS RESTRICTION_CODE,\n\tSAT_SCRIPT.AUTHORITY_NUMBER AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.CREATEDBY AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.CREATED AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.UPDATEDBY AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.UPDATED AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT.SCRIPT_DATE AS SCRIPT_DATE,\n\tSAT_SCRIPT.PRINT_DATE AS PRINT_DATE,\n\tSAT_SCRIPT.LOCATION_ID AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tSAT_SCRIPT.CREATEDBY AS SCRIPT_CREATED_BY,\n\tSAT_SCRIPT.CREATED AS SCRIPT_CREATED_DATETIME,\n\tSAT_SCRIPT.UPDATEDBY AS SCRIPT_UPDATED_BY,\n\tSAT_SCRIPT.UPDATED AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_ITEM_OMOP')}} HUB_SCRIPT_ITEM\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_ITEM_PHC_BP_OMOP')}} SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_SCRIPT_SCRIPT_ITEM_OMOP')}} LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_SCRIPT_SCRIPT_ITEM_OMOP')}} LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_OMOP')}} HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_PHC_BP_OMOP')}} SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PHC_BP_OMOP')}} SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\t\n/** PATIENT **/\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_PHC_BP_OMOP')}} SAT_PATIENT_PHC_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "script_item", "src_script_item_phc_bp"], "unique_id": "model.nps_mi_2021.src_script_item_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\script_item\\src_script_item_phc_bp.sql", "original_file_path": "models\\source\\script_item\\src_script_item_phc_bp.sql", "name": "src_script_item_phc_bp", "alias": "src_script_item_phc_bp", "checksum": {"name": "sha256", "checksum": "ece7f781ecece81960626331e9de24be729ed284fdb99381cbbc7410e140bad3"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\script_item\\src_script_item_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.296867, "compiled_sql": "\n\nwith script_item_phc_bp as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_PHC_BP_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(SAT_SCRIPT_ITEM.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tCAST(SAT_SCRIPT_ITEM.FREQUENCY AS STRING) AS FREQUENCY,\n\tSAT_SCRIPT_ITEM.PRN AS PRN,\n\tCAST(SAT_SCRIPT_ITEM.ROUTE AS STRING) AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tCAST(SAT_SCRIPT_ITEM.QUANTITY AS STRING) AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_SCRIPT_ITEM.PRODUCT_DESCRIPTION AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,\n\tCAST(SAT_SCRIPT.RESTRICTION_CODE AS STRING)\tAS RESTRICTION_CODE,\n\tSAT_SCRIPT.AUTHORITY_NUMBER AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.CREATEDBY AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.CREATED AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.UPDATEDBY AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.UPDATED AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT.SCRIPT_DATE AS SCRIPT_DATE,\n\tSAT_SCRIPT.PRINT_DATE AS PRINT_DATE,\n\tSAT_SCRIPT.LOCATION_ID AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tSAT_SCRIPT.CREATEDBY AS SCRIPT_CREATED_BY,\n\tSAT_SCRIPT.CREATED AS SCRIPT_CREATED_DATETIME,\n\tSAT_SCRIPT.UPDATEDBY AS SCRIPT_UPDATED_BY,\n\tSAT_SCRIPT.UPDATED AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_ITEM_OMOP` HUB_SCRIPT_ITEM\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_PHC_BP_OMOP` SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SCRIPT_SCRIPT_ITEM_OMOP` LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SCRIPT_SCRIPT_ITEM_OMOP` LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_OMOP` HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_PHC_BP_OMOP` SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PHC_BP_OMOP` SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\t\n/** PATIENT **/\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` SAT_PATIENT_PHC_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_phc_bp`"}, "model.nps_mi_2021.src_script_item_phc_md": {"raw_sql": "{{config(materialized='view')}}\n\nwith script_item_phc_md as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_PHC_MD_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(NULL AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tSAT_SCRIPT_ITEM.FREQUENCY AS FREQUENCY,\n\tCAST(NULL AS FLOAT64) AS PRN,\n\tSAT_SCRIPT_ITEM.ROUTE_CODE AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tSAT_SCRIPT_ITEM.QUANTITY AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_SCRIPT_ITEM.ITEM AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n\tSAT_SCRIPT_ITEM.SCRIPT_CODE AS RESTRICTION_CODE,\n\tSAT_SCRIPT_ITEM.AUTHORITY_NO AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_DATETIME AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.GENERIC_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT_ITEM.SCRIPT_DATE AS SCRIPT_DATE,\n\tCAST(NULL AS STRING) AS PRINT_DATE,\n\tCAST(NULL AS FLOAT64) AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_CREATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_CREATED_DATETIME,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_UPDATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_ITEM_OMOP')}} HUB_SCRIPT_ITEM\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_ITEM_PHC_MD_OMOP')}} SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_SCRIPT_SCRIPT_ITEM_OMOP')}} LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_SCRIPT_SCRIPT_ITEM_OMOP')}} LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SCRIPT_OMOP')}} HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SCRIPT_PHC_MD_OMOP')}} SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PHC_MD_OMOP')}} SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n/** PATIENT **/\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_PHC_MD_OMOP')}} SAT_PATIENT_PHC_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "script_item", "src_script_item_phc_md"], "unique_id": "model.nps_mi_2021.src_script_item_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\script_item\\src_script_item_phc_md.sql", "original_file_path": "models\\source\\script_item\\src_script_item_phc_md.sql", "name": "src_script_item_phc_md", "alias": "src_script_item_phc_md", "checksum": {"name": "sha256", "checksum": "6d06885cfebcf295d13492dad4655ceace07122f60e0bf778d85f64667e4fa68"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SCRIPT_SCRIPT_ITEM_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\script_item\\src_script_item_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.2988677, "compiled_sql": "\n\nwith script_item_phc_md as (\nSELECT\n    LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_SCRIPT_ITEM.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_SCRIPT_ITEM.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_SCRIPT_ITEM_PHC_MD_OMOP' AS SOURCE_TABLE,\n    HUB_SCRIPT_ITEM.SCRIPT_ITEM_ID AS SCRIPT_ITEM_ID,\n\tHUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n\tCAST(NULL AS STRING) AS PROVIDER_ID,\n\tCAST(NULL AS STRING) AS RECORD_STATUS,\n\tSAT_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n\tSAT_SCRIPT_ITEM.DOSE AS DOSE,\n\tSAT_SCRIPT_ITEM.FREQUENCY AS FREQUENCY,\n\tCAST(NULL AS FLOAT64) AS PRN,\n\tSAT_SCRIPT_ITEM.ROUTE_CODE AS ROUTE,\n\tSAT_SCRIPT_ITEM.INSTRUCTIONS AS INSTRUCTIONS,\n\tSAT_SCRIPT_ITEM.QUANTITY AS QUANTITY,\n\tSAT_SCRIPT_ITEM.REPEATS AS REPEATS,\n\tSAT_SCRIPT_ITEM.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n\tCAST(SAT_SCRIPT_ITEM.REGULATION_24 AS STRING) AS REGULATION_24,\n\tSAT_SCRIPT_ITEM.ITEM AS MEDICINE_NAME,\n\tSAT_MEDICINE_PRESCRIPTION.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n\tSAT_SCRIPT_ITEM.SCRIPT_CODE AS RESTRICTION_CODE,\n\tSAT_SCRIPT_ITEM.AUTHORITY_NO AS AUTHORITY_INDICATION,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS CREATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n\tSAT_SCRIPT_ITEM.STAMP_USER_ID AS UPDATED_BY,\n\tSAT_SCRIPT_ITEM.STAMP_DATETIME AS UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.GENERIC_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n\tCAST(HUB_SCRIPT.SCRIPT_ID AS STRING) AS SCRIPT_ID,\n\tSAT_SCRIPT_ITEM.SCRIPT_DATE AS SCRIPT_DATE,\n\tCAST(NULL AS STRING) AS PRINT_DATE,\n\tCAST(NULL AS FLOAT64) AS LOCATION_ID,\n\tCAST(NULL AS FLOAT64) AS IS_IMPORTED,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_CREATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_CREATED_DATETIME,\n\tCAST(NULL AS FLOAT64) AS SCRIPT_UPDATED_BY,\n\tCAST(NULL AS STRING) AS SCRIPT_UPDATED_DATETIME,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n\tSAT_SCRIPT_ITEM.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n\tCAST(SAT_SCRIPT_ITEM.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n\tSAT_SCRIPT_ITEM.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n\tSAT_SCRIPT_ITEM.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** SCRIPT ITEM **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_ITEM_OMOP` HUB_SCRIPT_ITEM\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_PHC_MD_OMOP` SAT_SCRIPT_ITEM\nON\n\tHUB_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = SAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SCRIPT_SCRIPT_ITEM_OMOP` LNK_SCRIPT_ITEM\nON\n\tSAT_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_ITEM_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SCRIPT_SCRIPT_ITEM_OMOP` LSAT_SCRIPT_ITEM\nON\n\tLNK_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK = LSAT_SCRIPT_ITEM.LNK_SCRIPT_SCRIPT_ITEM_SK\nJOIN\n/** SCRIPT **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_OMOP` HUB_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = LNK_SCRIPT_ITEM.HUB_SCRIPT_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_PHC_MD_OMOP` SAT_SCRIPT\nON\n\tHUB_SCRIPT.HUB_SCRIPT_SK = SAT_SCRIPT.HUB_SCRIPT_SK\n/** PRESCRIPTION **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = LNK_SCRIPT_ITEM.HUB_MEDICINE_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = LNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_PRESCRIPTION_SK = HUB_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PHC_MD_OMOP` SAT_MEDICINE_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\n\tAND LNK_SCRIPT_ITEM.HUB_MEDICINE_SK = SAT_MEDICINE_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n/** PATIENT **/\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_SCRIPT_ITEM.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\n\tAND LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` SAT_PATIENT_PHC_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_SCRIPT.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_SCRIPT.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_MEDICINE_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from script_item_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_script_item_phc_md`"}, "model.nps_mi_2021.PRESCRIPTION": {"raw_sql": "with source_prescription as\n(\nselect * from {{ref('src_prescription_grh_md')}}\nunion all \nselect * from {{ref('src_prescription_grh_bp')}}\nunion all\nselect * from {{ref('src_prescription_phc_md')}}\nunion all\nselect * from {{ref('src_prescription_phc_bp')}}\n)\nselect * from source_prescription", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_prescription_phc_bp"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "prescription", "PRESCRIPTION"], "unique_id": "model.nps_mi_2021.PRESCRIPTION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\prescription\\PRESCRIPTION.sql", "original_file_path": "models\\staging\\prescription\\PRESCRIPTION.sql", "name": "PRESCRIPTION", "alias": "PRESCRIPTION", "checksum": {"name": "sha256", "checksum": "46a110a78e95282d899d74923934ed912b43ed2547236a1f80e49502878fc65d"}, "tags": [], "refs": [["src_prescription_grh_md"], ["src_prescription_grh_bp"], ["src_prescription_phc_md"], ["src_prescription_phc_bp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\prescription\\PRESCRIPTION.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3018677, "compiled_sql": "with source_prescription as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_grh_md`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_grh_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_phc_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_phc_bp`\n)\nselect * from source_prescription", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRESCRIPTION`"}, "model.nps_mi_2021.src_prescription_grh_bp": {"raw_sql": "{{config(materialized='view')}}\n\nwith prescription_grh_bp as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_MEDICINE.DRUG_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,\n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n    CAST(SAT_PRESCRIPTION.RESTRICTION_CODE AS STRING) AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE AS STRING) AS ROUTE,\n    SAT_PRESCRIPTION.FIRST_DATE AS FIRST_DATE,\n    SAT_PRESCRIPTION.LAST_DATE AS LAST_DATE,\n    SAT_PRESCRIPTION.AUTHORITY_INDICATION AS AUTHORITY_INDICATION,\n    SAT_PRESCRIPTION.DELETION_DATE AS DELETION_DATE,\n    SAT_PRESCRIPTION.DELETION_REASON AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.RX_STATUS AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.INDICATION AS REASON,\n    CAST(SAT_PRESCRIPTION.INDICATION_CODE AS STRING) AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.CREATED_BY AS CREATED_BY,\n    SAT_PRESCRIPTION.CREATED_DATETIME AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.UPDATED_BY AS UPDATED_BY,\n    SAT_PRESCRIPTION.UPDATED_DATETIME AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    SAT_MEDICINE_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n    SAT_MEDICINE_SCRIPT_ITEM.COMPANY_FORM AS FORM,\n    SAT_MEDICINE_SCRIPT_ITEM.DRUG_NAME AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    CAST(NULL AS STRING) AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.USE_PBS_QUANTITY AS STRING) AS PBS_STATUS,\n    CAST(NULL AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP')}} SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_MEDICINE_OMOP')}} HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PRESCRIPTION_BP_OMOP')}} SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\nJOIN\n/** MEDICINE SCRIPT ITEM **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP')}} SAT_MEDICINE_SCRIPT_ITEM\nON\n\tSAT_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE_SCRIPT_ITEM.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_BP_OMOP')}} SAT_PATIENT_GRH_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_GRH_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from prescription_grh_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "prescription", "src_prescription_grh_bp"], "unique_id": "model.nps_mi_2021.src_prescription_grh_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\prescription\\src_prescription_grh_bp.sql", "original_file_path": "models\\source\\prescription\\src_prescription_grh_bp.sql", "name": "src_prescription_grh_bp", "alias": "src_prescription_grh_bp", "checksum": {"name": "sha256", "checksum": "2a8e01bbda2a9ce84409a5f795317669e0b0a608c43a4079156a98a734536475"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PRESCRIPTION_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_MEDICINE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\prescription\\src_prescription_grh_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.303023, "compiled_sql": "\n\nwith prescription_grh_bp as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_MEDICINE.DRUG_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,\n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n    CAST(SAT_PRESCRIPTION.RESTRICTION_CODE AS STRING) AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE AS STRING) AS ROUTE,\n    SAT_PRESCRIPTION.FIRST_DATE AS FIRST_DATE,\n    SAT_PRESCRIPTION.LAST_DATE AS LAST_DATE,\n    SAT_PRESCRIPTION.AUTHORITY_INDICATION AS AUTHORITY_INDICATION,\n    SAT_PRESCRIPTION.DELETION_DATE AS DELETION_DATE,\n    SAT_PRESCRIPTION.DELETION_REASON AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.RX_STATUS AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.INDICATION AS REASON,\n    CAST(SAT_PRESCRIPTION.INDICATION_CODE AS STRING) AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.CREATED_BY AS CREATED_BY,\n    SAT_PRESCRIPTION.CREATED_DATETIME AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.UPDATED_BY AS UPDATED_BY,\n    SAT_PRESCRIPTION.UPDATED_DATETIME AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    SAT_MEDICINE_SCRIPT_ITEM.STRENGTH AS STRENGTH,\n    SAT_MEDICINE_SCRIPT_ITEM.COMPANY_FORM AS FORM,\n    SAT_MEDICINE_SCRIPT_ITEM.DRUG_NAME AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    CAST(NULL AS STRING) AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.USE_PBS_QUANTITY AS STRING) AS PBS_STATUS,\n    CAST(NULL AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP` SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_MEDICINE_OMOP` HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PRESCRIPTION_BP_OMOP` SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\nJOIN\n/** MEDICINE SCRIPT ITEM **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP` SAT_MEDICINE_SCRIPT_ITEM\nON\n\tSAT_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE_SCRIPT_ITEM.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` SAT_PATIENT_GRH_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_GRH_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from prescription_grh_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_grh_bp`"}, "model.nps_mi_2021.src_prescription_grh_md": {"raw_sql": "{{config(materialized='view')}}\n\nwith prescription_grh_md as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.CEASED AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_MEDICINE.TRADE_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_GAP AS REPEAT_INTERVAL,\n    SAT_PRESCRIPTION.SCRIPT_CODE AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE_CODE AS STRING) AS ROUTE,\n    CAST(SAT_PRESCRIPTION.FIRST_DATE AS STRING) AS FIRST_DATE,\n    CAST(SAT_PRESCRIPTION.LAST_DATE AS STRING) AS LAST_DATE,\n    CAST(NULL AS STRING) AS AUTHORITY_INDICATION,\n    CAST(SAT_PRESCRIPTION.CEASED_DATE AS STRING) AS DELETION_DATE,\n    SAT_PRESCRIPTION.REASON_DELETION AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.LIMITED AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.REASON AS REASON,\n    SAT_PRESCRIPTION.REASON_CODE AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.STAMP_CREATED_USER_ID AS CREATED_BY,\n    SAT_PRESCRIPTION.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.STAMP_USER_ID AS UPDATED_BY,\n    SAT_PRESCRIPTION.STAMP_DATETIME AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    CAST(NULL AS STRING) AS STRENGTH,\n    SAT_MEDICINE_SCRIPT_ITEM.THERAPEUTIC_CLASS AS FORM,\n    SAT_MEDICINE_SCRIPT_ITEM.TRADE_NAME AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.GENERIC AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    CAST(NULL AS STRING) AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.RPBS AS STRING) AS PBS_STATUS,\n    CAST(SAT_PRESCRIPTION.SOURCE_CODE AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP')}} SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_MEDICINE_OMOP')}} HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PRESCRIPTION_MD_OMOP')}} SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\nJOIN\n/** MEDICINE SCRIPT ITEM **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP')}} SAT_MEDICINE_SCRIPT_ITEM\nON\n\tSAT_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE_SCRIPT_ITEM.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_MD_OMOP')}} SAT_PATIENT_GRH_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_GRH_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n    \n)\n\nselect * from prescription_grh_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "prescription", "src_prescription_grh_md"], "unique_id": "model.nps_mi_2021.src_prescription_grh_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\prescription\\src_prescription_grh_md.sql", "original_file_path": "models\\source\\prescription\\src_prescription_grh_md.sql", "name": "src_prescription_grh_md", "alias": "src_prescription_grh_md", "checksum": {"name": "sha256", "checksum": "5b8911a5552a64647f4630559189acd5469b4217a7faf0e650d631bf044ba960"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PRESCRIPTION_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_MEDICINE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\prescription\\src_prescription_grh_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3060648, "compiled_sql": "\n\nwith prescription_grh_md as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.CEASED AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_MEDICINE.TRADE_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_GAP AS REPEAT_INTERVAL,\n    SAT_PRESCRIPTION.SCRIPT_CODE AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE_CODE AS STRING) AS ROUTE,\n    CAST(SAT_PRESCRIPTION.FIRST_DATE AS STRING) AS FIRST_DATE,\n    CAST(SAT_PRESCRIPTION.LAST_DATE AS STRING) AS LAST_DATE,\n    CAST(NULL AS STRING) AS AUTHORITY_INDICATION,\n    CAST(SAT_PRESCRIPTION.CEASED_DATE AS STRING) AS DELETION_DATE,\n    SAT_PRESCRIPTION.REASON_DELETION AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.LIMITED AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.REASON AS REASON,\n    SAT_PRESCRIPTION.REASON_CODE AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.STAMP_CREATED_USER_ID AS CREATED_BY,\n    SAT_PRESCRIPTION.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.STAMP_USER_ID AS UPDATED_BY,\n    SAT_PRESCRIPTION.STAMP_DATETIME AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    CAST(NULL AS STRING) AS STRENGTH,\n    SAT_MEDICINE_SCRIPT_ITEM.THERAPEUTIC_CLASS AS FORM,\n    SAT_MEDICINE_SCRIPT_ITEM.TRADE_NAME AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.GENERIC AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    CAST(NULL AS STRING) AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.RPBS AS STRING) AS PBS_STATUS,\n    CAST(SAT_PRESCRIPTION.SOURCE_CODE AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP` SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_MEDICINE_OMOP` HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PRESCRIPTION_MD_OMOP` SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\nJOIN\n/** MEDICINE SCRIPT ITEM **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP` SAT_MEDICINE_SCRIPT_ITEM\nON\n\tSAT_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE_SCRIPT_ITEM.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` SAT_PATIENT_GRH_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE_SCRIPT_ITEM.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_GRH_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_GRH_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n    \n)\n\nselect * from prescription_grh_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_grh_md`"}, "model.nps_mi_2021.src_prescription_phc_bp": {"raw_sql": "{{config(materialized='view')}}\n\nwith prescription_phc_bp as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_PRESCRIPTION.DRUG_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,    \n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n    CAST(SAT_PRESCRIPTION.RESTRICTION_CODE AS STRING) AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE AS STRING) AS ROUTE,\n    SAT_PRESCRIPTION.FIRST_DATE AS FIRST_DATE,\n    SAT_PRESCRIPTION.LAST_DATE AS LAST_DATE,    \n    SAT_PRESCRIPTION.AUTHORITY_INDICATION AS AUTHORITY_INDICATION,\n    SAT_PRESCRIPTION.DELETIONDATE AS DELETION_DATE,\n    SAT_PRESCRIPTION.DELETION_REASON AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.RX_STATUS AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.INDICATION AS REASON,\n    CAST(SAT_PRESCRIPTION.INDICATION_CODE AS STRING) AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.CREATEDBY AS CREATED_BY,\n    SAT_PRESCRIPTION.CREATED AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.UPDATEDBY AS UPDATED_BY,\n    SAT_PRESCRIPTION.UPDATED AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    SAT_MEDICINE.STRENGTH AS STRENGTH,\n    SAT_MEDICINE.COMPANY_FORM AS FORM,\n    CAST(SAT_MEDICINE.PRODUCT_NAME_ID AS STRING) AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    CAST(NULL AS STRING) AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.USE_PBS_QUANTITY AS STRING) AS PBS_STATUS,\n    CAST(NULL AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP')}} SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_MEDICINE_OMOP')}} HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PHC_BP_OMOP')}} SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_PHC_BP_OMOP')}} SAT_PATIENT_PHC_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_PHC_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from prescription_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "prescription", "src_prescription_phc_bp"], "unique_id": "model.nps_mi_2021.src_prescription_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\prescription\\src_prescription_phc_bp.sql", "original_file_path": "models\\source\\prescription\\src_prescription_phc_bp.sql", "name": "src_prescription_phc_bp", "alias": "src_prescription_phc_bp", "checksum": {"name": "sha256", "checksum": "777fa0f549d39cbcf178c15b4e7af1182863e14b4dc92ea09177ce24d3d78e8b"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_MEDICINE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\prescription\\src_prescription_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.308068, "compiled_sql": "\n\nwith prescription_phc_bp as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.RECORD_STATUS AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_PRESCRIPTION.DRUG_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENERIC_NAME AS MEDICINE_ACTIVE_INGREDIENT,    \n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_INTERVAL AS REPEAT_INTERVAL,\n    CAST(SAT_PRESCRIPTION.RESTRICTION_CODE AS STRING) AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE AS STRING) AS ROUTE,\n    SAT_PRESCRIPTION.FIRST_DATE AS FIRST_DATE,\n    SAT_PRESCRIPTION.LAST_DATE AS LAST_DATE,    \n    SAT_PRESCRIPTION.AUTHORITY_INDICATION AS AUTHORITY_INDICATION,\n    SAT_PRESCRIPTION.DELETIONDATE AS DELETION_DATE,\n    SAT_PRESCRIPTION.DELETION_REASON AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.RX_STATUS AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.INDICATION AS REASON,\n    CAST(SAT_PRESCRIPTION.INDICATION_CODE AS STRING) AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.CREATEDBY AS CREATED_BY,\n    SAT_PRESCRIPTION.CREATED AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.UPDATEDBY AS UPDATED_BY,\n    SAT_PRESCRIPTION.UPDATED AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    SAT_MEDICINE.STRENGTH AS STRENGTH,\n    SAT_MEDICINE.COMPANY_FORM AS FORM,\n    CAST(SAT_MEDICINE.PRODUCT_NAME_ID AS STRING) AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.ALLOW_SUBSTITUTION AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    CAST(NULL AS STRING) AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.USE_PBS_QUANTITY AS STRING) AS PBS_STATUS,\n    CAST(NULL AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP` SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_MEDICINE_OMOP` HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PHC_BP_OMOP` SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` SAT_PATIENT_PHC_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_BP.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_PHC_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from prescription_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_phc_bp`"}, "model.nps_mi_2021.src_prescription_phc_md": {"raw_sql": "{{config(materialized='view')}}\n\nwith prescription_phc_md as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.CEASED AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_MEDICINE.TRADE_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_GAP AS REPEAT_INTERVAL,\n    SAT_PRESCRIPTION.SCRIPT_CODE AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE_CODE AS STRING) AS ROUTE,\n    CAST(SAT_PRESCRIPTION.FIRST_DATE AS STRING) AS FIRST_DATE,\n    CAST(SAT_PRESCRIPTION.LAST_DATE AS STRING) AS LAST_DATE,\n    CAST(NULL AS STRING) AS AUTHORITY_INDICATION,\n    CAST(SAT_PRESCRIPTION.CEASED_DATE AS STRING) AS DELETION_DATE,\n    SAT_PRESCRIPTION.REASON_DELETION AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.LIMITED AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.REASON AS REASON,\n    SAT_PRESCRIPTION.REASON_CODE AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.STAMP_CREATED_USER_ID AS CREATED_BY,\n    SAT_PRESCRIPTION.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.STAMP_USER_ID AS UPDATED_BY,\n    SAT_PRESCRIPTION.STAMP_DATETIME AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    CAST(STRENGTH AS STRING) AS STRENGTH,\n    CAST(FORM AS STRING) AS FORM,\n    SAT_MEDICINE.TRADE_NAME AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.GENERIC AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    SAT_MEDICINE.PBS_CODE AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.RPBS AS STRING) AS PBS_STATUS,\n    CAST(SAT_PRESCRIPTION.SOURCE_CODE AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_PRESCRIPTION_OMOP')}} HUB_PRESCRIPTION\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP')}} SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LNK_PRESCRIPTION_OMOP')}} LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'LSAT_PRESCRIPTION_OMOP')}} LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_MEDICINE_OMOP')}} HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_MEDICINE_PHC_MD_OMOP')}} SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_PHC_MD_OMOP')}} SAT_PATIENT_PHC_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_PHC_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from prescription_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "prescription", "src_prescription_phc_md"], "unique_id": "model.nps_mi_2021.src_prescription_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\prescription\\src_prescription_phc_md.sql", "original_file_path": "models\\source\\prescription\\src_prescription_phc_md.sql", "name": "src_prescription_phc_md", "alias": "src_prescription_phc_md", "checksum": {"name": "sha256", "checksum": "ecef9f36c041b83cbf0c773b83b5a2c1eff39aa24a0734e8866a069db6c156c2"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_MEDICINE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\prescription\\src_prescription_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.310067, "compiled_sql": "\n\nwith prescription_phc_md as (\nSELECT\n    LNK_PRESCRIPTION.HUB_SITE_PATIENT_SK AS PATIENT_NUMBER,\n    HUB_PRESCRIPTION.OMD_NPS_SITE_ID AS SITE_ID,\n    HUB_PRESCRIPTION.SOURCE_SYSTEM AS SOURCE_SYSTEM,\n    'SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP' AS SOURCE_TABLE,\n    HUB_PRESCRIPTION.PRESCRIPTION_ID AS PRESCRIPTION_ID,\n    CAST(SAT_PRESCRIPTION.CEASED AS STRING) AS RECORD_STATUS,\n    SAT_PRESCRIPTION.DOSE AS DOSE,\n    SAT_PRESCRIPTION.INSTRUCTIONS AS INSTRUCTIONS,\n    SAT_MEDICINE.TRADE_NAME AS MEDICINE_NAME,\n    SAT_MEDICINE.GENINT AS MEDICINE_ACTIVE_INGREDIENT,\n    CAST(SAT_PRESCRIPTION.QUANTITY AS STRING) AS QUANTITY,\n    SAT_PRESCRIPTION.REPEATS AS REPEATS,\n    SAT_PRESCRIPTION.REPEAT_GAP AS REPEAT_INTERVAL,\n    SAT_PRESCRIPTION.SCRIPT_CODE AS RESTRICTION_CODE,\n    CAST(SAT_PRESCRIPTION.ROUTE_CODE AS STRING) AS ROUTE,\n    CAST(SAT_PRESCRIPTION.FIRST_DATE AS STRING) AS FIRST_DATE,\n    CAST(SAT_PRESCRIPTION.LAST_DATE AS STRING) AS LAST_DATE,\n    CAST(NULL AS STRING) AS AUTHORITY_INDICATION,\n    CAST(SAT_PRESCRIPTION.CEASED_DATE AS STRING) AS DELETION_DATE,\n    SAT_PRESCRIPTION.REASON_DELETION AS DELETION_REASON,\n    CAST(SAT_PRESCRIPTION.LIMITED AS STRING) AS RX_STATUS_LIMITED_MEDICATION,\n    CAST(SAT_PRESCRIPTION.FREQUENCY AS STRING) AS FREQUENCY,\n    SAT_PRESCRIPTION.REASON AS REASON,\n    SAT_PRESCRIPTION.REASON_CODE AS REASON_CODE,\n    CAST(SAT_PRESCRIPTION.PREVIOUS_AUTHORITY AS STRING) AS PREVIOUS_AUTHORITY,\n    SAT_PRESCRIPTION.STAMP_CREATED_USER_ID AS CREATED_BY,\n    SAT_PRESCRIPTION.STAMP_CREATED_DATETIME AS CREATED_DATETIME,\n    SAT_PRESCRIPTION.STAMP_USER_ID AS UPDATED_BY,\n    SAT_PRESCRIPTION.STAMP_DATETIME AS UPDATED_DATETIME,\n    CAST(NULL AS STRING) AS BP_PRODUCT_ID,\n    CAST(NULL AS STRING) AS MD_DRUG_NO,\n    CAST(STRENGTH AS STRING) AS STRENGTH,\n    CAST(FORM AS STRING) AS FORM,\n    SAT_MEDICINE.TRADE_NAME AS PRODUCT_NAME,\n    CAST(SAT_PRESCRIPTION.GENERIC AS STRING) AS GENERIC_SUBSTITUTION_ALLOWED,\n    SAT_MEDICINE.PBS_CODE AS PBS_IDENTIFER,\n    CAST(SAT_PRESCRIPTION.RPBS AS STRING) AS PBS_STATUS,\n    CAST(SAT_PRESCRIPTION.SOURCE_CODE AS STRING) AS SOURCE_CODE,\n    CAST(SAT_PRESCRIPTION.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\n    SAT_PRESCRIPTION.OMD_SOURCE_ROW_ID AS OMD_SOURCE_ROW_ID,\n    SAT_PRESCRIPTION.OMD_INSERT_MODULE_INSTANCE_ID AS OMD_INSERT_MODULE_INSTANCE_ID,\n    CAST(SAT_PRESCRIPTION.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\n    SAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR AS OMD_CURRENT_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR AS OMD_DELETED_RECORD_INDICATOR,\n    SAT_PRESCRIPTION.OMD_RECORD_SOURCE_ID AS OMD_RECORD_SOURCE_ID,\n    SAT_PRESCRIPTION.OMD_HASH_FULL_RECORD AS OMD_HASH_FULL_RECORD\nFROM \n/** PRESCRIPTION **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP` HUB_PRESCRIPTION\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP` SAT_PRESCRIPTION\nON\n\tHUB_PRESCRIPTION.HUB_PRESCRIPTION_SK = SAT_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP` LNK_PRESCRIPTION\nON\n\tSAT_PRESCRIPTION.HUB_PRESCRIPTION_SK = LNK_PRESCRIPTION.HUB_PRESCRIPTION_SK\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP` LSAT_PRESCRIPTION\nON\n\tLNK_PRESCRIPTION.LNK_PRESCRIPTION_SK = LSAT_PRESCRIPTION.LNK_PRESCRIPTION_SK\nJOIN\n/** MEDICINE **/\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_MEDICINE_OMOP` HUB_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = LNK_PRESCRIPTION.HUB_MEDICINE_SK\nJOIN\n    `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PHC_MD_OMOP` SAT_MEDICINE\nON\n\tHUB_MEDICINE.HUB_MEDICINE_SK = SAT_MEDICINE.HUB_MEDICINE_SK\n/** PATIENT **/\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nON\n\tLNK_PRESCRIPTION.HUB_SITE_PATIENT_SK = HUB_PATIENT.HUB_SITE_PATIENT_SK\nJOIN\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` SAT_PATIENT_PHC_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_MD.HUB_SITE_PATIENT_SK\n/* Filters to retrieve non-deleted and current records */\nWHERE\n\tSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND LSAT_PRESCRIPTION.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND LSAT_PRESCRIPTION.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_MEDICINE.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_MEDICINE.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND SAT_PATIENT_PHC_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND SAT_PATIENT_PHC_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from prescription_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_prescription_phc_md`"}, "model.nps_mi_2021.src_alcohol_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith alcohol_md as (\r\nselect\r\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\r\nNULL AS PROVIDER_ID,\r\nCAST(\"MD\" AS STRING) AS SOURCE_SYSTEM,\r\nCAST(\"SAT_SITE_PATIENT_CLINICAL_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\r\nCAST(null AS STRING) AS RECORD_ID,\r\nCAST(null AS STRING) AS RECORD_STATUS,\r\nCAST(CASE \r\n\t\tWHEN sspasb.ALCOHOL_EX = '1'\r\n\t\tTHEN 1\r\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\r\n\t\tTHEN 2\r\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\r\n\t\tTHEN 3\r\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\r\n\t\tTHEN 4\r\n\t\tELSE\r\n\t\tnull\r\n\t\tEND AS STRING) AS ALCOHOL_CODE,\r\nCAST(CASE \r\n\t\tWHEN sspasb.ALCOHOL_EX = '1'\r\n\t\tTHEN 'Nil'\r\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\r\n\t\tTHEN 'Ocassional'\r\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\r\n\t\tTHEN 'Moderate'\r\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\r\n\t\tTHEN 'Heavy'\r\n\t\tELSE\r\n\t\tnull\r\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\r\nCAST(null AS STRING) AS PAST_ALCOHOL_CODE,\r\nCAST(null AS INT) AS DRINKS_PER_DAY,\r\nCAST(null AS INT) AS DAYS_PER_WEEK,\r\nCAST(sspasb.ALCOHOL_ASSESSMENT_DATE AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\r\nCAST(null AS STRING) AS YEAR_STARTED,\r\nCAST(null AS STRING) AS YEAR_STOPPED,\r\nCAST(null AS STRING) AS PAST_DRINKS_PER_DAY,\r\nCAST(null AS STRING) AS PAST_DAYS_PER_WEEK,\r\nCAST(sspasb.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(sspasb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sspasb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspasb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspasb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspasb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspasb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspasb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspasb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspasb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_CLINICAL_MD_OMOP')}} hasb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_CLINICAL_MD_OMOP')}} sspasb\r\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sspasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_CLINICAL_MD_OMOP')}} lasb\r\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_CLINICAL_MD_OMOP')}} lsasb\r\non lasb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsasb.LNK_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsspasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspasb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from alcohol_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "alcohol_status", "src_alcohol_md"], "unique_id": "model.nps_mi_2021.src_alcohol_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\alcohol_status\\src_alcohol_md.sql", "original_file_path": "models\\source\\alcohol_status\\src_alcohol_md.sql", "name": "src_alcohol_md", "alias": "src_alcohol_md", "checksum": {"name": "sha256", "checksum": "cfaff2f7e5e116132f36ab4f1ca10d9e9261163bd8c958e585f2deda88a9b423"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\alcohol_status\\src_alcohol_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3120677, "compiled_sql": "\n\nwith alcohol_md as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(\"MD\" AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_CLINICAL_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(null AS STRING) AS RECORD_ID,\nCAST(null AS STRING) AS RECORD_STATUS,\nCAST(CASE \n\t\tWHEN sspasb.ALCOHOL_EX = '1'\n\t\tTHEN 1\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\n\t\tTHEN 2\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\n\t\tTHEN 3\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\n\t\tTHEN 4\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_CODE,\nCAST(CASE \n\t\tWHEN sspasb.ALCOHOL_EX = '1'\n\t\tTHEN 'Nil'\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\n\t\tTHEN 'Moderate'\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(null AS STRING) AS PAST_ALCOHOL_CODE,\nCAST(null AS INT) AS DRINKS_PER_DAY,\nCAST(null AS INT) AS DAYS_PER_WEEK,\nCAST(sspasb.ALCOHOL_ASSESSMENT_DATE AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(null AS STRING) AS YEAR_STARTED,\nCAST(null AS STRING) AS YEAR_STOPPED,\nCAST(null AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(null AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspasb.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME,\nCAST(sspasb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspasb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspasb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspasb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspasb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspasb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspasb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspasb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspasb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_CLINICAL_MD_OMOP` hasb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_CLINICAL_MD_OMOP` sspasb\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sspasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_CLINICAL_MD_OMOP` lasb\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_CLINICAL_MD_OMOP` lsasb\non lasb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsasb.LNK_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from alcohol_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_md`"}, "model.nps_mi_2021.src_alcohol_phc_md": {"raw_sql": "{{config(materialized='view')}}\n\nwith alcohol_phc_md as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(\"MD_PHC\" AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(null AS STRING) AS RECORD_ID,\nCAST(null AS STRING) AS RECORD_STATUS,\nCAST(CASE \n\t\tWHEN sspasb.ALCOHOL_EX = '1'\n\t\tTHEN 1\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\n\t\tTHEN 2\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\n\t\tTHEN 3\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\n\t\tTHEN 4\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_CODE,\nCAST(CASE \n\t\tWHEN sspasb.ALCOHOL_EX = '1'\n\t\tTHEN 'Nil'\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\n\t\tTHEN 'Moderate'\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(null AS STRING) AS PAST_ALCOHOL_CODE,\nCAST(null AS INT) AS DRINKS_PER_DAY,\nCAST(null AS INT) AS DAYS_PER_WEEK,\nCAST(null AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(null AS STRING) AS YEAR_STARTED,\nCAST(null AS STRING) AS YEAR_STOPPED,\nCAST(null AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(null AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspasb.STAMP_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspasb.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspasb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspasb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspasb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspasb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspasb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspasb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspasb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspasb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_CLINICAL_MD_OMOP')}} hasb\ninner join \n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP')}} sspasb\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sspasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_CLINICAL_MD_OMOP')}} lasb\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_CLINICAL_MD_OMOP')}} lsasb\non lasb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsasb.LNK_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\nON lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from alcohol_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "alcohol_status", "src_alcohol_phc_md"], "unique_id": "model.nps_mi_2021.src_alcohol_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\alcohol_status\\src_alcohol_phc_md.sql", "original_file_path": "models\\source\\alcohol_status\\src_alcohol_phc_md.sql", "name": "src_alcohol_phc_md", "alias": "src_alcohol_phc_md", "checksum": {"name": "sha256", "checksum": "abd7cbeaf9ff5f36143ed468748ebb2d77ff70b2a3cbb00ae49ac73e584135f5"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\alcohol_status\\src_alcohol_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3142273, "compiled_sql": "\n\nwith alcohol_phc_md as (\nselect\nCAST(lasb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hasb.SITE_ID AS STRING) AS SITE_ID,\nNULL AS PROVIDER_ID,\nCAST(\"MD_PHC\" AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(null AS STRING) AS RECORD_ID,\nCAST(null AS STRING) AS RECORD_STATUS,\nCAST(CASE \n\t\tWHEN sspasb.ALCOHOL_EX = '1'\n\t\tTHEN 1\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\n\t\tTHEN 2\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\n\t\tTHEN 3\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\n\t\tTHEN 4\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_CODE,\nCAST(CASE \n\t\tWHEN sspasb.ALCOHOL_EX = '1'\n\t\tTHEN 'Nil'\n\t\tWHEN sspasb.ALCOHOL_EX = '2' OR sspasb.ALCOHOL_EX = '3'\n\t\tTHEN 'Ocassional'\n\t\tWHEN sspasb.ALCOHOL_EX = '4' OR sspasb.ALCOHOL_EX = '5'\n\t\tTHEN 'Moderate'\n\t\tWHEN sspasb.ALCOHOL_EX = '6' OR sspasb.ALCOHOL_EX = '7'\n\t\tTHEN 'Heavy'\n\t\tELSE\n\t\tnull\n\t\tEND AS STRING) AS ALCOHOL_STATUS_NAME,\nCAST(null AS STRING) AS PAST_ALCOHOL_CODE,\nCAST(null AS INT) AS DRINKS_PER_DAY,\nCAST(null AS INT) AS DAYS_PER_WEEK,\nCAST(null AS STRING) AS ALCOHOL_ASSESSMENT_DATE,\nCAST(null AS STRING) AS YEAR_STARTED,\nCAST(null AS STRING) AS YEAR_STOPPED,\nCAST(null AS STRING) AS PAST_DRINKS_PER_DAY,\nCAST(null AS STRING) AS PAST_DAYS_PER_WEEK,\nCAST(sspasb.STAMP_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspasb.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspasb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspasb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspasb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspasb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspasb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspasb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspasb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspasb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_CLINICAL_MD_OMOP` hasb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP` sspasb\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sspasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_CLINICAL_MD_OMOP` lasb\non hasb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lasb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_CLINICAL_MD_OMOP` lsasb\non lasb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsasb.LNK_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lasb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsasb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsasb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from alcohol_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_alcohol_phc_md`"}, "model.nps_mi_2021.SMOKING_STATUS": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_smoking_status as\r\n(\r\nselect * from {{ref('src_smoking_bp')}}\r\nUNION all\r\nselect * from {{ref('src_smoking_md')}}\r\nUNION all\r\nselect * from {{ref('src_smoking_phc_bp')}}\r\nUNION all\r\nselect * from {{ref('src_smoking_phc_md')}}\r\n)\r\nselect * from source_smoking_status", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_smoking_bp", "model.nps_mi_2021.src_smoking_md", "model.nps_mi_2021.src_smoking_phc_bp", "model.nps_mi_2021.src_smoking_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "smoking_status", "SMOKING_STATUS"], "unique_id": "model.nps_mi_2021.SMOKING_STATUS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\smoking_status\\SMOKING_STATUS.sql", "original_file_path": "models\\staging\\smoking_status\\SMOKING_STATUS.sql", "name": "SMOKING_STATUS", "alias": "SMOKING_STATUS", "checksum": {"name": "sha256", "checksum": "be5ea27db04330da01c058578e51410b468785ff5e9255dda7cf5628b523237e"}, "tags": [], "refs": [["src_smoking_bp"], ["src_smoking_md"], ["src_smoking_phc_bp"], ["src_smoking_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\smoking_status\\SMOKING_STATUS.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3162246, "compiled_sql": "\n\nwith source_smoking_status as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_md`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_phc_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_phc_md`\n)\nselect * from source_smoking_status", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`"}, "model.nps_mi_2021.src_smoking_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith smoking_md as (\r\n\r\nselect \r\nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\r\ncast(\"MD\" as STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_SITE_PATIENT_CLINICAL_MD_OMOP' as STRING) as SOURCE_TABLE,\r\nNULL AS PROVIDER_ID,\r\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\r\ncast(NULL as STRING) as RECORD_STATUS,\r\ncast(case \r\n\t\twhen sssb.smoker = 'N' or sssb.smoker = 'n'\r\n\t\tthen 1\r\n\t\twhen sssb.smoker = 'X'\r\n\t\tthen 2\r\n\t\twhen sssb.smoker = 'Y'\r\n\t\tthen 3\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as int) as SMOKING_STATUS_CODE,\r\ncast(case \r\n\t\twhen sssb.smoker = 'N' or sssb.smoker = 'n'\r\n\t\tthen 'Non-Smoker'\r\n\t\twhen sssb.smoker = 'X'\r\n\t\tthen 'Ex-Smoker'\r\n\t\twhen sssb.smoker = 'Y'\r\n\t\tthen 'Smoker'\r\n\t\tELSE\r\n\t\t'Not Recorded'\r\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\r\ncast(null as int) AS PAST_SMOKING_CODE,\r\ncast(null as int) as SMOKING_PRODUCT_TYPE,\r\ncast(sssb.STARTED_SMOKING as STRING) as SMOKING_START_DATE,\r\ncast(null as INT) as PAST_SMOKING_START_DATE,\r\ncast(sssb.SMOKING_FREQUENCY as STRING) as SMOKING_FREQUENCY,\r\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\r\ncast(sssb.ceased_smoking as STRING) as SMOKING_CEASED_DATE,\r\ncast(null as INT) as PAST_SMOKING_STOPPED_DATE,\r\ncast(sssb.SMOKING_ASSESSMENT_DATE as STRING) AS SMOKING_ASSESSMENT_DATE, \r\ncast(sssb.smoking_stage_change_assessment AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\r\ncast(sssb.SMOKING_LAST_QUIT_ATTEMPT_DATE as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \r\ncast(sssb.SMOKING_LONGEST_ABSTINENCE_DURATION as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\r\ncast(sssb.SMOKING_ABSTINENCE_UNIT as STRING) as SMOKING_ABSTINENCE_UNIT , \r\ncast(sssb.SMOKING_COMMENT as STRING) as SMOKING_COMMENT, \r\ncast(sssb.created_datetime as timestamp) as CREATED_DATETIME,\r\ncast(sssb.updated_datetime as timestamp) as UPDATED_DATETIME,\r\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_CLINICAL_MD_OMOP')}} hssb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_CLINICAL_MD_OMOP')}} sssb\r\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_CLINICAL_MD_OMOP')}} lssb\r\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_CLINICAL_MD_OMOP')}} lsssb\r\non lssb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsssb.LNK_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\nselect * from smoking_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "smoking_status", "src_smoking_md"], "unique_id": "model.nps_mi_2021.src_smoking_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\smoking_status\\src_smoking_md.sql", "original_file_path": "models\\source\\smoking_status\\src_smoking_md.sql", "name": "src_smoking_md", "alias": "src_smoking_md", "checksum": {"name": "sha256", "checksum": "da0d690c30e7d9800ed8c490390d9f46fe7704370f502ed4407732e1fa30355c"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\smoking_status\\src_smoking_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3182228, "compiled_sql": "\n\nwith smoking_md as (\n\nselect \nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\ncast(\"MD\" as STRING) AS SOURCE_SYSTEM,\ncast('SAT_SITE_PATIENT_CLINICAL_MD_OMOP' as STRING) as SOURCE_TABLE,\nNULL AS PROVIDER_ID,\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\ncast(NULL as STRING) as RECORD_STATUS,\ncast(case \n\t\twhen sssb.smoker = 'N' or sssb.smoker = 'n'\n\t\tthen 1\n\t\twhen sssb.smoker = 'X'\n\t\tthen 2\n\t\twhen sssb.smoker = 'Y'\n\t\tthen 3\n\t\tELSE\n\t\t0\n\t\tEND as int) as SMOKING_STATUS_CODE,\ncast(case \n\t\twhen sssb.smoker = 'N' or sssb.smoker = 'n'\n\t\tthen 'Non-Smoker'\n\t\twhen sssb.smoker = 'X'\n\t\tthen 'Ex-Smoker'\n\t\twhen sssb.smoker = 'Y'\n\t\tthen 'Smoker'\n\t\tELSE\n\t\t'Not Recorded'\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\ncast(null as int) AS PAST_SMOKING_CODE,\ncast(null as int) as SMOKING_PRODUCT_TYPE,\ncast(sssb.STARTED_SMOKING as STRING) as SMOKING_START_DATE,\ncast(null as INT) as PAST_SMOKING_START_DATE,\ncast(sssb.SMOKING_FREQUENCY as STRING) as SMOKING_FREQUENCY,\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\ncast(sssb.ceased_smoking as STRING) as SMOKING_CEASED_DATE,\ncast(null as INT) as PAST_SMOKING_STOPPED_DATE,\ncast(sssb.SMOKING_ASSESSMENT_DATE as STRING) AS SMOKING_ASSESSMENT_DATE, \ncast(sssb.smoking_stage_change_assessment AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\ncast(sssb.SMOKING_LAST_QUIT_ATTEMPT_DATE as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \ncast(sssb.SMOKING_LONGEST_ABSTINENCE_DURATION as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\ncast(sssb.SMOKING_ABSTINENCE_UNIT as STRING) as SMOKING_ABSTINENCE_UNIT , \ncast(sssb.SMOKING_COMMENT as STRING) as SMOKING_COMMENT, \ncast(sssb.created_datetime as timestamp) as CREATED_DATETIME,\ncast(sssb.updated_datetime as timestamp) as UPDATED_DATETIME,\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_CLINICAL_MD_OMOP` hssb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_CLINICAL_MD_OMOP` sssb\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_CLINICAL_MD_OMOP` lssb\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_CLINICAL_MD_OMOP` lsssb\non lssb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsssb.LNK_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect * from smoking_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_md`"}, "model.nps_mi_2021.src_smoking_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith smoking_phc_md as (\r\n\r\nselect \r\nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\r\ncast(\"PHC_MD\" as STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP' as STRING) as SOURCE_TABLE,\r\nNULL AS PROVIDER_ID,\r\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\r\ncast(NULL as STRING) as RECORD_STATUS,\r\ncast(case \r\n\t\twhen sssb.SMOKER = 'N' or sssb.SMOKER = 'n'\r\n\t\tthen 1\r\n\t\twhen sssb.SMOKER = 'X'\r\n\t\tthen 2\r\n\t\twhen sssb.SMOKER = 'Y'\r\n\t\tthen 3\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as int) as SMOKING_STATUS_CODE,\r\ncast(case \r\n\t\twhen sssb.SMOKER = 'N' or sssb.SMOKER = 'n'\r\n\t\tthen 'Non-Smoker'\r\n\t\twhen sssb.SMOKER = 'X'\r\n\t\tthen 'Ex-Smoker'\r\n\t\twhen sssb.SMOKER = 'Y'\r\n\t\tthen 'Smoker'\r\n\t\tELSE\r\n\t\t'Not Recorded'\r\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\r\ncast(null as int) AS PAST_SMOKING_CODE,\r\ncast(null as int) as SMOKING_PRODUCT_TYPE,\r\ncast(sssb.STARTED_SMOKING as STRING) as SMOKING_START_DATE,\r\ncast(null as INT) as PAST_SMOKING_START_DATE,\r\ncast(NULL as STRING) as SMOKING_FREQUENCY,\r\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\r\ncast(sssb.ceased_smoking as STRING) as SMOKING_CEASED_DATE,\r\ncast(null as INT) as PAST_SMOKING_STOPPED_DATE,\r\ncast(NULL as STRING) AS SMOKING_ASSESSMENT_DATE, \r\ncast(NULL AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\r\ncast(NULL as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \r\ncast(NULL as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\r\ncast(NULL as STRING) as SMOKING_ABSTINENCE_UNIT , \r\ncast(NULL as STRING) as SMOKING_COMMENT,  \r\nCAST(sssb.STAMP_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \r\nCAST(sssb.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_CLINICAL_MD_OMOP')}} hssb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP')}} sssb\r\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_CLINICAL_MD_OMOP')}} lssb\r\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_CLINICAL_MD_OMOP')}} lsssb\r\non lssb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsssb.LNK_SITE_PATIENT_CLINICAL_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\nselect * from smoking_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "smoking_status", "src_smoking_phc_md"], "unique_id": "model.nps_mi_2021.src_smoking_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\smoking_status\\src_smoking_phc_md.sql", "original_file_path": "models\\source\\smoking_status\\src_smoking_phc_md.sql", "name": "src_smoking_phc_md", "alias": "src_smoking_phc_md", "checksum": {"name": "sha256", "checksum": "bbd5edf7e88fece24c8fd1af234a07c48696abb9b7624b18be21a38e6c8a596c"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_CLINICAL_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\smoking_status\\src_smoking_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.321182, "compiled_sql": "\n\nwith smoking_phc_md as (\n\nselect \nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\ncast(\"PHC_MD\" as STRING) AS SOURCE_SYSTEM,\ncast('SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP' as STRING) as SOURCE_TABLE,\nNULL AS PROVIDER_ID,\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\ncast(NULL as STRING) as RECORD_STATUS,\ncast(case \n\t\twhen sssb.SMOKER = 'N' or sssb.SMOKER = 'n'\n\t\tthen 1\n\t\twhen sssb.SMOKER = 'X'\n\t\tthen 2\n\t\twhen sssb.SMOKER = 'Y'\n\t\tthen 3\n\t\tELSE\n\t\t0\n\t\tEND as int) as SMOKING_STATUS_CODE,\ncast(case \n\t\twhen sssb.SMOKER = 'N' or sssb.SMOKER = 'n'\n\t\tthen 'Non-Smoker'\n\t\twhen sssb.SMOKER = 'X'\n\t\tthen 'Ex-Smoker'\n\t\twhen sssb.SMOKER = 'Y'\n\t\tthen 'Smoker'\n\t\tELSE\n\t\t'Not Recorded'\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\ncast(null as int) AS PAST_SMOKING_CODE,\ncast(null as int) as SMOKING_PRODUCT_TYPE,\ncast(sssb.STARTED_SMOKING as STRING) as SMOKING_START_DATE,\ncast(null as INT) as PAST_SMOKING_START_DATE,\ncast(NULL as STRING) as SMOKING_FREQUENCY,\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\ncast(sssb.ceased_smoking as STRING) as SMOKING_CEASED_DATE,\ncast(null as INT) as PAST_SMOKING_STOPPED_DATE,\ncast(NULL as STRING) AS SMOKING_ASSESSMENT_DATE, \ncast(NULL AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\ncast(NULL as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \ncast(NULL as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\ncast(NULL as STRING) as SMOKING_ABSTINENCE_UNIT , \ncast(NULL as STRING) as SMOKING_COMMENT,  \nCAST(sssb.STAMP_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sssb.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_CLINICAL_MD_OMOP` hssb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP` sssb\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = sssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_CLINICAL_MD_OMOP` lssb\non hssb.HUB_SITE_PATIENT_CLINICAL_MD_SK = lssb.HUB_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_CLINICAL_MD_OMOP` lsssb\non lssb.LNK_SITE_PATIENT_CLINICAL_MD_SK = lsssb.LNK_SITE_PATIENT_CLINICAL_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect * from smoking_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_phc_md`"}, "model.nps_mi_2021.ALLERGY_REACTION": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_allergy_reaction as\r\n(\r\nselect * from {{ref('src_allergy_bp')}}\r\nUNION ALL\r\nselect * from {{ref('src_allergy_phc_bp')}}\r\nUNION ALL\r\nselect * from {{ref('src_reaction_md')}}\r\nUNION ALL\r\nselect * from {{ref('src_reaction_phc_md')}}\r\n\r\n)\r\n\r\nselect * from source_allergy_reaction", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_reaction_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "allergy", "ALLERGY_REACTION"], "unique_id": "model.nps_mi_2021.ALLERGY_REACTION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\allergy\\ALLERGY_REACTION.sql", "original_file_path": "models\\staging\\allergy\\ALLERGY_REACTION.sql", "name": "ALLERGY_REACTION", "alias": "ALLERGY_REACTION", "checksum": {"name": "sha256", "checksum": "addc70ae8391a3febbcff0ec59349f6bd238c57ec52fb6400c3ff46d77544e7f"}, "tags": [], "refs": [["src_allergy_bp"], ["src_allergy_phc_bp"], ["src_reaction_md"], ["src_reaction_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\allergy\\ALLERGY_REACTION.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.324281, "compiled_sql": "\n\nwith source_allergy_reaction as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_allergy_bp`\nUNION ALL\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_allergy_phc_bp`\nUNION ALL\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_reaction_md`\nUNION ALL\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_reaction_phc_md`\n\n)\n\nselect * from source_allergy_reaction", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`"}, "model.nps_mi_2021.src_allergy_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith allergy_bp as (\r\nselect\r\nCAST(sspab.ALLERGY_ITEM_NAME as STRING) as ALLERGY_ITEM_NAME,\r\nCAST(sspab.REACTION_TYPE as STRING) AS REACTION_TYPE,\r\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST('SAT_SITE_PATIENT_ALLERGY_BP_OMOP' AS STRING) AS SOURCE_TABLE,\r\nCAST(CASE \r\n\t\tWHEN sspab.REACTION_SEVERITY = 1\r\n\t\tTHEN 1\r\n\t\tWHEN sspab.REACTION_SEVERITY = 2\r\n\t\tTHEN 2\r\n\t\tWHEN sspab.REACTION_SEVERITY = 3\r\n\t\tTHEN 3\r\n\t\tWHEN sspab.REACTION_SEVERITY = 4\r\n\t\tTHEN 4\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\r\nCAST(CASE \r\n\t\tWHEN sspab.REACTION_SEVERITY = 1\r\n\t\tTHEN 'Mild'\r\n\t\tWHEN sspab.REACTION_SEVERITY = 2\r\n\t\tTHEN 'Moderately Severe'\r\n\t\tWHEN sspab.REACTION_SEVERITY = 3\r\n\t\tTHEN 'Severe'\r\n\t\tWHEN sspab.REACTION_SEVERITY = 4\r\n\t\tTHEN 'Life threatening'\r\n\t\tELSE\r\n\t\t'Not stated'\r\n\t\tEND as string) as ALLERGY_STATUS_NAME,\r\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\r\nCAST(NULL AS STRING) AS PROVIDER_ID,\r\nCAST(sspab.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \r\nCAST(sspab.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sspab.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspab.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspab.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspab.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspab.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspab.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspab.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspab.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_ALLERGY_OMOP')}} hspa\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_ALLERGY_BP_OMOP')}} sspab\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = sspab.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_ALLERGY_OMOP')}} lspa\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_ALLERGY_OMOP')}} lsspa\r\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsspab.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspab.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from allergy_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "allergy", "src_allergy_bp"], "unique_id": "model.nps_mi_2021.src_allergy_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\allergy\\src_allergy_bp.sql", "original_file_path": "models\\source\\allergy\\src_allergy_bp.sql", "name": "src_allergy_bp", "alias": "src_allergy_bp", "checksum": {"name": "sha256", "checksum": "35d8a0f85c60a8125b2245ff87b849bab452674bf7f86cf09e8f59fa25c5a34a"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALLERGY_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\allergy\\src_allergy_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3262835, "compiled_sql": "\n\nwith allergy_bp as (\nselect\nCAST(sspab.ALLERGY_ITEM_NAME as STRING) as ALLERGY_ITEM_NAME,\nCAST(sspab.REACTION_TYPE as STRING) AS REACTION_TYPE,\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST('SAT_SITE_PATIENT_ALLERGY_BP_OMOP' AS STRING) AS SOURCE_TABLE,\nCAST(CASE \n\t\tWHEN sspab.REACTION_SEVERITY = 1\n\t\tTHEN 1\n\t\tWHEN sspab.REACTION_SEVERITY = 2\n\t\tTHEN 2\n\t\tWHEN sspab.REACTION_SEVERITY = 3\n\t\tTHEN 3\n\t\tWHEN sspab.REACTION_SEVERITY = 4\n\t\tTHEN 4\n\t\tELSE\n\t\t0\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\nCAST(CASE \n\t\tWHEN sspab.REACTION_SEVERITY = 1\n\t\tTHEN 'Mild'\n\t\tWHEN sspab.REACTION_SEVERITY = 2\n\t\tTHEN 'Moderately Severe'\n\t\tWHEN sspab.REACTION_SEVERITY = 3\n\t\tTHEN 'Severe'\n\t\tWHEN sspab.REACTION_SEVERITY = 4\n\t\tTHEN 'Life threatening'\n\t\tELSE\n\t\t'Not stated'\n\t\tEND as string) as ALLERGY_STATUS_NAME,\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(NULL AS STRING) AS PROVIDER_ID,\nCAST(sspab.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspab.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspab.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspab.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspab.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspab.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspab.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspab.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspab.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspab.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALLERGY_OMOP` hspa\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALLERGY_BP_OMOP` sspab\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = sspab.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALLERGY_OMOP` lspa\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALLERGY_OMOP` lsspa\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspab.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspab.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from allergy_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_allergy_bp`"}, "model.nps_mi_2021.src_allergy_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\nwith allergy_phc_bp as (\r\n\r\nselect\r\nCAST(sspapb.item_name as STRING) as ALLERGY_ITEM_NAME, \r\nCAST(sspapb.REACTION as STRING) AS REACTION_TYPE,\r\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST('SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP' AS STRING) AS SOURCE_TABLE,\r\nCAST(CASE \r\n\t\tWHEN sspapb.SEVERITY = 1\r\n\t\tTHEN 1\r\n\t\tWHEN sspapb.SEVERITY = 2\r\n\t\tTHEN 2\r\n\t\tWHEN sspapb.SEVERITY = 3\r\n\t\tTHEN 3\r\n\t\tWHEN sspapb.SEVERITY = 4\r\n\t\tTHEN 4\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\r\nCAST(CASE \r\n\t\tWHEN sspapb.SEVERITY = 1\r\n\t\tTHEN 'Mild'\r\n\t\tWHEN sspapb.SEVERITY = 2\r\n\t\tTHEN 'Moderately Severe'\r\n\t\tWHEN sspapb.SEVERITY = 3\r\n\t\tTHEN 'Severe'\r\n\t\tWHEN sspapb.SEVERITY = 4\r\n\t\tTHEN 'Life threatening'\r\n\t\tELSE\r\n\t\t'Not stated'\r\n\t\tEND as string) as ALLERGY_STATUS_NAME,\r\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\r\nCAST(NULL AS STRING) AS PROVIDER_ID,\r\nCAST(sspapb.CREATED AS TIMESTAMP) AS CREATED_DATETIME, \r\nCAST(sspapb.UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sspapb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sspapb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sspapb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sspapb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sspapb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sspapb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sspapb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sspapb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_ALLERGY_OMOP')}} hspa\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP')}} sspapb\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = sspapb.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_ALLERGY_OMOP')}} lspa\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_ALLERGY_OMOP')}} lsspa\r\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsspapb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspapb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from allergy_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "allergy", "src_allergy_phc_bp"], "unique_id": "model.nps_mi_2021.src_allergy_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\allergy\\src_allergy_phc_bp.sql", "original_file_path": "models\\source\\allergy\\src_allergy_phc_bp.sql", "name": "src_allergy_phc_bp", "alias": "src_allergy_phc_bp", "checksum": {"name": "sha256", "checksum": "8524fa3f459febb4a39083e8c3df5ce0e74d53b2908e235a4070c433cd5558c1"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\allergy\\src_allergy_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3293123, "compiled_sql": "\nwith allergy_phc_bp as (\n\nselect\nCAST(sspapb.item_name as STRING) as ALLERGY_ITEM_NAME, \nCAST(sspapb.REACTION as STRING) AS REACTION_TYPE,\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST('SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP' AS STRING) AS SOURCE_TABLE,\nCAST(CASE \n\t\tWHEN sspapb.SEVERITY = 1\n\t\tTHEN 1\n\t\tWHEN sspapb.SEVERITY = 2\n\t\tTHEN 2\n\t\tWHEN sspapb.SEVERITY = 3\n\t\tTHEN 3\n\t\tWHEN sspapb.SEVERITY = 4\n\t\tTHEN 4\n\t\tELSE\n\t\t0\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\nCAST(CASE \n\t\tWHEN sspapb.SEVERITY = 1\n\t\tTHEN 'Mild'\n\t\tWHEN sspapb.SEVERITY = 2\n\t\tTHEN 'Moderately Severe'\n\t\tWHEN sspapb.SEVERITY = 3\n\t\tTHEN 'Severe'\n\t\tWHEN sspapb.SEVERITY = 4\n\t\tTHEN 'Life threatening'\n\t\tELSE\n\t\t'Not stated'\n\t\tEND as string) as ALLERGY_STATUS_NAME,\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(NULL AS STRING) AS PROVIDER_ID,\nCAST(sspapb.CREATED AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(sspapb.UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sspapb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sspapb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sspapb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sspapb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sspapb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sspapb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sspapb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sspapb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALLERGY_OMOP` hspa\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP` sspapb\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = sspapb.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALLERGY_OMOP` lspa\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALLERGY_OMOP` lsspa\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsspapb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspapb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from allergy_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_allergy_phc_bp`"}, "model.nps_mi_2021.src_reaction_md": {"raw_sql": "{{config(materialized='view')}}\r\nwith allergy_md as (\r\n\r\nselect\r\nCAST(ssprm.ALLERGY_ITEM as STRING) as ALLERGY_ITEM_NAME, \r\nCAST(ssprm.REACTION_TYPE as STRING) AS REACTION_TYPE,\r\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST('SAT_SITE_PATIENT_REACTION_MD_OMOP' AS STRING) AS SOURCE_TABLE,\r\nCAST(CASE \r\n\t\tWHEN ssprm.REACTION_SEVERITY = '1'\r\n\t\tTHEN 1\r\n\t\tWHEN ssprm.REACTION_SEVERITY = '2'\r\n\t\tTHEN 2\r\n\t\tWHEN ssprm.REACTION_SEVERITY = '3'\r\n\t\tTHEN 3\r\n\t\tWHEN ssprm.REACTION_SEVERITY = '4'\r\n\t\tTHEN 4\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\r\nCAST(CASE \r\n\t\tWHEN ssprm.REACTION_SEVERITY = '1'\r\n\t\tTHEN 'Mild'\r\n\t\tWHEN ssprm.REACTION_SEVERITY = '2'\r\n\t\tTHEN 'Moderately Severe'\r\n\t\tWHEN ssprm.REACTION_SEVERITY = '3'\r\n\t\tTHEN 'Severe'\r\n\t\tWHEN ssprm.REACTION_SEVERITY = '4'\r\n\t\tTHEN 'Life threatening'\r\n\t\tELSE\r\n\t\t'Not stated'\r\n\t\tEND as string) as ALLERGY_STATUS_NAME,\r\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\r\nCAST(NULL AS STRING) AS PROVIDER_ID,\r\nCAST(ssprm.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \r\nCAST(ssprm.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(ssprm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(ssprm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(ssprm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(ssprm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(ssprm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(ssprm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(ssprm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(ssprm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_ALLERGY_OMOP')}} hspa\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_REACTION_MD_OMOP')}} ssprm\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = ssprm.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_ALLERGY_OMOP')}} lspa\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_ALLERGY_OMOP')}} lsspa\r\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tssprm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssprm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from allergy_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "allergy", "src_reaction_md"], "unique_id": "model.nps_mi_2021.src_reaction_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\allergy\\src_reaction_md.sql", "original_file_path": "models\\source\\allergy\\src_reaction_md.sql", "name": "src_reaction_md", "alias": "src_reaction_md", "checksum": {"name": "sha256", "checksum": "bd2d1dc57b83a6c297c7e88588e462b9628e8933abe27ef3e0d4f09e1643f60c"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_REACTION_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\allergy\\src_reaction_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3313227, "compiled_sql": "\nwith allergy_md as (\n\nselect\nCAST(ssprm.ALLERGY_ITEM as STRING) as ALLERGY_ITEM_NAME, \nCAST(ssprm.REACTION_TYPE as STRING) AS REACTION_TYPE,\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST('SAT_SITE_PATIENT_REACTION_MD_OMOP' AS STRING) AS SOURCE_TABLE,\nCAST(CASE \n\t\tWHEN ssprm.REACTION_SEVERITY = '1'\n\t\tTHEN 1\n\t\tWHEN ssprm.REACTION_SEVERITY = '2'\n\t\tTHEN 2\n\t\tWHEN ssprm.REACTION_SEVERITY = '3'\n\t\tTHEN 3\n\t\tWHEN ssprm.REACTION_SEVERITY = '4'\n\t\tTHEN 4\n\t\tELSE\n\t\t0\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\nCAST(CASE \n\t\tWHEN ssprm.REACTION_SEVERITY = '1'\n\t\tTHEN 'Mild'\n\t\tWHEN ssprm.REACTION_SEVERITY = '2'\n\t\tTHEN 'Moderately Severe'\n\t\tWHEN ssprm.REACTION_SEVERITY = '3'\n\t\tTHEN 'Severe'\n\t\tWHEN ssprm.REACTION_SEVERITY = '4'\n\t\tTHEN 'Life threatening'\n\t\tELSE\n\t\t'Not stated'\n\t\tEND as string) as ALLERGY_STATUS_NAME,\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(NULL AS STRING) AS PROVIDER_ID,\nCAST(ssprm.CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(ssprm.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(ssprm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(ssprm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(ssprm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(ssprm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(ssprm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(ssprm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(ssprm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(ssprm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALLERGY_OMOP` hspa\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_REACTION_MD_OMOP` ssprm\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = ssprm.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALLERGY_OMOP` lspa\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALLERGY_OMOP` lsspa\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tssprm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssprm.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from allergy_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_reaction_md`"}, "model.nps_mi_2021.src_reaction_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith allergy_phc_md as (\r\nselect\r\nCAST(ssprpm.ITEM as STRING) as ALLERGY_ITEM_NAME,\r\nCAST(ssprpm.TYPE as STRING) AS REACTION_TYPE,\r\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST('SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP' AS STRING) AS SOURCE_TABLE,\r\nCAST(CASE \r\n\t\tWHEN ssprpm.SEVERITY = 1\r\n\t\tTHEN 1\r\n\t\tWHEN ssprpm.SEVERITY = 2\r\n\t\tTHEN 2\r\n\t\tWHEN ssprpm.SEVERITY = 3\r\n\t\tTHEN 3\r\n\t\tWHEN ssprpm.SEVERITY = 4\r\n\t\tTHEN 4\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\r\nCAST(CASE \r\n\t\tWHEN ssprpm.SEVERITY = 1\r\n\t\tTHEN 'Mild'\r\n\t\tWHEN ssprpm.SEVERITY = 2\r\n\t\tTHEN 'Moderately Severe'\r\n\t\tWHEN ssprpm.SEVERITY = 3\r\n\t\tTHEN 'Severe'\r\n\t\tWHEN ssprpm.SEVERITY = 4\r\n\t\tTHEN 'Life threatening'\r\n\t\tELSE\r\n\t\t'Not stated'\r\n\t\tEND as string) as ALLERGY_STATUS_NAME,\r\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\r\nCAST(NULL AS STRING) AS PROVIDER_ID,\r\nCAST(ssprpm.STAMP_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \r\nCAST(ssprpm.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(ssprpm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(ssprpm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(ssprpm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(ssprpm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(ssprpm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(ssprpm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(ssprpm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(ssprpm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_ALLERGY_OMOP')}} hspa\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP')}} ssprpm\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = ssprpm.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_ALLERGY_OMOP')}} lspa\r\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_ALLERGY_OMOP')}} lsspa\r\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tssprpm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssprpm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from allergy_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "allergy", "src_reaction_phc_md"], "unique_id": "model.nps_mi_2021.src_reaction_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\allergy\\src_reaction_phc_md.sql", "original_file_path": "models\\source\\allergy\\src_reaction_phc_md.sql", "name": "src_reaction_phc_md", "alias": "src_reaction_phc_md", "checksum": {"name": "sha256", "checksum": "deb58edcbe08a7cc91d76340f5b19b947fc8fdf633360141c3f58c8ae6a7b078"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALLERGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\allergy\\src_reaction_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3336048, "compiled_sql": "\n\nwith allergy_phc_md as (\nselect\nCAST(ssprpm.ITEM as STRING) as ALLERGY_ITEM_NAME,\nCAST(ssprpm.TYPE as STRING) AS REACTION_TYPE,\nCAST(lspa.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hspa.SITE_ID AS STRING) AS SITE_ID,\nCAST(hspa.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST('SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP' AS STRING) AS SOURCE_TABLE,\nCAST(CASE \n\t\tWHEN ssprpm.SEVERITY = 1\n\t\tTHEN 1\n\t\tWHEN ssprpm.SEVERITY = 2\n\t\tTHEN 2\n\t\tWHEN ssprpm.SEVERITY = 3\n\t\tTHEN 3\n\t\tWHEN ssprpm.SEVERITY = 4\n\t\tTHEN 4\n\t\tELSE\n\t\t0\n\t\tEND as INT) as ALLERGY_STATUS_CODE,\nCAST(CASE \n\t\tWHEN ssprpm.SEVERITY = 1\n\t\tTHEN 'Mild'\n\t\tWHEN ssprpm.SEVERITY = 2\n\t\tTHEN 'Moderately Severe'\n\t\tWHEN ssprpm.SEVERITY = 3\n\t\tTHEN 'Severe'\n\t\tWHEN ssprpm.SEVERITY = 4\n\t\tTHEN 'Life threatening'\n\t\tELSE\n\t\t'Not stated'\n\t\tEND as string) as ALLERGY_STATUS_NAME,\nCAST(hspa.RECORD_ID AS STRING) AS RECORD_ID,\nCAST(NULL AS STRING) AS PROVIDER_ID,\nCAST(ssprpm.STAMP_CREATED_DATETIME AS TIMESTAMP) AS CREATED_DATETIME, \nCAST(ssprpm.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(ssprpm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(ssprpm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(ssprpm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(ssprpm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(ssprpm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(ssprpm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(ssprpm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(ssprpm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALLERGY_OMOP` hspa\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP` ssprpm\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = ssprpm.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALLERGY_OMOP` lspa\nON hspa.HUB_SITE_PATIENT_ALLERGY_SK = lspa.HUB_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALLERGY_OMOP` lsspa\nON lspa.LNK_SITE_PATIENT_ALLERGY_SK = lsspa.LNK_SITE_PATIENT_ALLERGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lspa.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tssprpm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssprpm.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsspa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsspa.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from allergy_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_reaction_phc_md`"}, "model.nps_mi_2021.BILLING_SERVICE": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_billing_service as\r\n(\r\nselect * from {{ref('src_billing_service_bp')}}\r\nunion all \r\nselect * from {{ref('src_billing_service_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_billing_service_md')}}\r\nunion all\r\nselect * from {{ref('src_billing_service_phc_md')}}\r\n)\r\nselect * from source_billing_service", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "billing_service", "BILLING_SERVICE"], "unique_id": "model.nps_mi_2021.BILLING_SERVICE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\billing_service\\BILLING_SERVICE.sql", "original_file_path": "models\\staging\\billing_service\\BILLING_SERVICE.sql", "name": "BILLING_SERVICE", "alias": "BILLING_SERVICE", "checksum": {"name": "sha256", "checksum": "72e656b179a287c763ededac68256cf60a86ac8b56154e90097b5a7bea49039e"}, "tags": [], "refs": [["src_billing_service_bp"], ["src_billing_service_phc_bp"], ["src_billing_service_md"], ["src_billing_service_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\billing_service\\BILLING_SERVICE.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3356082, "compiled_sql": "\n\nwith source_billing_service as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_phc_md`\n)\nselect * from source_billing_service", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`"}, "model.nps_mi_2021.src_billing_service_bp": {"raw_sql": "{{config(materialized='view')}}\r\nwith billing_service_bp as (\r\nselect\r\nCAST(lbdvbs.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hbs.SITE_ID AS STRING) AS SITE_ID , \r\nCAST(hbs.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM, \r\n'SAT_BILLING_SERVICE_BP_OMOP' AS SOURCE_TABLE,\r\nCAST(null AS STRING) AS PROVIDER_ID, \r\nCAST(hbs.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\r\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\r\nCAST(sbsb.SERVICES_MBS_ITEM AS STRING) AS ITEM_NUMBER,\r\nCAST(sbsb.SERVICES_PATIENTS AS INT) AS SERVICE_PATIENT_COUNT,\r\nCAST(sbsb.SERVICES_RECORD_STATUS AS STRING) as SERVICE_RECORD_STATUS,\r\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\r\nCAST(sbsb.SERVICES_CREATED AS TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(sbsb.SERVICES_UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sbsb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sbsb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sbsb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sbsb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sbsb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sbsb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sbsb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sbsb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BILLING_SERVICE_OMOP')}} hbs\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BILLING_SERVICE_BP_OMOP')}} sbsb\r\non hbs.HUB_BILLING_SERVICE_SK = sbsb.HUB_BILLING_SERVICE_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_BILLING_SERVICE_OMOP')}} sbdvbs\r\non hbs.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_BILLING_SERVICE_OMOP')}} lbdvbs\r\non hbs.HUB_BILLING_SERVICE_SK = lbdvbs.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_BILLING_SERVICE_OMOP')}} lsbdvbs\r\nON lbdvbs.LNK_BDV_BILLING_SERVICE_SK = lsbdvbs.LNK_BDV_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbdvbs.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsbsb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbsb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND sbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from billing_service_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "billing_service", "src_billing_service_bp"], "unique_id": "model.nps_mi_2021.src_billing_service_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\billing_service\\src_billing_service_bp.sql", "original_file_path": "models\\source\\billing_service\\src_billing_service_bp.sql", "name": "src_billing_service_bp", "alias": "src_billing_service_bp", "checksum": {"name": "sha256", "checksum": "369d981fe78aec87ce25401432b100d7b0078b2e70d77ab60dcf54216626015d"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_BILLING_SERVICE_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\billing_service\\src_billing_service_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3386178, "compiled_sql": "\nwith billing_service_bp as (\nselect\nCAST(lbdvbs.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hbs.SITE_ID AS STRING) AS SITE_ID , \nCAST(hbs.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM, \n'SAT_BILLING_SERVICE_BP_OMOP' AS SOURCE_TABLE,\nCAST(null AS STRING) AS PROVIDER_ID, \nCAST(hbs.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\nCAST(sbsb.SERVICES_MBS_ITEM AS STRING) AS ITEM_NUMBER,\nCAST(sbsb.SERVICES_PATIENTS AS INT) AS SERVICE_PATIENT_COUNT,\nCAST(sbsb.SERVICES_RECORD_STATUS AS STRING) as SERVICE_RECORD_STATUS,\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\nCAST(sbsb.SERVICES_CREATED AS TIMESTAMP) AS CREATED_DATETIME,\nCAST(sbsb.SERVICES_UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sbsb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sbsb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sbsb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sbsb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sbsb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sbsb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sbsb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sbsb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BILLING_SERVICE_OMOP` hbs\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_BP_OMOP` sbsb\non hbs.HUB_BILLING_SERVICE_SK = sbsb.HUB_BILLING_SERVICE_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_BILLING_SERVICE_OMOP` sbdvbs\non hbs.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_BILLING_SERVICE_OMOP` lbdvbs\non hbs.HUB_BILLING_SERVICE_SK = lbdvbs.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_BILLING_SERVICE_OMOP` lsbdvbs\nON lbdvbs.LNK_BDV_BILLING_SERVICE_SK = lsbdvbs.LNK_BDV_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbdvbs.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsbsb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbsb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND sbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from billing_service_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_bp`"}, "model.nps_mi_2021.src_billing_service_md": {"raw_sql": "{{config(materialized='view')}}\r\nwith billing_service_md as (\r\nselect\r\nCAST(lbsp.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hb.SITE_ID AS STRING) AS SITE_ID , \r\nCAST(hb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM, \r\n'SAT_BILLING_SERVICE_MD_OMOP' AS SOURCE_TABLE, \r\nCAST(NULL AS STRING) AS PROVIDER_ID, \r\nCAST(hb.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\r\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\r\nCAST(sbsm.ITEM_NO AS STRING) AS ITEM_NUMBER, \r\nCAST(sbdvbs.BILLING_SERVICE_PATIENT_COUNT AS INT) AS SERVICE_PATIENT_COUNT,\r\nCAST(NULL AS STRING) as SERVICE_RECORD_STATUS,\r\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\r\nCAST(null AS TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(null AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sbsm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sbsm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sbsm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sbsm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sbsm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sbsm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sbsm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sbsm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BILLING_SERVICE_OMOP')}} hb\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BILLING_SERVICE_MD_OMOP')}} sbsm\r\non hb.HUB_BILLING_SERVICE_SK = sbsm.HUB_BILLING_SERVICE_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_BILLING_SERVICE_OMOP')}} sbdvbs\r\non hb.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_BILLING_SERVICE_OMOP')}} lbsp\r\non hb.HUB_BILLING_SERVICE_SK=lbsp.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_BILLING_SERVICE_OMOP')}} lsbsp \t\r\nON lbsp.LNK_BDV_BILLING_SERVICE_SK = lsbsp.LNK_BDV_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbsp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsbsm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbsm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND\tsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbsp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbsp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from billing_service_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "billing_service", "src_billing_service_md"], "unique_id": "model.nps_mi_2021.src_billing_service_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\billing_service\\src_billing_service_md.sql", "original_file_path": "models\\source\\billing_service\\src_billing_service_md.sql", "name": "src_billing_service_md", "alias": "src_billing_service_md", "checksum": {"name": "sha256", "checksum": "d8eca231c404b524b0703788b957a62bb08ff45f119626778754ec9b8af253b1"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_BILLING_SERVICE_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\billing_service\\src_billing_service_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3406053, "compiled_sql": "\nwith billing_service_md as (\nselect\nCAST(lbsp.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hb.SITE_ID AS STRING) AS SITE_ID , \nCAST(hb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM, \n'SAT_BILLING_SERVICE_MD_OMOP' AS SOURCE_TABLE, \nCAST(NULL AS STRING) AS PROVIDER_ID, \nCAST(hb.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\nCAST(sbsm.ITEM_NO AS STRING) AS ITEM_NUMBER, \nCAST(sbdvbs.BILLING_SERVICE_PATIENT_COUNT AS INT) AS SERVICE_PATIENT_COUNT,\nCAST(NULL AS STRING) as SERVICE_RECORD_STATUS,\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\nCAST(null AS TIMESTAMP) AS CREATED_DATETIME,\nCAST(null AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sbsm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sbsm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sbsm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sbsm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sbsm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sbsm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sbsm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sbsm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BILLING_SERVICE_OMOP` hb\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_MD_OMOP` sbsm\non hb.HUB_BILLING_SERVICE_SK = sbsm.HUB_BILLING_SERVICE_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_BILLING_SERVICE_OMOP` sbdvbs\non hb.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_BILLING_SERVICE_OMOP` lbsp\non hb.HUB_BILLING_SERVICE_SK=lbsp.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_BILLING_SERVICE_OMOP` lsbsp \t\nON lbsp.LNK_BDV_BILLING_SERVICE_SK = lsbsp.LNK_BDV_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbsp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsbsm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbsm.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND\tsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbsp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbsp.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from billing_service_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_md`"}, "model.nps_mi_2021.src_billing_service_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\nwith billing_service_phc_bp as (\r\nselect\r\nCAST(lbdvbs.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hbs.SITE_ID AS STRING) AS SITE_ID, \r\nCAST(hbs.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM , \r\n'SAT_BILLING_SERVICE_PHC_BP_OMOP' AS SOURCE_TABLE, \r\nCAST(NULL AS STRING) AS PROVIDER_ID, \r\nCAST(hbs.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\r\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\r\nCAST(sbspb.MBS_ITEM AS STRING) as ITEM_NUMBER,\r\nCAST(sbspb.PATIENTS AS INT) AS SERVICE_PATIENT_COUNT,\r\nCAST(sbspb.RECORD_STATUS AS STRING) as SERVICE_RECORD_STATUS,\r\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\r\nCAST(sbspb.CREATED AS TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(sbspb.UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sbspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sbspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sbspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sbspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sbspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sbspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sbspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sbspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BILLING_SERVICE_OMOP')}} hbs\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BILLING_SERVICE_PHC_BP_OMOP')}} sbspb\r\non hbs.HUB_BILLING_SERVICE_SK = sbspb.HUB_BILLING_SERVICE_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_BILLING_SERVICE_OMOP')}} sbdvbs\r\non hbs.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_BILLING_SERVICE_OMOP')}} lbdvbs\r\non hbs.HUB_BILLING_SERVICE_SK = lbdvbs.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_BILLING_SERVICE_OMOP')}} lsbdvbs\r\nON lbdvbs.LNK_BDV_BILLING_SERVICE_SK = lsbdvbs.LNK_BDV_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbdvbs.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsbspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND sbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from billing_service_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "billing_service", "src_billing_service_phc_bp"], "unique_id": "model.nps_mi_2021.src_billing_service_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\billing_service\\src_billing_service_phc_bp.sql", "original_file_path": "models\\source\\billing_service\\src_billing_service_phc_bp.sql", "name": "src_billing_service_phc_bp", "alias": "src_billing_service_phc_bp", "checksum": {"name": "sha256", "checksum": "e61abbf6c088f8279f3e086a7f8193b62742ead534ca149796c633dfc6991022"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_BILLING_SERVICE_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\billing_service\\src_billing_service_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3428473, "compiled_sql": "\nwith billing_service_phc_bp as (\nselect\nCAST(lbdvbs.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hbs.SITE_ID AS STRING) AS SITE_ID, \nCAST(hbs.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM , \n'SAT_BILLING_SERVICE_PHC_BP_OMOP' AS SOURCE_TABLE, \nCAST(NULL AS STRING) AS PROVIDER_ID, \nCAST(hbs.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\nCAST(sbspb.MBS_ITEM AS STRING) as ITEM_NUMBER,\nCAST(sbspb.PATIENTS AS INT) AS SERVICE_PATIENT_COUNT,\nCAST(sbspb.RECORD_STATUS AS STRING) as SERVICE_RECORD_STATUS,\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\nCAST(sbspb.CREATED AS TIMESTAMP) AS CREATED_DATETIME,\nCAST(sbspb.UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sbspb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sbspb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sbspb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sbspb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sbspb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sbspb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sbspb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sbspb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BILLING_SERVICE_OMOP` hbs\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_PHC_BP_OMOP` sbspb\non hbs.HUB_BILLING_SERVICE_SK = sbspb.HUB_BILLING_SERVICE_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_BILLING_SERVICE_OMOP` sbdvbs\non hbs.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_BILLING_SERVICE_OMOP` lbdvbs\non hbs.HUB_BILLING_SERVICE_SK = lbdvbs.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_BILLING_SERVICE_OMOP` lsbdvbs\nON lbdvbs.LNK_BDV_BILLING_SERVICE_SK = lsbdvbs.LNK_BDV_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbdvbs.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsbspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND sbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from billing_service_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_phc_bp`"}, "model.nps_mi_2021.src_billing_service_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\nwith billing_service_phc_md as (\r\nselect\r\nCAST(lbsp.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hb.SITE_ID AS STRING) AS SITE_ID , \r\nCAST(hb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM, \r\n'SAT_BILLING_SERVICE_PHC_MD_OMOP' AS SOURCE_TABLE, \r\nCAST(NULL AS STRING) AS PROVIDER_ID, \r\nCAST(hb.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\r\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\r\nCAST(sbspm.ITEM_NO AS STRING) as ITEM_NUMBER,\r\nCAST(sbdvbs.BILLING_SERVICE_PATIENT_COUNT AS INT) AS SERVICE_PATIENT_COUNT,\r\nCAST(NULL AS STRING) as SERVICE_RECORD_STATUS,\r\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\r\nCAST(null AS TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(null AS TIMESTAMP)  AS UPDATED_DATETIME,\r\nCAST(sbspm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sbspm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sbspm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sbspm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sbspm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sbspm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sbspm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sbspm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BILLING_SERVICE_OMOP')}} hb\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BILLING_SERVICE_PHC_MD_OMOP')}} sbspm\r\non hb.HUB_BILLING_SERVICE_SK = sbspm.HUB_BILLING_SERVICE_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_BILLING_SERVICE_OMOP')}} sbdvbs\r\non hb.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_BILLING_SERVICE_OMOP')}} lbsp\r\non hb.HUB_BILLING_SERVICE_SK=lbsp.HUB_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_BILLING_SERVICE_OMOP')}} lsbsp \t\r\nON lbsp.LNK_BDV_BILLING_SERVICE_SK = lsbsp.LNK_BDV_BILLING_SERVICE_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lbsp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsbspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbspm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND\tsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbsp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbsp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from billing_service_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "billing_service", "src_billing_service_phc_md"], "unique_id": "model.nps_mi_2021.src_billing_service_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\billing_service\\src_billing_service_phc_md.sql", "original_file_path": "models\\source\\billing_service\\src_billing_service_phc_md.sql", "name": "src_billing_service_phc_md", "alias": "src_billing_service_phc_md", "checksum": {"name": "sha256", "checksum": "fe9317344179a5b8d317e6057b7a325b15c0395f914ea1c675d2bf2dc56e2ff8"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_BILLING_SERVICE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_BILLING_SERVICE_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\billing_service\\src_billing_service_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3448894, "compiled_sql": "\nwith billing_service_phc_md as (\nselect\nCAST(lbsp.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hb.SITE_ID AS STRING) AS SITE_ID , \nCAST(hb.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM, \n'SAT_BILLING_SERVICE_PHC_MD_OMOP' AS SOURCE_TABLE, \nCAST(NULL AS STRING) AS PROVIDER_ID, \nCAST(hb.BILLING_SERVICE_ID AS STRING) as SERVICE_ID,\nCAST(sbdvbs.BILLING_SERVICE_DATE AS TIMESTAMP) AS SERVICE_DATETIME,\nCAST(sbspm.ITEM_NO AS STRING) as ITEM_NUMBER,\nCAST(sbdvbs.BILLING_SERVICE_PATIENT_COUNT AS INT) AS SERVICE_PATIENT_COUNT,\nCAST(NULL AS STRING) as SERVICE_RECORD_STATUS,\nCAST(sbdvbs.BILLING_SERVICE_VISIT_DATE AS TIMESTAMP) as VISIT_DATETIME,\nCAST(null AS TIMESTAMP) AS CREATED_DATETIME,\nCAST(null AS TIMESTAMP)  AS UPDATED_DATETIME,\nCAST(sbspm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sbspm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sbspm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sbspm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sbspm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sbspm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sbspm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sbspm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BILLING_SERVICE_OMOP` hb\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_PHC_MD_OMOP` sbspm\non hb.HUB_BILLING_SERVICE_SK = sbspm.HUB_BILLING_SERVICE_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_BILLING_SERVICE_OMOP` sbdvbs\non hb.HUB_BILLING_SERVICE_SK = sbdvbs.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_BILLING_SERVICE_OMOP` lbsp\non hb.HUB_BILLING_SERVICE_SK=lbsp.HUB_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_BILLING_SERVICE_OMOP` lsbsp \t\nON lbsp.LNK_BDV_BILLING_SERVICE_SK = lsbsp.LNK_BDV_BILLING_SERVICE_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lbsp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsbspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbspm.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND\tsbdvbs.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbdvbs.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbsp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbsp.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from billing_service_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_billing_service_phc_md`"}, "model.nps_mi_2021.REFERRALS": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nWITH referrals as (\r\n\r\nselect\r\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nNULL as RECORD_ID,\r\nNULL as PRACTITIONER_ID,\r\nNULL as CATEGORY_NAME,\r\nNULL as CREATED_BY,\r\nSAFE_CAST(satt.PATIENT_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nNULL as UPDATED_BY,\r\nSAFE_CAST(satt.PATIENT_UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\r\nSAFE_CAST(satt.RECORDSTATUS as int) AS RECORD_STATUS,\r\nSAFE_CAST(\"BP\" AS STRING) AS SOURCE_SYSTEM\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hub\r\nINNER join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} satt\r\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\r\nUNION ALL\r\n\r\nselect\r\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nNULL as RECORD_ID,\r\nNULL as PRACTITIONER_ID,\r\nNULL as CATEGORY_NAME,\r\nNULL as CREATED_BY,\r\nSAFE_CAST(satt.PATIENT_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nNULL as UPDATED_BY,\r\nSAFE_CAST(satt.PATIENT_UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\r\nNULL AS RECORD_STATUS,\r\nSAFE_CAST(\"MD\" as string) AS SOURCE_SYSTEM\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hub\r\nINNER join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} satt\r\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\r\nUNION ALL\r\n\r\nselect\r\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(satt.RECORD_NO as string) as RECORD_ID,\r\nNULL as PRACTITIONER_ID,\r\nNULL as CATEGORY_NAME,\r\nSAFE_CAST(satt.CREATEDBY as string) as CREATED_BY,\r\nSAFE_CAST(satt.CREATED as timestamp) as CREATED_DATETIME,\r\nSAFE_CAST(satt.UPDATEDBY as string) as UPDATED_BY,\r\nSAFE_CAST(satt.UPDATED as timestamp) as UPDATED_DATETIME,\r\nSAFE_CAST(satt.RECORD_STATUS as int) AS RECORD_STATUS,\r\nSAFE_CAST(\"PHC_BP\" as string) AS SOURCE_SYSTEM\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hub\r\nINNER join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} satt\r\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\r\nUNION ALL\r\n\r\nselect\r\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nNULL as RECORD_ID,\r\nNULL as PRACTITIONER_ID,\r\nNULL as CATEGORY_NAME,\r\nNULL as CREATED_BY,\r\nSAFE_CAST(satt.STAMP_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nNULL as UPDATED_BY,\r\nNULL as UPDATED_DATETIME,\r\nNULL AS RECORD_STATUS,\r\nSAFE_CAST(\"PHC_MD\" as string) AS SOURCE_SYSTEM\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hub\r\nINNER join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} satt\r\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n)\r\n\r\nSELECT * FROM referrals", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "REFERRALS", "REFERRALS"], "unique_id": "model.nps_mi_2021.REFERRALS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\REFERRALS\\REFERRALS.sql", "original_file_path": "models\\staging\\REFERRALS\\REFERRALS.sql", "name": "REFERRALS", "alias": "REFERRALS", "checksum": {"name": "sha256", "checksum": "f36fcc3f60dd62342ec08e3127b3eaff66bcf3abd5a3cb3a7056d10058158eba"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\REFERRALS\\REFERRALS.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3468883, "compiled_sql": "\n\nWITH referrals as (\n\nselect\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nNULL as RECORD_ID,\nNULL as PRACTITIONER_ID,\nNULL as CATEGORY_NAME,\nNULL as CREATED_BY,\nSAFE_CAST(satt.PATIENT_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nNULL as UPDATED_BY,\nSAFE_CAST(satt.PATIENT_UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\nSAFE_CAST(satt.RECORDSTATUS as int) AS RECORD_STATUS,\nSAFE_CAST(\"BP\" AS STRING) AS SOURCE_SYSTEM\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hub\nINNER join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` satt\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\nUNION ALL\n\nselect\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nNULL as RECORD_ID,\nNULL as PRACTITIONER_ID,\nNULL as CATEGORY_NAME,\nNULL as CREATED_BY,\nSAFE_CAST(satt.PATIENT_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nNULL as UPDATED_BY,\nSAFE_CAST(satt.PATIENT_UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\nNULL AS RECORD_STATUS,\nSAFE_CAST(\"MD\" as string) AS SOURCE_SYSTEM\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hub\nINNER join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` satt\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\nUNION ALL\n\nselect\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(satt.RECORD_NO as string) as RECORD_ID,\nNULL as PRACTITIONER_ID,\nNULL as CATEGORY_NAME,\nSAFE_CAST(satt.CREATEDBY as string) as CREATED_BY,\nSAFE_CAST(satt.CREATED as timestamp) as CREATED_DATETIME,\nSAFE_CAST(satt.UPDATEDBY as string) as UPDATED_BY,\nSAFE_CAST(satt.UPDATED as timestamp) as UPDATED_DATETIME,\nSAFE_CAST(satt.RECORD_STATUS as int) AS RECORD_STATUS,\nSAFE_CAST(\"PHC_BP\" as string) AS SOURCE_SYSTEM\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hub\nINNER join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` satt\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\nUNION ALL\n\nselect\nSAFE_CAST(hub.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hub.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nNULL as RECORD_ID,\nNULL as PRACTITIONER_ID,\nNULL as CATEGORY_NAME,\nNULL as CREATED_BY,\nSAFE_CAST(satt.STAMP_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nNULL as UPDATED_BY,\nNULL as UPDATED_DATETIME,\nNULL AS RECORD_STATUS,\nSAFE_CAST(\"PHC_MD\" as string) AS SOURCE_SYSTEM\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hub\nINNER join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` satt\non hub.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n)\n\nSELECT * FROM referrals", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`REFERRALS`"}, "model.nps_mi_2021.src_active_patients": {"raw_sql": "{{config(materialized='view')}}\n\nwith active_patients AS (\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT\nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_MD_OMOP')}} SAT_PATIENT_GRH_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_MD.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_GRH_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n\tUNION ALL\n\t\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT \nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_BP_OMOP')}} SAT_PATIENT_GRH_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_BP.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_GRH_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n\t\n\tUNION ALL \n\t\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT \nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_PHC_MD_OMOP')}} SAT_PATIENT_PHC_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_MD.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_PHC_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n\t\tUNION ALL\n\t\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'HUB_SITE_PATIENT_OMOP')}} HUB_PATIENT \nJOIN\n\t{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021',\n    'SAT_SITE_PATIENT_PHC_BP_OMOP')}} SAT_PATIENT_PHC_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_BP.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_PHC_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\nselect distinct HUB_SITE_PATIENT_SK from active_patients", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "diagnosis", "src_active_patients"], "unique_id": "model.nps_mi_2021.src_active_patients", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\diagnosis\\src_active_patients.sql", "original_file_path": "models\\source\\diagnosis\\src_active_patients.sql", "name": "src_active_patients", "alias": "src_active_patients", "checksum": {"name": "sha256", "checksum": "04af5759dc473fda8b044b354e9711a1356425ae8c3cf79795d509acb0d44b29"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\diagnosis\\src_active_patients.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.348889, "compiled_sql": "\n\nwith active_patients AS (\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT\nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` SAT_PATIENT_GRH_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_MD.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_GRH_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n\tUNION ALL\n\t\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT \nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` SAT_PATIENT_GRH_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_GRH_BP.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_GRH_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_GRH_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n\t\n\tUNION ALL \n\t\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT \nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` SAT_PATIENT_PHC_MD\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_MD.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_PHC_MD.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_MD.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n\t\tUNION ALL\n\t\nselect HUB_PATIENT.HUB_SITE_PATIENT_SK from\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` HUB_PATIENT \nJOIN\n\t`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` SAT_PATIENT_PHC_BP\nON\n\tHUB_PATIENT.HUB_SITE_PATIENT_SK = SAT_PATIENT_PHC_BP.HUB_SITE_PATIENT_SK\nWHERE \n\tSAT_PATIENT_PHC_BP.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND SAT_PATIENT_PHC_BP.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\nselect distinct HUB_SITE_PATIENT_SK from active_patients", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_active_patients`"}, "model.nps_mi_2021.ENCOUNTER": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_encounter as\r\n(\r\nselect * from {{ref('src_encounter_bp')}}\r\nunion all \r\nselect * from {{ref('src_encounter_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_encounter_phc_md_excld_sensitive_data')}}\r\nunion all\r\nselect * from {{ref('src_encounter_md_excld_sensitive_data')}}\r\n)\r\nselect * from source_encounter", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "encounter", "ENCOUNTER"], "unique_id": "model.nps_mi_2021.ENCOUNTER", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\encounter\\ENCOUNTER.sql", "original_file_path": "models\\staging\\encounter\\ENCOUNTER.sql", "name": "ENCOUNTER", "alias": "ENCOUNTER", "checksum": {"name": "sha256", "checksum": "49a3c20a70131b9fbc3dc28301f0f180b4386a52db9f176d73111ec8277dc7ff"}, "tags": [], "refs": [["src_encounter_bp"], ["src_encounter_phc_bp"], ["src_encounter_phc_md_excld_sensitive_data"], ["src_encounter_md_excld_sensitive_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\encounter\\ENCOUNTER.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3508902, "compiled_sql": "\n\nwith source_encounter as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_phc_md_excld_sensitive_data`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_md_excld_sensitive_data`\n)\nselect * from source_encounter", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`"}, "model.nps_mi_2021.src_encounter_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_bp as (\r\n\r\nselect\r\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\r\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\r\ncast(sebo.CREATED_DATETIME as STRING) as CREATED_DATETIME,\r\ncast(sebo.UPDATED_DATETIME as STRING) as UPDATED_DATETIME,\r\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\r\nCAST(sebo.START_TIME as STRING) AS ENCOUNTER_START_DATETIME,\r\nCAST(sebo.END_TIME as STRING) AS ENCOUNTER_END_DATETIME,\r\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\r\ncast(NULL as STRING) as PROVIDER_ID,\r\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTER_BP_OMOP' as STRING) as SOURCE_TABLE,\r\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\r\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\r\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\r\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\r\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_OMOP')}} heo \r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo \r\non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_ENCOUNTER_OMOP')}} lbeo\r\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo \r\non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_ENCOUNTER_OMOP')}} lsbeo \r\non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTER_BP_OMOP')}} sebo \r\non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_ENCOUNTER_OMOP')}} sbeo\r\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\nselect distinct * from encounter_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter", "src_encounter_bp"], "unique_id": "model.nps_mi_2021.src_encounter_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter\\src_encounter_bp.sql", "original_file_path": "models\\source\\encounter\\src_encounter_bp.sql", "name": "src_encounter_bp", "alias": "src_encounter_bp", "checksum": {"name": "sha256", "checksum": "b7256342b186e449feef41aeecb28a6c9adaf39d727f70dab403090b3e2fcef2"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter\\src_encounter_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3530304, "compiled_sql": "\n\nwith encounter_bp as (\n\nselect\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\ncast(sebo.CREATED_DATETIME as STRING) as CREATED_DATETIME,\ncast(sebo.UPDATED_DATETIME as STRING) as UPDATED_DATETIME,\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\nCAST(sebo.START_TIME as STRING) AS ENCOUNTER_START_DATETIME,\nCAST(sebo.END_TIME as STRING) AS ENCOUNTER_END_DATETIME,\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\ncast(NULL as STRING) as PROVIDER_ID,\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTER_BP_OMOP' as STRING) as SOURCE_TABLE,\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP` heo \ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo \non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_ENCOUNTER_OMOP` lbeo\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo \non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_ENCOUNTER_OMOP` lsbeo \non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_BP_OMOP` sebo \non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_ENCOUNTER_OMOP` sbeo\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect distinct * from encounter_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_bp`"}, "model.nps_mi_2021.src_encounter_md_excld_sensitive_data": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_md as (\r\n\r\nselect\r\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\r\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\r\ncast(sebo.CREATED_DATETIME as STRING) as CREATED_DATETIME,\r\ncast(sebo.UPDATED_DATETIME as STRING) as UPDATED_DATETIME,\r\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\r\nCAST(sebo.RECORD_START as STRING) AS ENCOUNTER_START_DATETIME,\r\nCAST(sebo.RECORD_END as STRING) AS ENCOUNTER_END_DATETIME,\r\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\r\ncast(NULL as STRING) as PROVIDER_ID,\r\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTER_MD_OMOP' as STRING) as SOURCE_TABLE,\r\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\r\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\r\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\r\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\r\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_OMOP')}} heo \r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo \r\non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_ENCOUNTER_OMOP')}} lbeo\r\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo \r\non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_ENCOUNTER_OMOP')}} lsbeo \r\non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP')}} sebo \r\non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_ENCOUNTER_OMOP')}} sbeo\r\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect distinct * from encounter_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter", "src_encounter_md_excld_sensitive_data"], "unique_id": "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter\\src_encounter_md_excld_sensitive_data.sql", "original_file_path": "models\\source\\encounter\\src_encounter_md_excld_sensitive_data.sql", "name": "src_encounter_md_excld_sensitive_data", "alias": "src_encounter_md_excld_sensitive_data", "checksum": {"name": "sha256", "checksum": "c24c9fcefb61b92d8ec646d80c38d14c3d12760a7fdd0a538425406750bcf984"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter\\src_encounter_md_excld_sensitive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3550723, "compiled_sql": "\n\nwith encounter_md as (\n\nselect\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\ncast(sebo.CREATED_DATETIME as STRING) as CREATED_DATETIME,\ncast(sebo.UPDATED_DATETIME as STRING) as UPDATED_DATETIME,\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\nCAST(sebo.RECORD_START as STRING) AS ENCOUNTER_START_DATETIME,\nCAST(sebo.RECORD_END as STRING) AS ENCOUNTER_END_DATETIME,\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\ncast(NULL as STRING) as PROVIDER_ID,\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTER_MD_OMOP' as STRING) as SOURCE_TABLE,\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP` heo \ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo \non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_ENCOUNTER_OMOP` lbeo\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo \non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_ENCOUNTER_OMOP` lsbeo \non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP` sebo \non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_ENCOUNTER_OMOP` sbeo\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect distinct * from encounter_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_md_excld_sensitive_data`"}, "model.nps_mi_2021.src_encounter_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_phc_bp as (\r\n\r\nselect\r\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\r\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\r\ncast(sebo.CREATED as STRING) as CREATED_DATETIME,\r\ncast(sebo.UPDATED as STRING) as UPDATED_DATETIME,\r\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\r\nCAST(sebo.START_TIME as STRING) AS ENCOUNTER_START_DATETIME,\r\nCAST(sebo.END_TIME as STRING) AS ENCOUNTER_END_DATETIME,\r\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\r\ncast(NULL as STRING) as PROVIDER_ID,\r\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTER_PHC_BP_OMOP' as STRING) as SOURCE_TABLE,\r\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\r\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\r\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\r\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\r\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_OMOP')}} heo \r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo \r\non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_ENCOUNTER_OMOP')}} lbeo\r\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo \r\non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_ENCOUNTER_OMOP')}} lsbeo \r\non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTER_PHC_BP_OMOP')}} sebo \r\non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_ENCOUNTER_OMOP')}} sbeo\r\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\nselect distinct * from encounter_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter", "src_encounter_phc_bp"], "unique_id": "model.nps_mi_2021.src_encounter_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter\\src_encounter_phc_bp.sql", "original_file_path": "models\\source\\encounter\\src_encounter_phc_bp.sql", "name": "src_encounter_phc_bp", "alias": "src_encounter_phc_bp", "checksum": {"name": "sha256", "checksum": "3c39addc4e664d851f9d9d3a1b9bed0538f7f3c65ec0099dfeadd5a54d5ca995"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter\\src_encounter_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.357073, "compiled_sql": "\n\nwith encounter_phc_bp as (\n\nselect\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\ncast(sebo.CREATED as STRING) as CREATED_DATETIME,\ncast(sebo.UPDATED as STRING) as UPDATED_DATETIME,\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\nCAST(sebo.START_TIME as STRING) AS ENCOUNTER_START_DATETIME,\nCAST(sebo.END_TIME as STRING) AS ENCOUNTER_END_DATETIME,\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\ncast(NULL as STRING) as PROVIDER_ID,\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTER_PHC_BP_OMOP' as STRING) as SOURCE_TABLE,\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP` heo \ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo \non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_ENCOUNTER_OMOP` lbeo\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo \non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_ENCOUNTER_OMOP` lsbeo \non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_PHC_BP_OMOP` sebo \non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_ENCOUNTER_OMOP` sbeo\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect distinct * from encounter_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_phc_bp`"}, "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_md as (\r\n\r\nselect\r\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\r\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\r\ncast(sebo.STAMP_CREATED_DATETIME as STRING) as CREATED_DATETIME,\r\ncast(sebo.STAMP_DATETIME as STRING) as UPDATED_DATETIME,\r\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\r\nCAST(sebo.RECORD_START as STRING) AS ENCOUNTER_START_DATETIME,\r\nCAST(sebo.RECORD_END as STRING) AS ENCOUNTER_END_DATETIME,\r\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\r\ncast(NULL as STRING) as PROVIDER_ID,\r\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTER_PHC_MD_OMOP' as STRING) as SOURCE_TABLE,\r\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\r\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\r\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\r\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\r\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\r\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_OMOP')}} heo \r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo \r\non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_ENCOUNTER_OMOP')}} lbeo\r\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo \r\non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_ENCOUNTER_OMOP')}} lsbeo \r\non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP')}} sebo \r\non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_ENCOUNTER_OMOP')}} sbeo\r\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\nselect distinct * from encounter_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter", "src_encounter_phc_md_excld_sensitive_data"], "unique_id": "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter\\src_encounter_phc_md_excld_sensitive_data.sql", "original_file_path": "models\\source\\encounter\\src_encounter_phc_md_excld_sensitive_data.sql", "name": "src_encounter_phc_md_excld_sensitive_data", "alias": "src_encounter_phc_md_excld_sensitive_data", "checksum": {"name": "sha256", "checksum": "153b98079ac22fe3eb53c440e4f84470acb04e605d024f6656f8dd051d323951"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter\\src_encounter_phc_md_excld_sensitive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.359081, "compiled_sql": "\n\nwith encounter_md as (\n\nselect\ncast(heo.ENCOUNTER_ID as STRING) as ENCOUNTER_ID,\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\ncast(sebo.STAMP_CREATED_DATETIME as STRING) as CREATED_DATETIME,\ncast(sebo.STAMP_DATETIME as STRING) as UPDATED_DATETIME,\ncast(DATE(sebo.VISIT_DATE) as DATE) AS VISIT_DATE,\nCAST(sebo.RECORD_START as STRING) AS ENCOUNTER_START_DATETIME,\nCAST(sebo.RECORD_END as STRING) AS ENCOUNTER_END_DATETIME,\ncast(sebo.DURATION as int) AS ENCOUNTER_DURATION,\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) as PATIENT_NUMBER,\ncast(NULL as STRING) as PROVIDER_ID,\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTER_PHC_MD_OMOP' as STRING) as SOURCE_TABLE,\ncast(sebo.VISIT_DATE as TIMESTAMP) AS VISIT_DATETIME,\ncast(sebo.VISIT_TYPE as STRING) AS VISIT_TYPE,\ncast(sbeo.LOGICAL_ENCOUNTER_COUNT as int) as LOGICAL_ENCOUNTER_COUNT,\ncast(sbeo.PHYSICAL_ENCOUNTER_COUNT as int) as PHYSICAL_ENCOUNTER_COUNT,\ncast(sbeo.EXACT_DUPLICATE_ENCOUNTER_COUNT as int) as EXACT_DUPLICATE_ENCOUNTER_COUNT,\ncast(sbeo.CONTAINS_IMPORTED_ENCOUNTERS as STRING) as CONTAINS_IMPORTED_ENCOUNTERS,\nCAST(sebo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sebo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sebo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sebo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sebo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sebo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sebo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sebo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP` heo \ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo \non heo.HUB_ENCOUNTER_SK=leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_ENCOUNTER_OMOP` lbeo\non leo.HUB_SITE_PATIENT_SK =lbeo.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo \non leo.LNK_ENCOUNTER_SK=lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_ENCOUNTER_OMOP` lsbeo \non lbeo.LNK_BDV_ENCOUNTER_SK=lsbeo.LNK_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP` sebo \non leo.HUB_ENCOUNTER_SK=sebo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_ENCOUNTER_OMOP` sbeo\non lbeo.HUB_BDV_ENCOUNTER_SK=sbeo.HUB_BDV_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND sbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbeo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbeo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect distinct * from encounter_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_phc_md_excld_sensitive_data`"}, "model.nps_mi_2021.ENCOUNTER_REASON": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_encounter_reason as\r\n(\r\nselect * from {{ref('src_encounter_reason_bp_excld_sensitive_data')}}\r\nunion all\r\nselect * from {{ref('src_encounter_reason_md_excld_sensitive_data')}}\r\nunion all\r\nselect * from {{ref('src_encounter_reason_phc_md_excld_sensitive_data')}}\r\nunion all\r\nselect * from {{ref('src_encounter_reason_phc_bp_excld_sensitive_data')}}\r\n)\r\nselect * from source_encounter_reason", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "encounter_reason", "ENCOUNTER_REASON"], "unique_id": "model.nps_mi_2021.ENCOUNTER_REASON", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\encounter_reason\\ENCOUNTER_REASON.sql", "original_file_path": "models\\staging\\encounter_reason\\ENCOUNTER_REASON.sql", "name": "ENCOUNTER_REASON", "alias": "ENCOUNTER_REASON", "checksum": {"name": "sha256", "checksum": "480f5846c0272a134d265a1f1c86e5dfc619caf1a1993c9611771e03dfc637dc"}, "tags": [], "refs": [["src_encounter_reason_bp_excld_sensitive_data"], ["src_encounter_reason_md_excld_sensitive_data"], ["src_encounter_reason_phc_md_excld_sensitive_data"], ["src_encounter_reason_phc_bp_excld_sensitive_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\encounter_reason\\ENCOUNTER_REASON.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3620722, "compiled_sql": "\n\nwith source_encounter_reason as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_bp_excld_sensitive_data`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_md_excld_sensitive_data`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_phc_md_excld_sensitive_data`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_phc_bp_excld_sensitive_data`\n)\nselect * from source_encounter_reason", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`"}, "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_reason_bp as (\r\n\r\nselect \r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\ncast(hero.SITE_ID AS STRING) AS SITE_ID,\r\nNULL as PROVIDER_ID,\r\ncast(\"BP\" AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\r\ncast(hero.ENCOUNTER_REASON_ID AS STRING) AS ENCOUNTER_ID,\r\ncast(sebo.VISIT_DATE AS TIMESTAMP) AS VISIT_DATETIME,\r\ncast(serb.ENCOUNTER_REASON as STRING) AS ENCOUNTER_REASON,\r\ncast(sebo.VISIT_TYPE AS STRING) AS ENCOUNTER_TYPE,\r\ncast(serb.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\r\ncast(serb.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\ncast(serb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(serb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(serb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(serb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(serb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(serb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(serb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(serb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(serb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_REASON_BP_OMOP')}} hero\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_REASON_BP_OMOP')}} lerb \r\non hero.HUB_ENCOUNTER_REASON_BP_SK=lerb.HUB_ENCOUNTER_REASON_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo\r\non lerb.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo\r\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_REASON_BP_OMOP')}} lserb \r\non lerb.LNK_ENCOUNTER_REASON_BP_SK = lserb.LNK_ENCOUNTER_REASON_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTER_BP_OMOP')}} sebo\r\non lerb.HUB_ENCOUNTER_SK = sebo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP')}} serb\r\non lerb.HUB_ENCOUNTER_REASON_BP_SK = serb.HUB_ENCOUNTER_REASON_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND serb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND serb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lserb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lserb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from encounter_reason_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter_reason", "src_encounter_reason_bp_excld_sensitive_data"], "unique_id": "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter_reason\\src_encounter_reason_bp_excld_sensitive_data.sql", "original_file_path": "models\\source\\encounter_reason\\src_encounter_reason_bp_excld_sensitive_data.sql", "name": "src_encounter_reason_bp_excld_sensitive_data", "alias": "src_encounter_reason_bp_excld_sensitive_data", "checksum": {"name": "sha256", "checksum": "679d0fc04ec4ef52b00f573e40151b6de60b9490e6ccd9da15d8e47de6bd9a99"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_REASON_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_REASON_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_REASON_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter_reason\\src_encounter_reason_bp_excld_sensitive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3632796, "compiled_sql": "\n\nwith encounter_reason_bp as (\n\nselect \ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\ncast(hero.SITE_ID AS STRING) AS SITE_ID,\nNULL as PROVIDER_ID,\ncast(\"BP\" AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\ncast(hero.ENCOUNTER_REASON_ID AS STRING) AS ENCOUNTER_ID,\ncast(sebo.VISIT_DATE AS TIMESTAMP) AS VISIT_DATETIME,\ncast(serb.ENCOUNTER_REASON as STRING) AS ENCOUNTER_REASON,\ncast(sebo.VISIT_TYPE AS STRING) AS ENCOUNTER_TYPE,\ncast(serb.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\ncast(serb.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\ncast(serb.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(serb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(serb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(serb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(serb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(serb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(serb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(serb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(serb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_REASON_BP_OMOP` hero\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_REASON_BP_OMOP` lerb \non hero.HUB_ENCOUNTER_REASON_BP_SK=lerb.HUB_ENCOUNTER_REASON_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo\non lerb.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_REASON_BP_OMOP` lserb \non lerb.LNK_ENCOUNTER_REASON_BP_SK = lserb.LNK_ENCOUNTER_REASON_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_BP_OMOP` sebo\non lerb.HUB_ENCOUNTER_SK = sebo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP` serb\non lerb.HUB_ENCOUNTER_REASON_BP_SK = serb.HUB_ENCOUNTER_REASON_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND serb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND serb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lserb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lserb.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from encounter_reason_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_bp_excld_sensitive_data`"}, "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_reason_md as (\r\nselect \r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\r\nNULL as PROVIDER_ID,\r\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\r\ncast(heo.ENCOUNTER_ID AS STRING) AS ENCOUNTER_ID,\r\ncast(sem.VISIT_DATE AS TIMESTAMP) AS VISIT_DATETIME,\r\ncast(sem.REASON as STRING) AS ENCOUNTER_REASON,\r\ncast(setm.ENCOUNTER_TYPE AS STRING) AS ENCOUNTER_TYPE,\r\ncast(sem.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\r\ncast(sem.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\ncast(sem.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(sem.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sem.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sem.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sem.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sem.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sem.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sem.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sem.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_OMOP')}} heo\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP')}} sem\r\non heo.HUB_ENCOUNTER_SK = sem.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTER_TYPE_MD_OMOP')}} setm \r\non heo.HUB_ENCOUNTER_SK = setm.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo\r\non sem.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo\r\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_TYPE_MD_OMOP')}} letm \r\non setm.HUB_ENCOUNTER_SK = letm.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_TYPE_MD_OMOP')}} lset\r\non letm.LNK_ENCOUNTER_TYPE_MD_SK = lset.LNK_ENCOUNTER_TYPE_MD_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsetm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND setm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND sem.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sem.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lset.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lset.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\n\r\nselect * from encounter_reason_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_TYPE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_TYPE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_TYPE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter_reason", "src_encounter_reason_md_excld_sensitive_data"], "unique_id": "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter_reason\\src_encounter_reason_md_excld_sensitive_data.sql", "original_file_path": "models\\source\\encounter_reason\\src_encounter_reason_md_excld_sensitive_data.sql", "name": "src_encounter_reason_md_excld_sensitive_data", "alias": "src_encounter_reason_md_excld_sensitive_data", "checksum": {"name": "sha256", "checksum": "ca22aa8e1d13e9928e049f8915b312eaee48bde90e2605df34b4826bf43d8dc2"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_TYPE_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_TYPE_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_TYPE_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter_reason\\src_encounter_reason_md_excld_sensitive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.366323, "compiled_sql": "\n\nwith encounter_reason_md as (\nselect \ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\nNULL as PROVIDER_ID,\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\ncast(heo.ENCOUNTER_ID AS STRING) AS ENCOUNTER_ID,\ncast(sem.VISIT_DATE AS TIMESTAMP) AS VISIT_DATETIME,\ncast(sem.REASON as STRING) AS ENCOUNTER_REASON,\ncast(setm.ENCOUNTER_TYPE AS STRING) AS ENCOUNTER_TYPE,\ncast(sem.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\ncast(sem.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\ncast(sem.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(sem.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sem.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sem.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sem.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sem.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sem.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sem.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sem.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP` heo\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP` sem\non heo.HUB_ENCOUNTER_SK = sem.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_TYPE_MD_OMOP` setm \non heo.HUB_ENCOUNTER_SK = setm.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo\non sem.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_TYPE_MD_OMOP` letm \non setm.HUB_ENCOUNTER_SK = letm.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_TYPE_MD_OMOP` lset\non letm.LNK_ENCOUNTER_TYPE_MD_SK = lset.LNK_ENCOUNTER_TYPE_MD_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsetm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND setm.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND sem.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sem.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lset.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lset.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\n\nselect * from encounter_reason_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_md_excld_sensitive_data`"}, "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_reason_phc_bp as (\r\nselect \r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\ncast(hero.SITE_ID AS STRING) AS SITE_ID,\r\nNULL as PROVIDER_ID,\r\ncast(\"PHC_BP\" AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\r\ncast(hero.ENCOUNTER_REASON_ID AS STRING) AS ENCOUNTER_ID,\r\ncast(sebo.VISIT_DATE AS timestamp) as VISIT_DATETIME,\r\ncast(serb.REASON as STRING) AS ENCOUNTER_REASON,\r\ncast(sebo.VISIT_TYPE AS STRING) AS ENCOUNTER_TYPE,\r\ncast(serb.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\r\ncast(serb.CREATED as TIMESTAMP) AS CREATED_DATETIME,\r\ncast(serb.UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\r\nCAST(serb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(serb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(serb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(serb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(serb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(serb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(serb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(serb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_REASON_BP_OMOP')}} hero\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_REASON_BP_OMOP')}} lerb \r\non hero.HUB_ENCOUNTER_REASON_BP_SK=lerb.HUB_ENCOUNTER_REASON_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo\r\non lerb.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo\r\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_REASON_BP_OMOP')}} lserb \r\non lerb.LNK_ENCOUNTER_REASON_BP_SK = lserb.LNK_ENCOUNTER_REASON_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTER_PHC_BP_OMOP')}} sebo\r\non lerb.HUB_ENCOUNTER_SK = sebo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP')}} serb\r\non lerb.HUB_ENCOUNTER_REASON_BP_SK = serb.HUB_ENCOUNTER_REASON_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND serb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND serb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lserb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lserb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from encounter_reason_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter_reason", "src_encounter_reason_phc_bp_excld_sensitive_data"], "unique_id": "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter_reason\\src_encounter_reason_phc_bp_excld_sensitive_data.sql", "original_file_path": "models\\source\\encounter_reason\\src_encounter_reason_phc_bp_excld_sensitive_data.sql", "name": "src_encounter_reason_phc_bp_excld_sensitive_data", "alias": "src_encounter_reason_phc_bp_excld_sensitive_data", "checksum": {"name": "sha256", "checksum": "dfe8050d4b23ab8c45fd2fb1c3229a33d50ab3da75e7a6f8e4716efd3993869e"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_REASON_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_REASON_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_REASON_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter_reason\\src_encounter_reason_phc_bp_excld_sensitive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3683214, "compiled_sql": "\n\nwith encounter_reason_phc_bp as (\nselect \ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\ncast(hero.SITE_ID AS STRING) AS SITE_ID,\nNULL as PROVIDER_ID,\ncast(\"PHC_BP\" AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\ncast(hero.ENCOUNTER_REASON_ID AS STRING) AS ENCOUNTER_ID,\ncast(sebo.VISIT_DATE AS timestamp) as VISIT_DATETIME,\ncast(serb.REASON as STRING) AS ENCOUNTER_REASON,\ncast(sebo.VISIT_TYPE AS STRING) AS ENCOUNTER_TYPE,\ncast(serb.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\ncast(serb.CREATED as TIMESTAMP) AS CREATED_DATETIME,\ncast(serb.UPDATED AS TIMESTAMP) AS UPDATED_DATETIME,\nCAST(serb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(serb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(serb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(serb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(serb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(serb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(serb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(serb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_REASON_BP_OMOP` hero\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_REASON_BP_OMOP` lerb \non hero.HUB_ENCOUNTER_REASON_BP_SK=lerb.HUB_ENCOUNTER_REASON_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo\non lerb.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_REASON_BP_OMOP` lserb \non lerb.LNK_ENCOUNTER_REASON_BP_SK = lserb.LNK_ENCOUNTER_REASON_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_PHC_BP_OMOP` sebo\non lerb.HUB_ENCOUNTER_SK = sebo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP` serb\non lerb.HUB_ENCOUNTER_REASON_BP_SK = serb.HUB_ENCOUNTER_REASON_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsebo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sebo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND serb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND serb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lserb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lserb.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from encounter_reason_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_phc_bp_excld_sensitive_data`"}, "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith encounter_reason_phc_md as (\r\nselect \r\ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\r\nNULL as PROVIDER_ID,\r\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\r\ncast(heo.ENCOUNTER_ID AS STRING) AS ENCOUNTER_ID,\r\ncast(sepm.VISIT_DATE AS TIMESTAMP) AS VISIT_DATETIME,\r\ncast(sepm.REASON as STRING) AS ENCOUNTER_REASON,\r\ncast(NULL AS STRING) AS ENCOUNTER_TYPE,\r\ncast(sepm.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\r\ncast(sepm.STAMP_CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\ncast(sepm.STAMP_DATETIME AS timestamp) as  UPDATED_DATETIME,\r\nCAST(sepm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sepm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sepm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sepm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sepm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sepm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sepm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sepm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_ENCOUNTER_OMOP')}} heo\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP')}} sepm\r\non heo.HUB_ENCOUNTER_SK = sepm.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_ENCOUNTER_OMOP')}} leo\r\non sepm.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_ENCOUNTER_OMOP')}} lseo\r\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n    sepm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sepm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\n\r\nselect * from encounter_reason_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "encounter_reason", "src_encounter_reason_phc_md_excld_sensitive_data"], "unique_id": "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\encounter_reason\\src_encounter_reason_phc_md_excld_sensitive_data.sql", "original_file_path": "models\\source\\encounter_reason\\src_encounter_reason_phc_md_excld_sensitive_data.sql", "name": "src_encounter_reason_phc_md_excld_sensitive_data", "alias": "src_encounter_reason_phc_md_excld_sensitive_data", "checksum": {"name": "sha256", "checksum": "feb414233781bc015ff43b2fa061ec117f58cfe506dcddd8c8d4ac9257597d52"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\encounter_reason\\src_encounter_reason_phc_md_excld_sensitive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3703203, "compiled_sql": "\n\nwith encounter_reason_phc_md as (\nselect \ncast(leo.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\ncast(heo.SITE_ID AS STRING) AS SITE_ID,\nNULL as PROVIDER_ID,\ncast(heo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP' as STRING) AS SOURCE_TABLE,\ncast(heo.ENCOUNTER_ID AS STRING) AS ENCOUNTER_ID,\ncast(sepm.VISIT_DATE AS TIMESTAMP) AS VISIT_DATETIME,\ncast(sepm.REASON as STRING) AS ENCOUNTER_REASON,\ncast(NULL AS STRING) AS ENCOUNTER_TYPE,\ncast(sepm.REASON_CODE as STRING) AS ENCOUNTER_REASON_CODE,\ncast(sepm.STAMP_CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\ncast(sepm.STAMP_DATETIME AS timestamp) as  UPDATED_DATETIME,\nCAST(sepm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sepm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sepm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sepm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sepm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sepm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sepm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sepm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP` heo\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP` sepm\non heo.HUB_ENCOUNTER_SK = sepm.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP` leo\non sepm.HUB_ENCOUNTER_SK = leo.HUB_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP` lseo\non leo.LNK_ENCOUNTER_SK = lseo.LNK_ENCOUNTER_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON leo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n    sepm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sepm.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lseo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lseo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\n\nselect * from encounter_reason_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_encounter_reason_phc_md_excld_sensitive_data`"}, "model.nps_mi_2021.IMMUNISATION": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_immunization as\r\n(\r\nselect * from {{ref('src_immunization_bp')}}\r\nunion all \r\nselect * from {{ref('src_immunization_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_immunization_md')}}\r\nunion all\r\nselect * from {{ref('src_immunization_phc_md')}}\r\n)\r\nselect * from source_immunization", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_immunization_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "immunization", "IMMUNISATION"], "unique_id": "model.nps_mi_2021.IMMUNISATION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\immunization\\IMMUNISATION.sql", "original_file_path": "models\\staging\\immunization\\IMMUNISATION.sql", "name": "IMMUNISATION", "alias": "IMMUNISATION", "checksum": {"name": "sha256", "checksum": "deec035bc4ee1fda331a70a4dce15b0c0fca4d7dad97c3ee6baf61c1f06846ef"}, "tags": [], "refs": [["src_immunization_bp"], ["src_immunization_phc_bp"], ["src_immunization_md"], ["src_immunization_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\immunization\\IMMUNISATION.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.372458, "compiled_sql": "\n\nwith source_immunization as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_phc_md`\n)\nselect * from source_immunization", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`"}, "model.nps_mi_2021.src_immunization_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith immunization_bp as (\r\n\r\nselect \r\nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\r\nSAFE_CAST(case \r\n\t\t\tWHEN sib.NOT_GIVEN_HERE = 1 \r\n\t\t\tTHEN 1\r\n\t\t\tWHEN sib.NOT_GIVEN_HERE = 0\r\n\t\t\tTHEN 0 \r\n\t\t\tELSE \r\n\t\t\tNULL\r\n\t\t\tEND\tas int) as GIVEN_HERE,\r\nSAFE_CAST(NULL as string) as PROVIDER_ID,\r\nSAFE_CAST(sib.ADMINISTERED_BY as int) as ADMINISTERED_BY,\r\nSAFE_CAST(sib.GIVEN_DATE as timestamp) as GIVEN_DATE,\r\nSAFE_CAST(sib.VACCINE_NAME as string) as VACCINE_NAME,\r\nSAFE_CAST(sib.VACCINE_ID as string) as VACCINE_ID,\r\nSAFE_CAST(sib.BATCH_NUMBER as string) as BATCH_NUMBER,\r\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \r\nSAFE_CAST(sib.CONSENT_CODE as int) as CONSENT_CODE,\r\nSAFE_CAST(NULL as string) as CONSENT_PROVIDER,\r\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\r\nSAFE_CAST(sib.ROUTE as string) AS ADMINISTERED_ROUTE,\r\nSAFE_CAST(sib.VIVAS as string) AS VIVAS_STATUS, \r\nSAFE_CAST(sib.VIVAS_PRINTED as timestamp) AS VIVAS_PRINTED_DATE, \r\nSAFE_CAST(sib.ACIR as string) AS ACIR_STATUS, \r\nSAFE_CAST(sib.AGE as int) as AGE,\r\nSAFE_CAST(sib.ACIR_TRANSMITTED as timestamp) AS ACIR_TRANSMITTED_DATE,\r\nSAFE_CAST(NULL as string) as INTERNAL_AGE,\r\nSAFE_CAST(NULL as string) as INTERNAL_IMM,\r\nSAFE_CAST(sib.CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \r\nSAFE_CAST(sib.CREATED_BY as int) as CREATED_BY, \r\nSAFE_CAST(sib.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \r\nSAFE_CAST(sib.UPDATED_BY as int) as UPDATED_BY, \r\nSAFE_CAST(sib.RECORD_STATUS as string) as RECORD_STATUS,\r\nSAFE_CAST(null as timestamp) as PRINTED_DATETIME,\r\nSAFE_CAST(NULL as string) as DRUG_NO,\r\nSAFE_CAST(sib.INFLUENZA as string) as INFLUENZA, \r\nSAFE_CAST(sib.INFLUENZASENT as string) AS INFLUENZA_SENT,\r\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\n\r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_IMMUNISATION_OMOP')}} hio \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_IMMUNISATION_BP_OMOP')}} sib \r\non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_IMMUNISATION_SITE_PATIENT_OMOP')}} lisp \r\non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_IMMUNISATION_SITE_PATIENT_OMOP')}} lsisp\r\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from immunization_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "immunization", "src_immunization_bp"], "unique_id": "model.nps_mi_2021.src_immunization_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\immunization\\src_immunization_bp.sql", "original_file_path": "models\\source\\immunization\\src_immunization_bp.sql", "name": "src_immunization_bp", "alias": "src_immunization_bp", "checksum": {"name": "sha256", "checksum": "ed6c6ca44a7f0fac5448a83db0f4a14956ff9daf071c19c0c23172ac4ce9a57f"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_IMMUNISATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\immunization\\src_immunization_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3745003, "compiled_sql": "\n\nwith immunization_bp as (\n\nselect \nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\nSAFE_CAST(case \n\t\t\tWHEN sib.NOT_GIVEN_HERE = 1 \n\t\t\tTHEN 1\n\t\t\tWHEN sib.NOT_GIVEN_HERE = 0\n\t\t\tTHEN 0 \n\t\t\tELSE \n\t\t\tNULL\n\t\t\tEND\tas int) as GIVEN_HERE,\nSAFE_CAST(NULL as string) as PROVIDER_ID,\nSAFE_CAST(sib.ADMINISTERED_BY as int) as ADMINISTERED_BY,\nSAFE_CAST(sib.GIVEN_DATE as timestamp) as GIVEN_DATE,\nSAFE_CAST(sib.VACCINE_NAME as string) as VACCINE_NAME,\nSAFE_CAST(sib.VACCINE_ID as string) as VACCINE_ID,\nSAFE_CAST(sib.BATCH_NUMBER as string) as BATCH_NUMBER,\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \nSAFE_CAST(sib.CONSENT_CODE as int) as CONSENT_CODE,\nSAFE_CAST(NULL as string) as CONSENT_PROVIDER,\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\nSAFE_CAST(sib.ROUTE as string) AS ADMINISTERED_ROUTE,\nSAFE_CAST(sib.VIVAS as string) AS VIVAS_STATUS, \nSAFE_CAST(sib.VIVAS_PRINTED as timestamp) AS VIVAS_PRINTED_DATE, \nSAFE_CAST(sib.ACIR as string) AS ACIR_STATUS, \nSAFE_CAST(sib.AGE as int) as AGE,\nSAFE_CAST(sib.ACIR_TRANSMITTED as timestamp) AS ACIR_TRANSMITTED_DATE,\nSAFE_CAST(NULL as string) as INTERNAL_AGE,\nSAFE_CAST(NULL as string) as INTERNAL_IMM,\nSAFE_CAST(sib.CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \nSAFE_CAST(sib.CREATED_BY as int) as CREATED_BY, \nSAFE_CAST(sib.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \nSAFE_CAST(sib.UPDATED_BY as int) as UPDATED_BY, \nSAFE_CAST(sib.RECORD_STATUS as string) as RECORD_STATUS,\nSAFE_CAST(null as timestamp) as PRINTED_DATETIME,\nSAFE_CAST(NULL as string) as DRUG_NO,\nSAFE_CAST(sib.INFLUENZA as string) as INFLUENZA, \nSAFE_CAST(sib.INFLUENZASENT as string) AS INFLUENZA_SENT,\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\n\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_IMMUNISATION_OMOP` hio \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_BP_OMOP` sib \non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_SITE_PATIENT_OMOP` lisp \non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_SITE_PATIENT_OMOP` lsisp\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from immunization_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_bp`"}, "model.nps_mi_2021.src_immunization_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nwith immunization_md as (\r\n\r\nselect \r\nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\r\nSAFE_CAST(sib.GIVEN_HERE as int) as GIVEN_HERE,\r\nSAFE_CAST(NULL as string) as PROVIDER_ID,\r\nSAFE_CAST(null as int) as ADMINISTERED_BY,\r\nSAFE_CAST(sib.GIVEN_DATETIME as timestamp) as GIVEN_DATE,\r\nSAFE_CAST(sib.TYPE as string) as VACCINE_NAME,\r\nSAFE_CAST(NULL as string) as VACCINE_ID,\r\nSAFE_CAST(sib.BATCH as string) as BATCH_NUMBER,\r\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \r\nSAFE_CAST(sib.CONSENT as int) as CONSENT_CODE,\r\nSAFE_CAST(sib.CONSENT_PROVIDER as string) as CONSENT_PROVIDER,\r\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\r\nSAFE_CAST(NULL as string) AS ADMINISTERED_ROUTE,\r\nSAFE_CAST(NULL as string) AS VIVAS_STATUS, \r\nSAFE_CAST(null as timestamp) AS VIVAS_PRINTED_DATE, \r\nSAFE_CAST(NULL as string) AS ACIR_STATUS, \r\nSAFE_CAST(sib.IMMUNISATION_AGE as int) as AGE,\r\nSAFE_CAST(null as timestamp) AS ACIR_TRANSMITTED_DATE,\r\nSAFE_CAST(sib.INTERNAL_AGE as string) as INTERNAL_AGE,\r\nSAFE_CAST(sib.INTERNAL_IMM as string) as INTERNAL_IMM,\r\nSAFE_CAST(sib.STAMP_CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \r\nSAFE_CAST(null as int) as CREATED_BY, \r\nSAFE_CAST(sib.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \r\nSAFE_CAST(null as int) as UPDATED_BY, \r\nSAFE_CAST(NULL as string) as RECORD_STATUS,\r\nSAFE_CAST(sib.PRINTED_DATETIME as timestamp) as PRINTED_DATETIME,\r\nSAFE_CAST(sib.DRUG_NO as string) as DRUG_NO,\r\nSAFE_CAST(NULL as string) as INFLUENZA, \r\nSAFE_CAST(NULL as string) AS INFLUENZA_SENT,\r\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\n\r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_IMMUNISATION_OMOP')}} hio \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_IMMUNISATION_MD_OMOP')}} sib \r\non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_IMMUNISATION_SITE_PATIENT_OMOP')}} lisp \r\non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_IMMUNISATION_SITE_PATIENT_OMOP')}} lsisp\r\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from immunization_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "immunization", "src_immunization_md"], "unique_id": "model.nps_mi_2021.src_immunization_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\immunization\\src_immunization_md.sql", "original_file_path": "models\\source\\immunization\\src_immunization_md.sql", "name": "src_immunization_md", "alias": "src_immunization_md", "checksum": {"name": "sha256", "checksum": "20aeebb3b412539efad80ab9e2a92535a95b1d476897e9c8a3d569f33ce97f64"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_IMMUNISATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\immunization\\src_immunization_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3765056, "compiled_sql": "\n\n\nwith immunization_md as (\n\nselect \nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\nSAFE_CAST(sib.GIVEN_HERE as int) as GIVEN_HERE,\nSAFE_CAST(NULL as string) as PROVIDER_ID,\nSAFE_CAST(null as int) as ADMINISTERED_BY,\nSAFE_CAST(sib.GIVEN_DATETIME as timestamp) as GIVEN_DATE,\nSAFE_CAST(sib.TYPE as string) as VACCINE_NAME,\nSAFE_CAST(NULL as string) as VACCINE_ID,\nSAFE_CAST(sib.BATCH as string) as BATCH_NUMBER,\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \nSAFE_CAST(sib.CONSENT as int) as CONSENT_CODE,\nSAFE_CAST(sib.CONSENT_PROVIDER as string) as CONSENT_PROVIDER,\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\nSAFE_CAST(NULL as string) AS ADMINISTERED_ROUTE,\nSAFE_CAST(NULL as string) AS VIVAS_STATUS, \nSAFE_CAST(null as timestamp) AS VIVAS_PRINTED_DATE, \nSAFE_CAST(NULL as string) AS ACIR_STATUS, \nSAFE_CAST(sib.IMMUNISATION_AGE as int) as AGE,\nSAFE_CAST(null as timestamp) AS ACIR_TRANSMITTED_DATE,\nSAFE_CAST(sib.INTERNAL_AGE as string) as INTERNAL_AGE,\nSAFE_CAST(sib.INTERNAL_IMM as string) as INTERNAL_IMM,\nSAFE_CAST(sib.STAMP_CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \nSAFE_CAST(null as int) as CREATED_BY, \nSAFE_CAST(sib.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \nSAFE_CAST(null as int) as UPDATED_BY, \nSAFE_CAST(NULL as string) as RECORD_STATUS,\nSAFE_CAST(sib.PRINTED_DATETIME as timestamp) as PRINTED_DATETIME,\nSAFE_CAST(sib.DRUG_NO as string) as DRUG_NO,\nSAFE_CAST(NULL as string) as INFLUENZA, \nSAFE_CAST(NULL as string) AS INFLUENZA_SENT,\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\n\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_IMMUNISATION_OMOP` hio \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_MD_OMOP` sib \non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_SITE_PATIENT_OMOP` lisp \non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_SITE_PATIENT_OMOP` lsisp\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from immunization_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_md`"}, "model.nps_mi_2021.src_immunization_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith immunization_phc_bp as (\r\n\r\nselect \r\nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\r\nSAFE_CAST(case \r\n\t\t\tWHEN sib.NOT_GIVEN_HERE = 1 \r\n\t\t\tTHEN 1\r\n\t\t\tWHEN sib.NOT_GIVEN_HERE = 0\r\n\t\t\tTHEN 0\r\n\t\t\tEND\tas int) as GIVEN_HERE,\r\nSAFE_CAST(NULL as string) as PROVIDER_ID,\r\nSAFE_CAST(sib.ADMINISTERED_BY as int) as ADMINISTERED_BY,\r\nSAFE_CAST(sib.GIVEN_DATE as timestamp) as GIVEN_DATE,\r\nSAFE_CAST(sib.VACCINE_NAME as string) as VACCINE_NAME,\r\nSAFE_CAST(sib.VACCINE_ID as string) as VACCINE_ID,\r\nSAFE_CAST(sib.BATCH_NUMBER as string) as BATCH_NUMBER,\r\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \r\nSAFE_CAST(sib.CONSENT_CODE as int) as CONSENT_CODE,\r\nSAFE_CAST(NULL as string) as CONSENT_PROVIDER,\r\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\r\nSAFE_CAST(sib.ROUTE as string) AS ADMINISTERED_ROUTE,\r\nSAFE_CAST(sib.VIVAS as string) AS VIVAS_STATUS, \r\nSAFE_CAST(sib.VIVAS_PRINTED as timestamp) AS VIVAS_PRINTED_DATE, \r\nSAFE_CAST(sib.ACIR as string) AS ACIR_STATUS, \r\nSAFE_CAST(null as int) as AGE,\r\nSAFE_CAST(sib.ACIR_TRANSMITTED as timestamp) AS ACIR_TRANSMITTED_DATE,\r\nSAFE_CAST(NULL as string) as INTERNAL_AGE,\r\nSAFE_CAST(NULL as string) as INTERNAL_IMM,\r\nSAFE_CAST(sib.CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \r\nSAFE_CAST(sib.CREATED_BY as int) as CREATED_BY, \r\nSAFE_CAST(sib.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \r\nSAFE_CAST(sib.UPDATED_BY as int) as UPDATED_BY, \r\nSAFE_CAST(sib.RECORD_STATUS as string) as RECORD_STATUS,\r\nSAFE_CAST(null as timestamp) as PRINTED_DATETIME,\r\nSAFE_CAST(NULL as string) as DRUG_NO,\r\nSAFE_CAST(sib.INFLUENZA as string) as INFLUENZA, \r\nSAFE_CAST(sib.INFLUENZA_SENT as string) AS INFLUENZA_SENT,\r\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\n\r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_IMMUNISATION_OMOP')}} hio \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_IMMUNISATION_PHC_BP_OMOP')}} sib \r\non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_IMMUNISATION_SITE_PATIENT_OMOP')}} lisp \r\non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_IMMUNISATION_SITE_PATIENT_OMOP')}} lsisp\r\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from immunization_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "immunization", "src_immunization_phc_bp"], "unique_id": "model.nps_mi_2021.src_immunization_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\immunization\\src_immunization_phc_bp.sql", "original_file_path": "models\\source\\immunization\\src_immunization_phc_bp.sql", "name": "src_immunization_phc_bp", "alias": "src_immunization_phc_bp", "checksum": {"name": "sha256", "checksum": "8390977704f5c77e975bc5bd9439b444834fc2edb0babe0e9b05d47670865f3b"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_IMMUNISATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\immunization\\src_immunization_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3785007, "compiled_sql": "\n\nwith immunization_phc_bp as (\n\nselect \nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\nSAFE_CAST(case \n\t\t\tWHEN sib.NOT_GIVEN_HERE = 1 \n\t\t\tTHEN 1\n\t\t\tWHEN sib.NOT_GIVEN_HERE = 0\n\t\t\tTHEN 0\n\t\t\tEND\tas int) as GIVEN_HERE,\nSAFE_CAST(NULL as string) as PROVIDER_ID,\nSAFE_CAST(sib.ADMINISTERED_BY as int) as ADMINISTERED_BY,\nSAFE_CAST(sib.GIVEN_DATE as timestamp) as GIVEN_DATE,\nSAFE_CAST(sib.VACCINE_NAME as string) as VACCINE_NAME,\nSAFE_CAST(sib.VACCINE_ID as string) as VACCINE_ID,\nSAFE_CAST(sib.BATCH_NUMBER as string) as BATCH_NUMBER,\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \nSAFE_CAST(sib.CONSENT_CODE as int) as CONSENT_CODE,\nSAFE_CAST(NULL as string) as CONSENT_PROVIDER,\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\nSAFE_CAST(sib.ROUTE as string) AS ADMINISTERED_ROUTE,\nSAFE_CAST(sib.VIVAS as string) AS VIVAS_STATUS, \nSAFE_CAST(sib.VIVAS_PRINTED as timestamp) AS VIVAS_PRINTED_DATE, \nSAFE_CAST(sib.ACIR as string) AS ACIR_STATUS, \nSAFE_CAST(null as int) as AGE,\nSAFE_CAST(sib.ACIR_TRANSMITTED as timestamp) AS ACIR_TRANSMITTED_DATE,\nSAFE_CAST(NULL as string) as INTERNAL_AGE,\nSAFE_CAST(NULL as string) as INTERNAL_IMM,\nSAFE_CAST(sib.CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \nSAFE_CAST(sib.CREATED_BY as int) as CREATED_BY, \nSAFE_CAST(sib.UPDATED_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \nSAFE_CAST(sib.UPDATED_BY as int) as UPDATED_BY, \nSAFE_CAST(sib.RECORD_STATUS as string) as RECORD_STATUS,\nSAFE_CAST(null as timestamp) as PRINTED_DATETIME,\nSAFE_CAST(NULL as string) as DRUG_NO,\nSAFE_CAST(sib.INFLUENZA as string) as INFLUENZA, \nSAFE_CAST(sib.INFLUENZA_SENT as string) AS INFLUENZA_SENT,\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\n\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_IMMUNISATION_OMOP` hio \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_PHC_BP_OMOP` sib \non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_SITE_PATIENT_OMOP` lisp \non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_SITE_PATIENT_OMOP` lsisp\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from immunization_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_phc_bp`"}, "model.nps_mi_2021.src_immunization_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nwith immunization_phc_md as (\r\n\r\nselect \r\nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\r\nSAFE_CAST(sib.GIVEN_HERE as int) as GIVEN_HERE,\r\nSAFE_CAST(NULL as string) as PROVIDER_ID,\r\nSAFE_CAST(null as int) as ADMINISTERED_BY,\r\nSAFE_CAST(sib.GIVEN_DATETIME as timestamp) as GIVEN_DATE,\r\nSAFE_CAST(sib.TYPE as string) as VACCINE_NAME,\r\nSAFE_CAST(NULL as string) as VACCINE_ID,\r\nSAFE_CAST(sib.BATCH as string) as BATCH_NUMBER,\r\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \r\nSAFE_CAST(sib.CONSENT as int) as CONSENT_CODE,\r\nSAFE_CAST(sib.CONSENT_PROVIDER as string) as CONSENT_PROVIDER,\r\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\r\nSAFE_CAST(NULL as string) AS ADMINISTERED_ROUTE,\r\nSAFE_CAST(NULL as string) AS VIVAS_STATUS, \r\nSAFE_CAST(null as timestamp) AS VIVAS_PRINTED_DATE, \r\nSAFE_CAST(NULL as string) AS ACIR_STATUS, \r\nSAFE_CAST(null as int) as AGE,\r\nSAFE_CAST(null as timestamp) AS ACIR_TRANSMITTED_DATE,\r\nSAFE_CAST(sib.INTERNAL_AGE as string) as INTERNAL_AGE,\r\nSAFE_CAST(sib.INTERNAL_IMM as string) as INTERNAL_IMM,\r\nSAFE_CAST(sib.STAMP_CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \r\nSAFE_CAST(null as int) as CREATED_BY, \r\nSAFE_CAST(sib.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \r\nSAFE_CAST(null as int) as UPDATED_BY, \r\nSAFE_CAST(NULL as string) as RECORD_STATUS,\r\nSAFE_CAST(sib.PRINTED_DATETIME as timestamp) as PRINTED_DATETIME,\r\nSAFE_CAST(sib.DRUG_NO as string) as DRUG_NO,\r\nSAFE_CAST(NULL as string) as INFLUENZA, \r\nSAFE_CAST(NULL as string) AS INFLUENZA_SENT,\r\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\n\r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_IMMUNISATION_OMOP')}} hio \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_IMMUNISATION_PHC_MD_OMOP')}} sib \r\non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_IMMUNISATION_SITE_PATIENT_OMOP')}} lisp \r\non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_IMMUNISATION_SITE_PATIENT_OMOP')}} lsisp\r\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from immunization_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "immunization", "src_immunization_phc_md"], "unique_id": "model.nps_mi_2021.src_immunization_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\immunization\\src_immunization_phc_md.sql", "original_file_path": "models\\source\\immunization\\src_immunization_phc_md.sql", "name": "src_immunization_phc_md", "alias": "src_immunization_phc_md", "checksum": {"name": "sha256", "checksum": "84b7e0fff78a49fa7a6e526c8353b5ad3fea9395f063c19a7ee9f96a1387fb97"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_IMMUNISATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_SITE_PATIENT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\immunization\\src_immunization_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3805015, "compiled_sql": "\n\n\nwith immunization_phc_md as (\n\nselect \nSAFE_CAST(lisp.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hio.IMMUNISATION_ID as string) as IMMUNISATION_ID,\nSAFE_CAST(sib.GIVEN_HERE as int) as GIVEN_HERE,\nSAFE_CAST(NULL as string) as PROVIDER_ID,\nSAFE_CAST(null as int) as ADMINISTERED_BY,\nSAFE_CAST(sib.GIVEN_DATETIME as timestamp) as GIVEN_DATE,\nSAFE_CAST(sib.TYPE as string) as VACCINE_NAME,\nSAFE_CAST(NULL as string) as VACCINE_ID,\nSAFE_CAST(sib.BATCH as string) as BATCH_NUMBER,\nSAFE_CAST(sib.SEQUENCE AS int) AS SEQUENCE_NUMBER, \nSAFE_CAST(sib.CONSENT as int) as CONSENT_CODE,\nSAFE_CAST(sib.CONSENT_PROVIDER as string) as CONSENT_PROVIDER,\nSAFE_CAST(sib.SITE_CODE as string) as SITE_CODE,\nSAFE_CAST(NULL as string) AS ADMINISTERED_ROUTE,\nSAFE_CAST(NULL as string) AS VIVAS_STATUS, \nSAFE_CAST(null as timestamp) AS VIVAS_PRINTED_DATE, \nSAFE_CAST(NULL as string) AS ACIR_STATUS, \nSAFE_CAST(null as int) as AGE,\nSAFE_CAST(null as timestamp) AS ACIR_TRANSMITTED_DATE,\nSAFE_CAST(sib.INTERNAL_AGE as string) as INTERNAL_AGE,\nSAFE_CAST(sib.INTERNAL_IMM as string) as INTERNAL_IMM,\nSAFE_CAST(sib.STAMP_CREATED_DATETIME AS TIMESTAMP) as CREATED_DATETIME, \nSAFE_CAST(null as int) as CREATED_BY, \nSAFE_CAST(sib.STAMP_DATETIME AS TIMESTAMP) AS UPDATED_DATETIME, \nSAFE_CAST(null as int) as UPDATED_BY, \nSAFE_CAST(NULL as string) as RECORD_STATUS,\nSAFE_CAST(sib.PRINTED_DATETIME as timestamp) as PRINTED_DATETIME,\nSAFE_CAST(sib.DRUG_NO as string) as DRUG_NO,\nSAFE_CAST(NULL as string) as INFLUENZA, \nSAFE_CAST(NULL as string) AS INFLUENZA_SENT,\nSAFE_CAST(hio.SITE_ID as string) as SITE_ID,\nSAFE_CAST(hio.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST(sib.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(sib.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(sib.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(sib.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(sib.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(sib.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(sib.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\n\nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_IMMUNISATION_OMOP` hio \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_PHC_MD_OMOP` sib \non hio.HUB_IMMUNISATION_SK = sib.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_SITE_PATIENT_OMOP` lisp \non hio.HUB_IMMUNISATION_SK = lisp.HUB_IMMUNISATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_SITE_PATIENT_OMOP` lsisp\non lisp.LNK_IMMUNISATION_SITE_PATIENT_SK = lsisp.LNK_IMMUNISATION_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lisp.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsib.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sib.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsisp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsisp.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from immunization_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_immunization_phc_md`"}, "model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_long as\r\n(\r\nselect * from {{ref('src_long_bp')}}\r\nUNION all\r\nselect * from {{ref('src_long_md')}}\r\nUNION all\r\nselect * from {{ref('src_long_phc_bp')}}\r\nUNION all\r\nselect * from {{ref('src_long_phc_md')}}\r\n)\r\nselect * from source_long", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_long_bp", "model.nps_mi_2021.src_long_md", "model.nps_mi_2021.src_long_phc_bp", "model.nps_mi_2021.src_long_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "longitudinal_cis", "LONGITUDINAL_CIS_PATIENT_STATUS"], "unique_id": "model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\longitudinal_cis\\LONGITUDINAL_CIS_PATIENT_STATUS.sql", "original_file_path": "models\\staging\\longitudinal_cis\\LONGITUDINAL_CIS_PATIENT_STATUS.sql", "name": "LONGITUDINAL_CIS_PATIENT_STATUS", "alias": "LONGITUDINAL_CIS_PATIENT_STATUS", "checksum": {"name": "sha256", "checksum": "cec66c89ea50e9640093cbcd379108010f8738c90f47c3e7e2c79893a9375532"}, "tags": [], "refs": [["src_long_bp"], ["src_long_md"], ["src_long_phc_bp"], ["src_long_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\longitudinal_cis\\LONGITUDINAL_CIS_PATIENT_STATUS.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3836439, "compiled_sql": "\n\nwith source_long as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_md`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_phc_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_phc_md`\n)\nselect * from source_long", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`LONGITUDINAL_CIS_PATIENT_STATUS`"}, "model.nps_mi_2021.src_long_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nselect \r\ncast(hubb.SITE_ID as string) as SITE_ID,\r\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(case\r\n        when satt.PATIENT_STATUS_CODE = 1\r\n        then '1'\r\n        when satt.PATIENT_STATUS_CODE = 2\r\n        then '2'\r\n        when satt.PATIENT_STATUS_CODE = 3\r\n        then '3'\r\n        end as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case\r\n        when satt.PATIENT_STATUS_CODE = 1\r\n        then 'Active'\r\n        when satt.PATIENT_STATUS_CODE = 2\r\n        then 'Inactive'\r\n        when satt.PATIENT_STATUS_CODE = 3\r\n        then 'Deceased' end as string) as CIS_PATIENT_STATUS_NAME,\r\ncast(satt.PATIENT_CREATED_DATETIME as timestamp) as RECORD_START_DATE,\r\ncast(NULL as timestamp) as RECORD_END_DATE,\r\ncast(\"GRH\" as string) as DATA_PROVIDER,\r\ncast(\"BP\" as string) as SOURCE_SYSTEM,\r\ncast(null as string) as IS_DELETED\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hubb \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} satt\r\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_SITE_OMOP')}} lsps\r\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_SITE_OMOP')}} lssps\r\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "longitudinal_cis", "src_long_bp"], "unique_id": "model.nps_mi_2021.src_long_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\longitudinal_cis\\src_long_bp.sql", "original_file_path": "models\\source\\longitudinal_cis\\src_long_bp.sql", "name": "src_long_bp", "alias": "src_long_bp", "checksum": {"name": "sha256", "checksum": "5061463cdec8302ad37c2b8969d6e25990e60a47a9d86933936415e210f364af"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\longitudinal_cis\\src_long_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3856587, "compiled_sql": "\n\n\nselect \ncast(hubb.SITE_ID as string) as SITE_ID,\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(case\n        when satt.PATIENT_STATUS_CODE = 1\n        then '1'\n        when satt.PATIENT_STATUS_CODE = 2\n        then '2'\n        when satt.PATIENT_STATUS_CODE = 3\n        then '3'\n        end as string) as CIS_PATIENT_STATUS_CODE,\ncast(case\n        when satt.PATIENT_STATUS_CODE = 1\n        then 'Active'\n        when satt.PATIENT_STATUS_CODE = 2\n        then 'Inactive'\n        when satt.PATIENT_STATUS_CODE = 3\n        then 'Deceased' end as string) as CIS_PATIENT_STATUS_NAME,\ncast(satt.PATIENT_CREATED_DATETIME as timestamp) as RECORD_START_DATE,\ncast(NULL as timestamp) as RECORD_END_DATE,\ncast(\"GRH\" as string) as DATA_PROVIDER,\ncast(\"BP\" as string) as SOURCE_SYSTEM,\ncast(null as string) as IS_DELETED\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hubb \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` satt\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SITE_OMOP` lsps\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SITE_OMOP` lssps\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_bp`"}, "model.nps_mi_2021.src_long_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nselect \r\ncast(hubb.SITE_ID as string) as SITE_ID,\r\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(case\r\n        when satt.STATUS_CODE = '1'\r\n        then '1'\r\n        when satt.STATUS_CODE = '2'\r\n        then '2'\r\n        when satt.STATUS_CODE = '3'\r\n        then '3'\r\n        end as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case\r\n        when satt.STATUS_CODE = '1'\r\n        then 'Active'\r\n        when satt.STATUS_CODE = '2'\r\n        then 'Inactive'\r\n        when satt.STATUS_CODE = '3'\r\n        then 'Deceased'\r\n        end as string) as CIS_PATIENT_STATUS_NAME,\r\ncast(satt.PATIENT_CREATED_DATETIME as timestamp) as RECORD_START_DATE,\r\ncast(NULL as timestamp) as RECORD_END_DATE,\r\ncast(\"GRH\" as string) as DATA_PROVIDER,\r\ncast(\"MD\" as string) as SOURCE_SYSTEM,\r\ncast(null as string) as IS_DELETED\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hubb \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} satt\r\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_SITE_OMOP')}} lsps\r\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_SITE_OMOP')}} lssps\r\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "longitudinal_cis", "src_long_md"], "unique_id": "model.nps_mi_2021.src_long_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\longitudinal_cis\\src_long_md.sql", "original_file_path": "models\\source\\longitudinal_cis\\src_long_md.sql", "name": "src_long_md", "alias": "src_long_md", "checksum": {"name": "sha256", "checksum": "08bc64314b5856512f8b2989a8ab05a4717fce6cebdd1cc8b47ae1a83004c3f8"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SITE_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\longitudinal_cis\\src_long_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3876595, "compiled_sql": "\n\n\nselect \ncast(hubb.SITE_ID as string) as SITE_ID,\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(case\n        when satt.STATUS_CODE = '1'\n        then '1'\n        when satt.STATUS_CODE = '2'\n        then '2'\n        when satt.STATUS_CODE = '3'\n        then '3'\n        end as string) as CIS_PATIENT_STATUS_CODE,\ncast(case\n        when satt.STATUS_CODE = '1'\n        then 'Active'\n        when satt.STATUS_CODE = '2'\n        then 'Inactive'\n        when satt.STATUS_CODE = '3'\n        then 'Deceased'\n        end as string) as CIS_PATIENT_STATUS_NAME,\ncast(satt.PATIENT_CREATED_DATETIME as timestamp) as RECORD_START_DATE,\ncast(NULL as timestamp) as RECORD_END_DATE,\ncast(\"GRH\" as string) as DATA_PROVIDER,\ncast(\"MD\" as string) as SOURCE_SYSTEM,\ncast(null as string) as IS_DELETED\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hubb \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` satt\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SITE_OMOP` lsps\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SITE_OMOP` lssps\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_md`"}, "model.nps_mi_2021.src_long_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nselect \r\ncast(hubb.SITE_ID as string) as SITE_ID,\r\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(case\r\n        when satt.PATIENT_STATUS = 1\r\n        then '1'\r\n        when satt.PATIENT_STATUS = 2\r\n        then '2'\r\n        when satt.PATIENT_STATUS = 3\r\n        then '3'\r\n        end as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case\r\n        when satt.PATIENT_STATUS = 1\r\n        then 'Active'\r\n        when satt.PATIENT_STATUS = 2\r\n        then 'Inactive'\r\n        when satt.PATIENT_STATUS = 3\r\n        then 'Deceased' end as string) as CIS_PATIENT_STATUS_NAME,\r\ncast(satt.CREATED as timestamp) as RECORD_START_DATE,\r\ncast(NULL as timestamp) as RECORD_END_DATE,\r\ncast(\"PHC\" as string) as DATA_PROVIDER,\r\ncast(\"PHC_BP\" as string) as SOURCE_SYSTEM,\r\ncast(null as string) as IS_DELETED\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hubb \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} satt\r\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_SITE_OMOP')}} lsps\r\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_SITE_OMOP')}} lssps\r\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "longitudinal_cis", "src_long_phc_bp"], "unique_id": "model.nps_mi_2021.src_long_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\longitudinal_cis\\src_long_phc_bp.sql", "original_file_path": "models\\source\\longitudinal_cis\\src_long_phc_bp.sql", "name": "src_long_phc_bp", "alias": "src_long_phc_bp", "checksum": {"name": "sha256", "checksum": "f2a89b5d3fb412d2f4c95a38f9e9cd3d9b4716df9f8fb91488acca950938e07b"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\longitudinal_cis\\src_long_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3896606, "compiled_sql": "\n\n\nselect \ncast(hubb.SITE_ID as string) as SITE_ID,\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(case\n        when satt.PATIENT_STATUS = 1\n        then '1'\n        when satt.PATIENT_STATUS = 2\n        then '2'\n        when satt.PATIENT_STATUS = 3\n        then '3'\n        end as string) as CIS_PATIENT_STATUS_CODE,\ncast(case\n        when satt.PATIENT_STATUS = 1\n        then 'Active'\n        when satt.PATIENT_STATUS = 2\n        then 'Inactive'\n        when satt.PATIENT_STATUS = 3\n        then 'Deceased' end as string) as CIS_PATIENT_STATUS_NAME,\ncast(satt.CREATED as timestamp) as RECORD_START_DATE,\ncast(NULL as timestamp) as RECORD_END_DATE,\ncast(\"PHC\" as string) as DATA_PROVIDER,\ncast(\"PHC_BP\" as string) as SOURCE_SYSTEM,\ncast(null as string) as IS_DELETED\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hubb \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` satt\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SITE_OMOP` lsps\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SITE_OMOP` lssps\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_phc_bp`"}, "model.nps_mi_2021.src_long_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\nselect \r\ncast(hubb.SITE_ID as string) as SITE_ID,\r\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(case\r\n        when satt.STATUS_CODE = '1'\r\n        then '1'\r\n        when satt.STATUS_CODE = '2'\r\n        then '2'\r\n        when satt.STATUS_CODE = '3'\r\n        then '3'\r\n        end as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case\r\n        when satt.STATUS_CODE = '1'\r\n        then 'Active'\r\n        when satt.STATUS_CODE = '2'\r\n        then 'Inactive'\r\n        when satt.STATUS_CODE = '3'\r\n        then 'Deceased' end as string) as CIS_PATIENT_STATUS_NAME,\r\ncast(satt.STAMP_CREATED_DATETIME as timestamp) as RECORD_START_DATE,\r\ncast(NULL as timestamp) as RECORD_END_DATE,\r\ncast(\"PHC\" as string) as DATA_PROVIDER,\r\ncast(\"PHC_MD\" as string) as SOURCE_SYSTEM,\r\ncast(null as string) as IS_DELETED\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hubb \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} satt\r\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_SITE_OMOP')}} lsps\r\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_SITE_OMOP')}} lssps\r\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "longitudinal_cis", "src_long_phc_md"], "unique_id": "model.nps_mi_2021.src_long_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\longitudinal_cis\\src_long_phc_md.sql", "original_file_path": "models\\source\\longitudinal_cis\\src_long_phc_md.sql", "name": "src_long_phc_md", "alias": "src_long_phc_md", "checksum": {"name": "sha256", "checksum": "da21ce50008cc0764c9345d1d1286305e6b1e43fcb0c48032c3d586fd3d17a07"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SITE_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\longitudinal_cis\\src_long_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.391659, "compiled_sql": "\n\n\nselect \ncast(hubb.SITE_ID as string) as SITE_ID,\ncast(lsps.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(case\n        when satt.STATUS_CODE = '1'\n        then '1'\n        when satt.STATUS_CODE = '2'\n        then '2'\n        when satt.STATUS_CODE = '3'\n        then '3'\n        end as string) as CIS_PATIENT_STATUS_CODE,\ncast(case\n        when satt.STATUS_CODE = '1'\n        then 'Active'\n        when satt.STATUS_CODE = '2'\n        then 'Inactive'\n        when satt.STATUS_CODE = '3'\n        then 'Deceased' end as string) as CIS_PATIENT_STATUS_NAME,\ncast(satt.STAMP_CREATED_DATETIME as timestamp) as RECORD_START_DATE,\ncast(NULL as timestamp) as RECORD_END_DATE,\ncast(\"PHC\" as string) as DATA_PROVIDER,\ncast(\"PHC_MD\" as string) as SOURCE_SYSTEM,\ncast(null as string) as IS_DELETED\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hubb \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` satt\non hubb.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SITE_OMOP` lsps\non hubb.HUB_SITE_PATIENT_SK = lsps.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SITE_OMOP` lssps\non lsps.LNK_SITE_PATIENT_SITE_SK = lssps.LNK_SITE_PATIENT_SITE_SK\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lssps.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND lssps.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_long_phc_md`"}, "model.nps_mi_2021.OBSERVATION": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith observation_status as\r\n(\r\nselect * from {{ref('src_observation_bp')}}\r\nUNION all\r\nselect * from {{ref('src_observation_phc_bp')}}\r\nUNION all\r\nselect * from {{ref('src_observation_md')}}\r\nUNION all\r\nselect * from {{ref('src_observation_phc_md')}}\r\n)\r\nselect * from observation_status", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_observation_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "observation", "OBSERVATION"], "unique_id": "model.nps_mi_2021.OBSERVATION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\observation\\OBSERVATION.sql", "original_file_path": "models\\staging\\observation\\OBSERVATION.sql", "name": "OBSERVATION", "alias": "OBSERVATION", "checksum": {"name": "sha256", "checksum": "5ac35e200d85f9b6cd3981aa88e186ec7bee3e064ed86ebccb7a218964bb878d"}, "tags": [], "refs": [["src_observation_bp"], ["src_observation_phc_bp"], ["src_observation_md"], ["src_observation_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\observation\\OBSERVATION.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3938422, "compiled_sql": "\n\nwith observation_status as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_phc_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_md`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_phc_md`\n)\nselect * from observation_status", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`"}, "model.nps_mi_2021.src_observation_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith observation_bp as (\r\nselect\r\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\r\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_OBSERVATION_BP_OMOP' AS STRING) AS SOURCE_TABLE,\r\ncast(sobo.OBSERVATION_TYPE as STRING) as OBSERVATION_TYPE,\r\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\r\nNULL as PROVIDER_ID,\r\ncast(sobo.OBSERVATION_VALUE as STRING) as OBSERVATION_VALUE,\r\ncast(sobo.OBSERVATION_MODIFIER as int) as OBSERVATION_MODIFIER,\r\ncast(sobo.OBSERVATION_CODE as int) as OBSERVATION_CODE,\r\ncast(sobo.RECORD_STATUS as STRING) as RECORD_STATUS,\r\ncast(sobo.OBSERVATION_DATE as TIMESTAMP) AS OBSERVATION_DATETIME,\r\ncast(sobo.CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME,\r\ncast(sobo.UPDATED_DATETIME as TIMESTAMP) as UPDATED_DATETIME,\r\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_OBSERVATION_OMOP')}} hub \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_OBSERVATION_BP_OMOP')}} sobo \r\non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_OBSERVATION_OMOP')}} lo\r\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_OBSERVATION_OMOP')}} ls\r\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from observation_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "observation", "src_observation_bp"], "unique_id": "model.nps_mi_2021.src_observation_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\observation\\src_observation_bp.sql", "original_file_path": "models\\source\\observation\\src_observation_bp.sql", "name": "src_observation_bp", "alias": "src_observation_bp", "checksum": {"name": "sha256", "checksum": "7754a6ef6893e27381c14356106f0b9f6f49e6e87881540e34a3002bf157119c"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\observation\\src_observation_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3958385, "compiled_sql": "\n\nwith observation_bp as (\nselect\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_OBSERVATION_BP_OMOP' AS STRING) AS SOURCE_TABLE,\ncast(sobo.OBSERVATION_TYPE as STRING) as OBSERVATION_TYPE,\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\nNULL as PROVIDER_ID,\ncast(sobo.OBSERVATION_VALUE as STRING) as OBSERVATION_VALUE,\ncast(sobo.OBSERVATION_MODIFIER as int) as OBSERVATION_MODIFIER,\ncast(sobo.OBSERVATION_CODE as int) as OBSERVATION_CODE,\ncast(sobo.RECORD_STATUS as STRING) as RECORD_STATUS,\ncast(sobo.OBSERVATION_DATE as TIMESTAMP) AS OBSERVATION_DATETIME,\ncast(sobo.CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME,\ncast(sobo.UPDATED_DATETIME as TIMESTAMP) as UPDATED_DATETIME,\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_OBSERVATION_OMOP` hub \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_BP_OMOP` sobo \non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_OBSERVATION_OMOP` lo\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_OBSERVATION_OMOP` ls\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from observation_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_bp`"}, "model.nps_mi_2021.src_observation_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith observation_md as (\r\nselect \r\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\r\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_OBSERVATION_MD_OMOP' AS STRING) AS SOURCE_TABLE,\r\ncast(sobo.OBSERVATION_TYPE as STRING) as OBSERVATION_TYPE,\r\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\r\nNULL as PROVIDER_ID,\r\ncast(sobo.OBSERVATION_VALUE as STRING) as OBSERVATION_VALUE,\r\nnull as OBSERVATION_MODIFIER,\r\ncast(sobo.OBSERVATION_CODE as int) as OBSERVATION_CODE,\r\ncast(null as string) as RECORD_STATUS,\r\ncast(sobo.OBSERVATION_DATETIME as TIMESTAMP) AS OBSERVATION_DATETIME,\r\ncast(NULL as TIMESTAMP) as CREATED_DATETIME,\r\ncast(null as timestamp) as UPDATED_DATETIME,\r\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_OBSERVATION_OMOP')}} hub \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_OBSERVATION_MD_OMOP')}} sobo  \r\non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_OBSERVATION_OMOP')}} lo\r\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_OBSERVATION_OMOP')}} ls\r\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from observation_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "observation", "src_observation_md"], "unique_id": "model.nps_mi_2021.src_observation_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\observation\\src_observation_md.sql", "original_file_path": "models\\source\\observation\\src_observation_md.sql", "name": "src_observation_md", "alias": "src_observation_md", "checksum": {"name": "sha256", "checksum": "f96cc59f30458f28e691a6a8a044cabf8d6808ac7f03982b8598e833ebde5877"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\observation\\src_observation_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3977964, "compiled_sql": "\n\nwith observation_md as (\nselect \ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_OBSERVATION_MD_OMOP' AS STRING) AS SOURCE_TABLE,\ncast(sobo.OBSERVATION_TYPE as STRING) as OBSERVATION_TYPE,\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\nNULL as PROVIDER_ID,\ncast(sobo.OBSERVATION_VALUE as STRING) as OBSERVATION_VALUE,\nnull as OBSERVATION_MODIFIER,\ncast(sobo.OBSERVATION_CODE as int) as OBSERVATION_CODE,\ncast(null as string) as RECORD_STATUS,\ncast(sobo.OBSERVATION_DATETIME as TIMESTAMP) AS OBSERVATION_DATETIME,\ncast(NULL as TIMESTAMP) as CREATED_DATETIME,\ncast(null as timestamp) as UPDATED_DATETIME,\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_OBSERVATION_OMOP` hub \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_MD_OMOP` sobo  \non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_OBSERVATION_OMOP` lo\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_OBSERVATION_OMOP` ls\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from observation_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_md`"}, "model.nps_mi_2021.src_observation_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith observation_phc_bp as (\r\nselect\r\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\r\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_OBSERVATION_PHC_BP_OMOP' AS STRING) AS SOURCE_TABLE,\r\ncast(sobo.DATA_NAME as STRING) as OBSERVATION_TYPE,\r\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\r\nNULL as PROVIDER_ID,\r\ncast(sobo.DATA_VALUE as STRING) as OBSERVATION_VALUE,\r\ncast(sobo.MODIFIER as int) as OBSERVATION_MODIFIER,\r\ncast(sobo.DATA_CODE as int) as OBSERVATION_CODE,\r\ncast(sobo.RECORD_STATUS as STRING) as RECORD_STATUS,\r\ncast(sobo.OBS_DATE as TIMESTAMP) AS OBSERVATION_DATETIME,\r\ncast(sobo.CREATED as TIMESTAMP) as CREATED_DATETIME,\r\ncast(sobo.UPDATED as TIMESTAMP) as UPDATED_DATETIME,\r\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_OBSERVATION_OMOP')}} hub \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_OBSERVATION_PHC_BP_OMOP')}} sobo \r\non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_OBSERVATION_OMOP')}} lo\r\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_OBSERVATION_OMOP')}} ls\r\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from observation_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "observation", "src_observation_phc_bp"], "unique_id": "model.nps_mi_2021.src_observation_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\observation\\src_observation_phc_bp.sql", "original_file_path": "models\\source\\observation\\src_observation_phc_bp.sql", "name": "src_observation_phc_bp", "alias": "src_observation_phc_bp", "checksum": {"name": "sha256", "checksum": "3a41340b72936e35e1c9e2ef56ed1568d6e665d76d312f61976198c5d0c9969c"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_OBSERVATION_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\observation\\src_observation_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.3998427, "compiled_sql": "\n\nwith observation_phc_bp as (\nselect\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_OBSERVATION_PHC_BP_OMOP' AS STRING) AS SOURCE_TABLE,\ncast(sobo.DATA_NAME as STRING) as OBSERVATION_TYPE,\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\nNULL as PROVIDER_ID,\ncast(sobo.DATA_VALUE as STRING) as OBSERVATION_VALUE,\ncast(sobo.MODIFIER as int) as OBSERVATION_MODIFIER,\ncast(sobo.DATA_CODE as int) as OBSERVATION_CODE,\ncast(sobo.RECORD_STATUS as STRING) as RECORD_STATUS,\ncast(sobo.OBS_DATE as TIMESTAMP) AS OBSERVATION_DATETIME,\ncast(sobo.CREATED as TIMESTAMP) as CREATED_DATETIME,\ncast(sobo.UPDATED as TIMESTAMP) as UPDATED_DATETIME,\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_OBSERVATION_OMOP` hub \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_PHC_BP_OMOP` sobo \non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_OBSERVATION_OMOP` lo\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_OBSERVATION_OMOP` ls\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from observation_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_phc_bp`"}, "model.nps_mi_2021.src_observation_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith observation_phc_md as (\r\nselect\r\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\r\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_OBSERVATION_PHC_MD_OMOP' AS STRING) AS SOURCE_TABLE,\r\ncast(sobo.TYPE as STRING) as OBSERVATION_TYPE,\r\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\r\nNULL as PROVIDER_ID,\r\ncast(sobo.MEASUREMENT as STRING) as OBSERVATION_VALUE,\r\nnull as OBSERVATION_MODIFIER,\r\ncast(sobo.MEASUREMENT_CODE as int) as OBSERVATION_CODE,\r\ncast(NULL as string) as RECORD_STATUS,\r\ncast(sobo.MEASUREMENT_DATETIME as TIMESTAMP) AS OBSERVATION_DATETIME,\r\ncast(sobo.STAMP_CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME,\r\ncast(NULL as timestamp) as UPDATED_DATETIME,\r\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nFROM \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_OBSERVATION_OMOP')}} hub \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_OBSERVATION_PHC_MD_OMOP')}} sobo  \r\non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_OBSERVATION_OMOP')}} lo\r\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_OBSERVATION_OMOP')}} ls\r\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from observation_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "observation", "src_observation_phc_md"], "unique_id": "model.nps_mi_2021.src_observation_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\observation\\src_observation_phc_md.sql", "original_file_path": "models\\source\\observation\\src_observation_phc_md.sql", "name": "src_observation_phc_md", "alias": "src_observation_phc_md", "checksum": {"name": "sha256", "checksum": "f9319d77ca0dbc2bfa0c69a685675ec69de51b3ee865adc7f66d2cd1df6507aa"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_OBSERVATION_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_PHC_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\observation\\src_observation_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4028406, "compiled_sql": "\n\nwith observation_phc_md as (\nselect\ncast(lo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\ncast(hub.SITE_ID AS STRING) AS SITE_ID,\ncast(hub.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\ncast('SAT_OBSERVATION_PHC_MD_OMOP' AS STRING) AS SOURCE_TABLE,\ncast(sobo.TYPE as STRING) as OBSERVATION_TYPE,\ncast(hub.OBSERVATION_ID as STRING) as OBSERVATION_ID,\nNULL as PROVIDER_ID,\ncast(sobo.MEASUREMENT as STRING) as OBSERVATION_VALUE,\nnull as OBSERVATION_MODIFIER,\ncast(sobo.MEASUREMENT_CODE as int) as OBSERVATION_CODE,\ncast(NULL as string) as RECORD_STATUS,\ncast(sobo.MEASUREMENT_DATETIME as TIMESTAMP) AS OBSERVATION_DATETIME,\ncast(sobo.STAMP_CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME,\ncast(NULL as timestamp) as UPDATED_DATETIME,\nCAST(sobo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sobo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sobo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sobo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sobo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sobo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sobo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sobo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nFROM \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_OBSERVATION_OMOP` hub \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_PHC_MD_OMOP` sobo  \non hub.HUB_OBSERVATION_SK = sobo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_OBSERVATION_OMOP` lo\non hub.HUB_OBSERVATION_SK = lo.HUB_OBSERVATION_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_OBSERVATION_OMOP` ls\non lo.LNK_OBSERVATION_SK = ls.LNK_OBSERVATION_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsobo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sobo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ls.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ls.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from observation_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_observation_phc_md`"}, "model.nps_mi_2021.PATHOLOGY": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_pathology_status as\r\n(\r\nselect * from {{ref('src_pathology_bp')}}\r\nUNION all\r\nselect * from {{ref('src_pathology_phc_bp')}}\r\nUNION all\r\nselect * from {{ref('src_pathology_md')}}\r\nUNION all\r\nselect * from {{ref('src_pathology_phc_md')}}\r\n)\r\nselect * from source_pathology_status", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "pathology", "PATHOLOGY"], "unique_id": "model.nps_mi_2021.PATHOLOGY", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\pathology\\PATHOLOGY.sql", "original_file_path": "models\\staging\\pathology\\PATHOLOGY.sql", "name": "PATHOLOGY", "alias": "PATHOLOGY", "checksum": {"name": "sha256", "checksum": "c2ef851cd0ae26f0a9da9b7e54d50796a4de61f8e014217d0698e56a92752be9"}, "tags": [], "refs": [["src_pathology_bp"], ["src_pathology_phc_bp"], ["src_pathology_md"], ["src_pathology_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\pathology\\PATHOLOGY.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4041257, "compiled_sql": "\n\nwith source_pathology_status as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_phc_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_md`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_phc_md`\n)\nselect * from source_pathology_status", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`"}, "model.nps_mi_2021.src_pathology_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_bp as (\r\nselect \r\ncast(spbo.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\r\nCAST(spbo.COMPLETION_FLAG AS STRING) AS COMPLETION_FLAG,\r\nCAST(spbo.CONFIDENTIAL_FLAG AS STRING) AS CONFIDENTIAL_FLAG,\r\nCAST(spbo.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(spbo.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\r\nCAST(null AS STRING) as LAB_NAME,\r\nCAST(null AS STRING) as LAB_REFERENCE_ID,\r\nCAST(spbo.NORMAL_FLAG AS STRING) AS NORMAL_FLAG,\r\nCAST(spbo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(spbo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(spbo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(spbo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(spbo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(spbo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(spbo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(spbo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\r\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\r\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\nCAST(spbo.PROVIDER_ID AS STRING) AS PROVIDER_ID,\r\nCAST(spbo.RECORD_STATUS AS STRING) AS RECORD_STATUS,\r\nCAST(spbo.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\r\nCAST(spbo.REQUEST_DATE AS TIMESTAMP) AS REQUEST_DATE,\r\nCAST(spbo.TEST_NAME AS STRING) AS RESULT_NAME,\r\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST(\"SAT_PATHOLOGY_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\r\nCAST(spbo.UPDATED_DATETIME as TIMESTAMP) AS UPDATED_DATETIME\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_BP_OMOP')}} spbo \r\non hpo.HUB_PATHOLOGY_SK=spbo.HUB_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_OMOP')}} lpo\r\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_OMOP')}} lspo \r\non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tspbo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND spbo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology", "src_pathology_bp"], "unique_id": "model.nps_mi_2021.src_pathology_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology\\src_pathology_bp.sql", "original_file_path": "models\\source\\pathology\\src_pathology_bp.sql", "name": "src_pathology_bp", "alias": "src_pathology_bp", "checksum": {"name": "sha256", "checksum": "fd47afb70fd4bf3ebc8cc0a017499aa8246d9a349076084640917e7a0674ea12"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology\\src_pathology_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4061263, "compiled_sql": "\n\nwith pathology_bp as (\nselect \ncast(spbo.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\nCAST(spbo.COMPLETION_FLAG AS STRING) AS COMPLETION_FLAG,\nCAST(spbo.CONFIDENTIAL_FLAG AS STRING) AS CONFIDENTIAL_FLAG,\nCAST(spbo.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\nCAST(spbo.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\nCAST(null AS STRING) as LAB_NAME,\nCAST(null AS STRING) as LAB_REFERENCE_ID,\nCAST(spbo.NORMAL_FLAG AS STRING) AS NORMAL_FLAG,\nCAST(spbo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(spbo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(spbo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(spbo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(spbo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(spbo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(spbo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(spbo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\nCAST(spbo.PROVIDER_ID AS STRING) AS PROVIDER_ID,\nCAST(spbo.RECORD_STATUS AS STRING) AS RECORD_STATUS,\nCAST(spbo.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\nCAST(spbo.REQUEST_DATE AS TIMESTAMP) AS REQUEST_DATE,\nCAST(spbo.TEST_NAME AS STRING) AS RESULT_NAME,\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_PATHOLOGY_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(spbo.UPDATED_DATETIME as TIMESTAMP) AS UPDATED_DATETIME\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_BP_OMOP` spbo \non hpo.HUB_PATHOLOGY_SK=spbo.HUB_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_OMOP` lpo\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_OMOP` lspo \non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tspbo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND spbo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_bp`"}, "model.nps_mi_2021.src_pathology_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_md as (\r\nselect \r\ncast(spmo.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\r\ncast(null as string) AS COMPLETION_FLAG,\r\nCAST(spmo.CONFIDENTIAL AS STRING) AS CONFIDENTIAL_FLAG,\r\nCAST(spmo.STAMP_CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(spmo.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\r\nCAST(spmo.LAB_NAME AS STRING) as LAB_NAME,\r\nCAST(spmo.LAB_REFERENCE AS STRING) as LAB_REFERENCE_ID,\r\ncast(null as string) AS NORMAL_FLAG,\r\nCAST(spmo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(spmo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(spmo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(spmo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(spmo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(spmo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(spmo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(spmo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\r\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\r\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\nCAST(null AS STRING) AS PROVIDER_ID,\r\nCAST(null AS STRING) AS RECORD_STATUS,\r\nCAST(spmo.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\r\nCAST(spmo.REQUESTED_DATE AS TIMESTAMP) AS REQUEST_DATE,\r\nCAST(spmo.TEST_NAME AS STRING) AS RESULT_NAME,\r\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST(\"SAT_PATHOLOGY_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\r\ncast(spmo.STAMP_DATETIME as TIMESTAMP) AS UPDATED_DATETIME\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_MD_OMOP')}} spmo\r\non hpo.HUB_PATHOLOGY_SK=spmo.HUB_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_OMOP')}} lpo\r\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_OMOP')}} lspo \r\non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\nINNER join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tspmo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND spmo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology", "src_pathology_md"], "unique_id": "model.nps_mi_2021.src_pathology_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology\\src_pathology_md.sql", "original_file_path": "models\\source\\pathology\\src_pathology_md.sql", "name": "src_pathology_md", "alias": "src_pathology_md", "checksum": {"name": "sha256", "checksum": "4f338edd9e98a27d6c63df89c3fbd37633e91e383f0d682367b9d28cbf0eb9b9"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology\\src_pathology_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.408127, "compiled_sql": "\n\nwith pathology_md as (\nselect \ncast(spmo.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\ncast(null as string) AS COMPLETION_FLAG,\nCAST(spmo.CONFIDENTIAL AS STRING) AS CONFIDENTIAL_FLAG,\nCAST(spmo.STAMP_CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\nCAST(spmo.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\nCAST(spmo.LAB_NAME AS STRING) as LAB_NAME,\nCAST(spmo.LAB_REFERENCE AS STRING) as LAB_REFERENCE_ID,\ncast(null as string) AS NORMAL_FLAG,\nCAST(spmo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(spmo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(spmo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(spmo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(spmo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(spmo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(spmo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(spmo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\nCAST(null AS STRING) AS PROVIDER_ID,\nCAST(null AS STRING) AS RECORD_STATUS,\nCAST(spmo.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\nCAST(spmo.REQUESTED_DATE AS TIMESTAMP) AS REQUEST_DATE,\nCAST(spmo.TEST_NAME AS STRING) AS RESULT_NAME,\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_PATHOLOGY_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\ncast(spmo.STAMP_DATETIME as TIMESTAMP) AS UPDATED_DATETIME\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_MD_OMOP` spmo\non hpo.HUB_PATHOLOGY_SK=spmo.HUB_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_OMOP` lpo\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_OMOP` lspo \non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\nINNER join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tspmo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND spmo.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_md`"}, "model.nps_mi_2021.src_pathology_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_phc_bp as (\r\nselect \r\ncast(spbo.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\r\nCAST(spbo.COMPLETION_FLAG AS STRING) AS COMPLETION_FLAG,\r\nCAST(spbo.CONFIDENTIAL_FLAG AS STRING) AS CONFIDENTIAL_FLAG,\r\nCAST(spbo.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(spbo.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\r\nCAST(null AS STRING) as LAB_NAME,\r\nCAST(null AS STRING) as LAB_REFERENCE_ID,\r\nCAST(spbo.NORMAL_FLAG AS STRING) AS NORMAL_FLAG,\r\nCAST(spbo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(spbo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(spbo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(spbo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(spbo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(spbo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(spbo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(spbo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\r\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\r\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\nCAST(spbo.PROVIDER_ID AS STRING) AS PROVIDER_ID,\r\nCAST(spbo.RECORD_STATUS AS STRING) AS RECORD_STATUS,\r\nCAST(spbo.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\r\nCAST(spbo.REQUEST_DATE AS TIMESTAMP) AS REQUEST_DATE,\r\nCAST(spbo.TEST_NAME AS STRING) AS RESULT_NAME,\r\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST(\"SAT_PATHOLOGY_PHC_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\r\nCAST(spbo.UPDATED_DATETIME as TIMESTAMP) AS UPDATED_DATETIME\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_PHC_BP_OMOP')}} spbo \r\non hpo.HUB_PATHOLOGY_SK=spbo.HUB_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_OMOP')}} lpo\r\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_OMOP')}} lspo \r\non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tspbo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND spbo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology", "src_pathology_phc_bp"], "unique_id": "model.nps_mi_2021.src_pathology_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology\\src_pathology_phc_bp.sql", "original_file_path": "models\\source\\pathology\\src_pathology_phc_bp.sql", "name": "src_pathology_phc_bp", "alias": "src_pathology_phc_bp", "checksum": {"name": "sha256", "checksum": "ca01b3ff2fd0f0692c2efc464ac612ddf342f462eedb9941d464833ffbd96dad"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology\\src_pathology_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4111269, "compiled_sql": "\n\nwith pathology_phc_bp as (\nselect \ncast(spbo.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\nCAST(spbo.COMPLETION_FLAG AS STRING) AS COMPLETION_FLAG,\nCAST(spbo.CONFIDENTIAL_FLAG AS STRING) AS CONFIDENTIAL_FLAG,\nCAST(spbo.CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\nCAST(spbo.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\nCAST(null AS STRING) as LAB_NAME,\nCAST(null AS STRING) as LAB_REFERENCE_ID,\nCAST(spbo.NORMAL_FLAG AS STRING) AS NORMAL_FLAG,\nCAST(spbo.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(spbo.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(spbo.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(spbo.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(spbo.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(spbo.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(spbo.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(spbo.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\nCAST(spbo.PROVIDER_ID AS STRING) AS PROVIDER_ID,\nCAST(spbo.RECORD_STATUS AS STRING) AS RECORD_STATUS,\nCAST(spbo.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\nCAST(spbo.REQUEST_DATE AS TIMESTAMP) AS REQUEST_DATE,\nCAST(spbo.TEST_NAME AS STRING) AS RESULT_NAME,\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_PATHOLOGY_PHC_BP_OMOP\" AS STRING) AS SOURCE_TABLE,\nCAST(spbo.UPDATED_DATETIME as TIMESTAMP) AS UPDATED_DATETIME\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_PHC_BP_OMOP` spbo \non hpo.HUB_PATHOLOGY_SK=spbo.HUB_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_OMOP` lpo\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_OMOP` lspo \non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tspbo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND spbo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_phc_bp`"}, "model.nps_mi_2021.src_pathology_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_phc_md as (\r\nselect \r\ncast(sppm.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\r\ncast(null as string) AS COMPLETION_FLAG,\r\nCAST(sppm.CONFIDENTIAL AS STRING) AS CONFIDENTIAL_FLAG,\r\nCAST(sppm.STAMP_CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\r\nCAST(sppm.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\r\nCAST(sppm.LAB_NAME AS STRING) as LAB_NAME,\r\nCAST(sppm.LAB_REFERENCE AS STRING) as LAB_REFERENCE_ID,\r\ncast(null as string) AS NORMAL_FLAG,\r\nCAST(sppm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sppm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sppm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sppm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sppm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sppm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sppm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sppm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\r\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\r\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\r\nCAST(null AS STRING) AS PROVIDER_ID,\r\nCAST(null AS STRING) AS RECORD_STATUS,\r\nCAST(sppm.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\r\nCAST(sppm.REQUEST_DATE AS TIMESTAMP) AS REQUEST_DATE,\r\nCAST(sppm.TEST_NAME AS STRING) AS RESULT_NAME,\r\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\r\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\r\nCAST(\"SAT_PATHOLOGY_PHC_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\r\ncast(sppm.STAMP_DATETIME as TIMESTAMP) as UPDATED_DATETIME\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_PHC_MD_OMOP')}} sppm \r\non hpo.HUB_PATHOLOGY_SK=sppm.HUB_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_OMOP')}} lpo\r\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_OMOP')}} lspo \r\non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsppm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sppm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology", "src_pathology_phc_md"], "unique_id": "model.nps_mi_2021.src_pathology_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology\\src_pathology_phc_md.sql", "original_file_path": "models\\source\\pathology\\src_pathology_phc_md.sql", "name": "src_pathology_phc_md", "alias": "src_pathology_phc_md", "checksum": {"name": "sha256", "checksum": "e6418d2a172c5efd29dbcd72c91feebd74e0140853e78c1a7776f68b5a7f5c16"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_PHC_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology\\src_pathology_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4132342, "compiled_sql": "\n\nwith pathology_phc_md as (\nselect \ncast(sppm.COLLECTION_DATE as TIMESTAMP) AS COLLECTION_DATE,\ncast(null as string) AS COMPLETION_FLAG,\nCAST(sppm.CONFIDENTIAL AS STRING) AS CONFIDENTIAL_FLAG,\nCAST(sppm.STAMP_CREATED_DATETIME as TIMESTAMP) AS CREATED_DATETIME,\nCAST(sppm.IMPORT_DATE AS TIMESTAMP) AS IMPORT_DATE,\nCAST(sppm.LAB_NAME AS STRING) as LAB_NAME,\nCAST(sppm.LAB_REFERENCE AS STRING) as LAB_REFERENCE_ID,\ncast(null as string) AS NORMAL_FLAG,\nCAST(sppm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sppm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sppm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sppm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sppm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sppm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sppm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sppm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD,\nCAST(hpo.PATHOLOGY_ID as STRING) AS PATHOLOGY_ID,\nCAST(lpo.HUB_SITE_PATIENT_SK as STRING) AS PATIENT_NUMBER,\nCAST(null AS STRING) AS PROVIDER_ID,\nCAST(null AS STRING) AS RECORD_STATUS,\nCAST(sppm.REPORT_DATE as TIMESTAMP) AS REPORT_DATE,\nCAST(sppm.REQUEST_DATE AS TIMESTAMP) AS REQUEST_DATE,\nCAST(sppm.TEST_NAME AS STRING) AS RESULT_NAME,\nCAST(hpo.SITE_ID AS STRING) AS SITE_ID,\nCAST(hpo.SOURCE_SYSTEM AS STRING) AS SOURCE_SYSTEM,\nCAST(\"SAT_PATHOLOGY_PHC_MD_OMOP\" AS STRING) AS SOURCE_TABLE,\ncast(sppm.STAMP_DATETIME as TIMESTAMP) as UPDATED_DATETIME\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_PHC_MD_OMOP` sppm \non hpo.HUB_PATHOLOGY_SK=sppm.HUB_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_OMOP` lpo\non hpo.HUB_PATHOLOGY_SK = lpo.HUB_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_OMOP` lspo \non lpo.LNK_PATHOLOGY_SK = lspo.LNK_PATHOLOGY_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpo.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsppm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sppm.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lspo.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspo.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_phc_md`"}, "model.nps_mi_2021.src_pathology_result_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_result_bp as (\r\nselect\r\ncast(lpr.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpr.SITE_ID as string) as SITE_ID,\r\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\ncast('SAT_PATHOLOGY_RESULT_BP_OMOP' as string) as SOURCE_TABLE,\r\nNULL as PROVIDER_ID,\r\nNULL as PATHOLOGY_RESULT_ATOM_ID,\r\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\r\ncast(sprb.REPORT_DATE as TIMESTAMP) as RESULT_DATE,\r\ncast(sprb.DATA_TYPE as string) as DATA_TYPE, \r\ncast(sprb.LOINC_CODE as string) as LOINC_CODE, \r\ncast(sprb.RESULT_NAME as string) as RESULT_NAME, \r\ncast(sprb.RESULT_VALUE as string) as RESULT_VALUE, \r\ncast(sprb.UNITS as string) as UNITS, \r\ncast('RANGE' as string) AS NORMAL_RANGE, \r\ncast(sprb.ABNORMAL_FLAG as string) as ABNORMAL_FLAG, \r\ncast(sprb.RECORD_STATUS as string) as RECORD_STATUS, \r\ncast(sprb.CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \r\ncast(sprb.UPDATED_DATETIME as TIMESTAMP) as UPDATED_DATETIME ,\r\nCAST(sprb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sprb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sprb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sprb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sprb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sprb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sprb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sprb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_RESULT_OMOP')}} hpr\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_RESULT_BP_OMOP')}} sprb \r\non hpr.HUB_PATHOLOGY_RESULT_SK = sprb.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_RESULT_OMOP')}} lpr \r\non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_RESULT_OMOP')}} lspr\r\non lpr.LNK_PATHOLOGY_RESULT_SK = lspr.LNK_PATHOLOGY_RESULT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpr.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsprb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sprb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_result_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology_result", "src_pathology_result_bp"], "unique_id": "model.nps_mi_2021.src_pathology_result_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology_result\\src_pathology_result_bp.sql", "original_file_path": "models\\source\\pathology_result\\src_pathology_result_bp.sql", "name": "src_pathology_result_bp", "alias": "src_pathology_result_bp", "checksum": {"name": "sha256", "checksum": "f9ccd986acc694a909f9e361b9eb8f2c6bee53b9092541d5e3c5f0d0f4654711"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology_result\\src_pathology_result_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4152622, "compiled_sql": "\n\nwith pathology_result_bp as (\nselect\ncast(lpr.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpr.SITE_ID as string) as SITE_ID,\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\ncast('SAT_PATHOLOGY_RESULT_BP_OMOP' as string) as SOURCE_TABLE,\nNULL as PROVIDER_ID,\nNULL as PATHOLOGY_RESULT_ATOM_ID,\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\ncast(sprb.REPORT_DATE as TIMESTAMP) as RESULT_DATE,\ncast(sprb.DATA_TYPE as string) as DATA_TYPE, \ncast(sprb.LOINC_CODE as string) as LOINC_CODE, \ncast(sprb.RESULT_NAME as string) as RESULT_NAME, \ncast(sprb.RESULT_VALUE as string) as RESULT_VALUE, \ncast(sprb.UNITS as string) as UNITS, \ncast('RANGE' as string) AS NORMAL_RANGE, \ncast(sprb.ABNORMAL_FLAG as string) as ABNORMAL_FLAG, \ncast(sprb.RECORD_STATUS as string) as RECORD_STATUS, \ncast(sprb.CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \ncast(sprb.UPDATED_DATETIME as TIMESTAMP) as UPDATED_DATETIME ,\nCAST(sprb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sprb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sprb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sprb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sprb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sprb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sprb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sprb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_RESULT_OMOP` hpr\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_BP_OMOP` sprb \non hpr.HUB_PATHOLOGY_RESULT_SK = sprb.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_RESULT_OMOP` lpr \non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_RESULT_OMOP` lspr\non lpr.LNK_PATHOLOGY_RESULT_SK = lspr.LNK_PATHOLOGY_RESULT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpr.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsprb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sprb.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_result_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_bp`"}, "model.nps_mi_2021.src_pathology_result_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_result_md as (\r\nselect\r\ncast(lpr.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpr.SITE_ID as string) as SITE_ID,\r\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\ncast('SAT_PATHOLOGY_RESULT_MD_OMOP' as string) as SOURCE_TABLE,\r\nNULL as PROVIDER_ID,\r\nNULL as PATHOLOGY_RESULT_ATOM_ID,\r\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\r\ncast(sprm.RESULT_DATE as TIMESTAMP) as RESULT_DATE,\r\ncast(sprm.PATH_CODE as string) as DATA_TYPE, \r\ncast(sprm.LOINC as string) as LOINC_CODE, \r\ncast(sprm.TEST_NAME as string) as RESULT_NAME, \r\ncast(sprm.RESULT as string) as RESULT_VALUE, \r\ncast(sprm.UNITS as string) as UNITS, \r\ncast(sprm.NORMAL_RANGE as string) AS NORMAL_RANGE, \r\ncast(sprm.ABNORMAL_FLAGS as string) as ABNORMAL_FLAG, \r\ncast(NULL as string) as RECORD_STATUS, \r\ncast(sprm.STAMP_CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \r\ncast(sprm.STAMP_DATETIME as timestamp) as UPDATED_DATETIME ,\r\nCAST(sprm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sprm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sprm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sprm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sprm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sprm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sprm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sprm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_RESULT_OMOP')}} hpr\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_RESULT_MD_OMOP')}} sprm \r\non hpr.HUB_PATHOLOGY_RESULT_SK = sprm.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_RESULT_OMOP')}} lpr \r\non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_RESULT_OMOP')}} lspr\r\non lpr.LNK_PATHOLOGY_RESULT_SK = lspr.LNK_PATHOLOGY_RESULT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpr.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsprm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sprm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_result_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology_result", "src_pathology_result_md"], "unique_id": "model.nps_mi_2021.src_pathology_result_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology_result\\src_pathology_result_md.sql", "original_file_path": "models\\source\\pathology_result\\src_pathology_result_md.sql", "name": "src_pathology_result_md", "alias": "src_pathology_result_md", "checksum": {"name": "sha256", "checksum": "d1ff60033e458fbd2903795efdd3176b6ad4a7a9b1ffb65bc93e8aa187b94552"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology_result\\src_pathology_result_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4172626, "compiled_sql": "\n\nwith pathology_result_md as (\nselect\ncast(lpr.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpr.SITE_ID as string) as SITE_ID,\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\ncast('SAT_PATHOLOGY_RESULT_MD_OMOP' as string) as SOURCE_TABLE,\nNULL as PROVIDER_ID,\nNULL as PATHOLOGY_RESULT_ATOM_ID,\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\ncast(sprm.RESULT_DATE as TIMESTAMP) as RESULT_DATE,\ncast(sprm.PATH_CODE as string) as DATA_TYPE, \ncast(sprm.LOINC as string) as LOINC_CODE, \ncast(sprm.TEST_NAME as string) as RESULT_NAME, \ncast(sprm.RESULT as string) as RESULT_VALUE, \ncast(sprm.UNITS as string) as UNITS, \ncast(sprm.NORMAL_RANGE as string) AS NORMAL_RANGE, \ncast(sprm.ABNORMAL_FLAGS as string) as ABNORMAL_FLAG, \ncast(NULL as string) as RECORD_STATUS, \ncast(sprm.STAMP_CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \ncast(sprm.STAMP_DATETIME as timestamp) as UPDATED_DATETIME ,\nCAST(sprm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sprm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sprm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sprm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sprm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sprm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sprm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sprm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_RESULT_OMOP` hpr\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_MD_OMOP` sprm \non hpr.HUB_PATHOLOGY_RESULT_SK = sprm.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_RESULT_OMOP` lpr \non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_RESULT_OMOP` lspr\non lpr.LNK_PATHOLOGY_RESULT_SK = lspr.LNK_PATHOLOGY_RESULT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpr.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsprm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sprm.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_result_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_md`"}, "model.nps_mi_2021.src_pathology_result_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith pathology_result_phc_bp as (\r\nselect\r\ncast(lpr.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hpr.SITE_ID as string) as SITE_ID,\r\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\ncast('SAT_PATHOLOGY_RESULT_PHC_BP_OMOP' as string) as SOURCE_TABLE,\r\nNULL as PROVIDER_ID,\r\nNULL as PATHOLOGY_RESULT_ATOM_ID,\r\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\r\ncast(sprb.REPORT_DATE as TIMESTAMP) as RESULT_DATE,\r\ncast(sprb.DATA_TYPE as string) as DATA_TYPE, \r\ncast(sprb.LOINC_CODE as string) as LOINC_CODE, \r\ncast(sprb.RESULT_NAME as string) as RESULT_NAME, \r\ncast(sprb.RESULT_VALUE as string) as RESULT_VALUE, \r\ncast(sprb.UNITS as string) as UNITS, \r\ncast('RANGE' as string) AS NORMAL_RANGE, \r\ncast(sprb.ABNORMAL_FLAG as string) as ABNORMAL_FLAG, \r\ncast(sprb.RECORD_STATUS as string) as RECORD_STATUS, \r\ncast(sprb.CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \r\ncast(sprb.UPDATED_DATETIME as TIMESTAMP) as UPDATED_DATETIME ,\r\nCAST(sprb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sprb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sprb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sprb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sprb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sprb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sprb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sprb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PATHOLOGY_RESULT_OMOP')}} hpr\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_PATHOLOGY_RESULT_PHC_BP_OMOP')}} sprb \r\non hpr.HUB_PATHOLOGY_RESULT_SK = sprb.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_PATHOLOGY_RESULT_OMOP')}} lpr \r\non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_PATHOLOGY_RESULT_OMOP')}} lspr\r\non lpr.LNK_PATHOLOGY_RESULT_SK = lspr.LNK_PATHOLOGY_RESULT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lpr.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsprb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sprb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_result_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "pathology_result", "src_pathology_result_phc_bp"], "unique_id": "model.nps_mi_2021.src_pathology_result_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\pathology_result\\src_pathology_result_phc_bp.sql", "original_file_path": "models\\source\\pathology_result\\src_pathology_result_phc_bp.sql", "name": "src_pathology_result_phc_bp", "alias": "src_pathology_result_phc_bp", "checksum": {"name": "sha256", "checksum": "0c6ee7e4f70daaec475e86c8b5f680afcbfa3078926434ca090d8918b11d7b1c"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_RESULT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\pathology_result\\src_pathology_result_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4192624, "compiled_sql": "\n\nwith pathology_result_phc_bp as (\nselect\ncast(lpr.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hpr.SITE_ID as string) as SITE_ID,\ncast(hpr.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\ncast('SAT_PATHOLOGY_RESULT_PHC_BP_OMOP' as string) as SOURCE_TABLE,\nNULL as PROVIDER_ID,\nNULL as PATHOLOGY_RESULT_ATOM_ID,\ncast(hpr.PATHOLOGY_RESULT_ID as string) as PATHOLOGY_RESULT_ID,\ncast(sprb.REPORT_DATE as TIMESTAMP) as RESULT_DATE,\ncast(sprb.DATA_TYPE as string) as DATA_TYPE, \ncast(sprb.LOINC_CODE as string) as LOINC_CODE, \ncast(sprb.RESULT_NAME as string) as RESULT_NAME, \ncast(sprb.RESULT_VALUE as string) as RESULT_VALUE, \ncast(sprb.UNITS as string) as UNITS, \ncast('RANGE' as string) AS NORMAL_RANGE, \ncast(sprb.ABNORMAL_FLAG as string) as ABNORMAL_FLAG, \ncast(sprb.RECORD_STATUS as string) as RECORD_STATUS, \ncast(sprb.CREATED_DATETIME as TIMESTAMP) as CREATED_DATETIME, \ncast(sprb.UPDATED_DATETIME as TIMESTAMP) as UPDATED_DATETIME ,\nCAST(sprb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sprb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sprb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sprb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sprb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sprb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sprb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sprb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_RESULT_OMOP` hpr\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_PHC_BP_OMOP` sprb \non hpr.HUB_PATHOLOGY_RESULT_SK = sprb.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_RESULT_OMOP` lpr \non hpr.HUB_PATHOLOGY_RESULT_SK = lpr.HUB_PATHOLOGY_RESULT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_RESULT_OMOP` lspr\non lpr.LNK_PATHOLOGY_RESULT_SK = lspr.LNK_PATHOLOGY_RESULT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lpr.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsprb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sprb.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lspr.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lspr.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_result_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_pathology_result_phc_bp`"}, "model.nps_mi_2021.REQUESTED_TEST": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_requested_test as\r\n(\r\nselect * from {{ref('src_requested_test_bp')}}\r\nunion all \r\nselect * from {{ref('src_requested_test_phc_bp')}}\r\nunion all\r\nselect * from {{ref('src_requested_test_md')}}\r\nunion all\r\nselect * from {{ref('src_requested_test_phc_md')}}\r\n)\r\nselect * from source_requested_test", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_requested_test_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "requested_test", "REQUESTED_TEST"], "unique_id": "model.nps_mi_2021.REQUESTED_TEST", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\requested_test\\REQUESTED_TEST.sql", "original_file_path": "models\\staging\\requested_test\\REQUESTED_TEST.sql", "name": "REQUESTED_TEST", "alias": "REQUESTED_TEST", "checksum": {"name": "sha256", "checksum": "2c30df803325fe5c7e13308f2924661e18235a55fcc7e584656e66a0a0aa7fc6"}, "tags": [], "refs": [["src_requested_test_bp"], ["src_requested_test_phc_bp"], ["src_requested_test_md"], ["src_requested_test_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\requested_test\\REQUESTED_TEST.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4212773, "compiled_sql": "\n\nwith source_requested_test as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_bp`\nunion all \nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_phc_bp`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_md`\nunion all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_phc_md`\n)\nselect * from source_requested_test", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`REQUESTED_TEST`"}, "model.nps_mi_2021.src_requested_test_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith requested_bp as (\r\n\r\nselect\r\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(srtb.PROVIDER_ID as string) as PROVIDER_ID,\r\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST('SAT_REQUESTED_TEST_GRH_BP_OMOP' as string) as SOURCE_TABLE,\r\nSAFE_CAST(hrt.REQUEST_ID as string) as REQUEST_ID,\r\nSAFE_CAST(NULL as string) as REQUEST_NO,\r\nSAFE_CAST(srtb.REQUEST_DATE as timestamp) as REQUEST_DATE,\r\nSAFE_CAST(srtb.REQUEST_STATUS as string) as REQUEST_STATUS_CODE,\r\nSAFE_CAST(srtb.PROVIDER_NAME as string) as PROVIDER_LAB_NAME,\r\nSAFE_CAST(NULL as string) as TEST_REASON,\r\nSAFE_CAST(srtb.FREE_TEXT_ITEM as string) as REQUESTED_TESTS,\r\nSAFE_CAST(NULL as string) as EORDER_NO,\r\nSAFE_CAST(NULL as string) as REASON_DISCARD,\r\nSAFE_CAST(srtb.LOCATION_ID as string) as LOCATION_ID,\r\nSAFE_CAST(srtb.RECORD_STATUS as string) as RECORD_STATUS,\r\nSAFE_CAST(srtb.REQUEST_TYPE as string) as REQUEST_TYPE,\r\nSAFE_CAST(srtb.FASTING as int) as FASTING,\r\nSAFE_CAST(srtb.PREGNANT as int) as PREGNANT,\r\nSAFE_CAST(srtb.LAST_MENSTRUAL_PERIOD_DATE as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\r\nSAFE_CAST(srtb.ESTIMATED_CONFINEMENT_DATE as timestamp) as ESTIMATED_CONFINEMENT_DATE,\r\nSAFE_CAST(srtb.URGENT as int) as URGENT,\r\nSAFE_CAST(srtb.URGENT_BY as int) as URGENT_BY,\r\nSAFE_CAST(srtb.URGENT_PHONE as int) as URGENT_PHONE,\r\nSAFE_CAST(srtb.URGENT_FAX as int) as URGENT_FAX,\r\nSAFE_CAST(srtb.SMEAR_SITE as int) as SMEAR_SITE,\r\nSAFE_CAST(srtb.CERVIX as int) as CERVIX,\r\nSAFE_CAST(srtb.EROSION as int) as EROSION,\r\nSAFE_CAST(srtb.ECTROPION as int) as ECTROPION,\r\nSAFE_CAST(srtb.POST_NATAL as int) as POST_NATAL,\r\nSAFE_CAST(srtb.POST_MENOPAUSAL as int) as POST_MENOPAUSAL,\r\nSAFE_CAST(srtb.ORAL_CONTRACEPTIVE_PILL as int) as ORAL_CONTRACEPTIVE_PILL,\r\nSAFE_CAST(srtb.HORMONE_REPLACEMENT_THERAPY as int) as HORMONE_REPLACEMENT_THERAPY,\r\nSAFE_CAST(srtb.HYSTERECTOMY as int) as HYSTERECTOMY,\r\nSAFE_CAST(srtb.RADIORX as int) as RADIORX,\r\nSAFE_CAST(srtb.INTRAUTERINE_CONTRACEPTIVE_DEVICE as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\r\nSAFE_CAST(srtb.BLEEDING as int) as BLEEDING,\r\nSAFE_CAST(NULL as string) as COPIES,\r\nSAFE_CAST(NULL as string) as BILLING,\r\nSAFE_CAST(srtb.PAP_REGISTER as int) as PAP_REGISTER,\r\nSAFE_CAST(srtb.CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nSAFE_CAST(srtb.CREATED_BY as int) as CREATED_BY, \r\nSAFE_CAST(srtb.UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\r\nSAFE_CAST(srtb.UPDATED_BY as int) as UPDATED_BY,\r\nNULL as VISIT_ID,\r\nNULL as VISIT_UPDATED,\r\nSAFE_CAST(srtb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(srtb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(srtb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(srtb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(srtb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(srtb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(srtb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(srtb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_REQUESTED_TEST_OMOP')}} hrt \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_REQUESTED_TEST_GRH_BP_OMOP')}} srtb \r\non hrt.HUB_REQUESTED_TEST_SK = srtb.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_REQUESTED_TEST_OMOP')}} lrt \r\non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_REQUESTED_TEST_OMOP')}} lsrt \r\non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsrtb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND srtb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n) \r\n\r\nselect * from requested_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "requested_test", "src_requested_test_bp"], "unique_id": "model.nps_mi_2021.src_requested_test_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\requested_test\\src_requested_test_bp.sql", "original_file_path": "models\\source\\requested_test\\src_requested_test_bp.sql", "name": "src_requested_test_bp", "alias": "src_requested_test_bp", "checksum": {"name": "sha256", "checksum": "b87c582909ca282ec72c9bc581d85fe1d70f52ade11e3663009b7423c4ae2ce5"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_GRH_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\requested_test\\src_requested_test_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.423448, "compiled_sql": "\n\nwith requested_bp as (\n\nselect\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\nSAFE_CAST(srtb.PROVIDER_ID as string) as PROVIDER_ID,\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST('SAT_REQUESTED_TEST_GRH_BP_OMOP' as string) as SOURCE_TABLE,\nSAFE_CAST(hrt.REQUEST_ID as string) as REQUEST_ID,\nSAFE_CAST(NULL as string) as REQUEST_NO,\nSAFE_CAST(srtb.REQUEST_DATE as timestamp) as REQUEST_DATE,\nSAFE_CAST(srtb.REQUEST_STATUS as string) as REQUEST_STATUS_CODE,\nSAFE_CAST(srtb.PROVIDER_NAME as string) as PROVIDER_LAB_NAME,\nSAFE_CAST(NULL as string) as TEST_REASON,\nSAFE_CAST(srtb.FREE_TEXT_ITEM as string) as REQUESTED_TESTS,\nSAFE_CAST(NULL as string) as EORDER_NO,\nSAFE_CAST(NULL as string) as REASON_DISCARD,\nSAFE_CAST(srtb.LOCATION_ID as string) as LOCATION_ID,\nSAFE_CAST(srtb.RECORD_STATUS as string) as RECORD_STATUS,\nSAFE_CAST(srtb.REQUEST_TYPE as string) as REQUEST_TYPE,\nSAFE_CAST(srtb.FASTING as int) as FASTING,\nSAFE_CAST(srtb.PREGNANT as int) as PREGNANT,\nSAFE_CAST(srtb.LAST_MENSTRUAL_PERIOD_DATE as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\nSAFE_CAST(srtb.ESTIMATED_CONFINEMENT_DATE as timestamp) as ESTIMATED_CONFINEMENT_DATE,\nSAFE_CAST(srtb.URGENT as int) as URGENT,\nSAFE_CAST(srtb.URGENT_BY as int) as URGENT_BY,\nSAFE_CAST(srtb.URGENT_PHONE as int) as URGENT_PHONE,\nSAFE_CAST(srtb.URGENT_FAX as int) as URGENT_FAX,\nSAFE_CAST(srtb.SMEAR_SITE as int) as SMEAR_SITE,\nSAFE_CAST(srtb.CERVIX as int) as CERVIX,\nSAFE_CAST(srtb.EROSION as int) as EROSION,\nSAFE_CAST(srtb.ECTROPION as int) as ECTROPION,\nSAFE_CAST(srtb.POST_NATAL as int) as POST_NATAL,\nSAFE_CAST(srtb.POST_MENOPAUSAL as int) as POST_MENOPAUSAL,\nSAFE_CAST(srtb.ORAL_CONTRACEPTIVE_PILL as int) as ORAL_CONTRACEPTIVE_PILL,\nSAFE_CAST(srtb.HORMONE_REPLACEMENT_THERAPY as int) as HORMONE_REPLACEMENT_THERAPY,\nSAFE_CAST(srtb.HYSTERECTOMY as int) as HYSTERECTOMY,\nSAFE_CAST(srtb.RADIORX as int) as RADIORX,\nSAFE_CAST(srtb.INTRAUTERINE_CONTRACEPTIVE_DEVICE as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\nSAFE_CAST(srtb.BLEEDING as int) as BLEEDING,\nSAFE_CAST(NULL as string) as COPIES,\nSAFE_CAST(NULL as string) as BILLING,\nSAFE_CAST(srtb.PAP_REGISTER as int) as PAP_REGISTER,\nSAFE_CAST(srtb.CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nSAFE_CAST(srtb.CREATED_BY as int) as CREATED_BY, \nSAFE_CAST(srtb.UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\nSAFE_CAST(srtb.UPDATED_BY as int) as UPDATED_BY,\nNULL as VISIT_ID,\nNULL as VISIT_UPDATED,\nSAFE_CAST(srtb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(srtb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(srtb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(srtb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(srtb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(srtb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(srtb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(srtb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_REQUESTED_TEST_OMOP` hrt \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_GRH_BP_OMOP` srtb \non hrt.HUB_REQUESTED_TEST_SK = srtb.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_REQUESTED_TEST_OMOP` lrt \non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_REQUESTED_TEST_OMOP` lsrt \non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsrtb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND srtb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n) \n\nselect * from requested_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_bp`"}, "model.nps_mi_2021.src_requested_test_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith requested_md as (\r\n\r\nselect\r\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(NULL as string) as PROVIDER_ID,\r\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST('SAT_REQUESTED_TEST_GRH_MD_OMOP' as string) as SOURCE_TABLE,\r\nSAFE_CAST(hrt.REQUEST_ID as string) as REQUEST_ID,\r\nSAFE_CAST(srtb.REQUEST_NO as string) as REQUEST_NO,\r\nSAFE_CAST(srtb.REQUEST_DATE as timestamp) as REQUEST_DATE,\r\nSAFE_CAST(srtb.STATUS_CODE as string) as REQUEST_STATUS_CODE,\r\nSAFE_CAST(srtb.LAB_NAME as string) as PROVIDER_LAB_NAME,\r\nSAFE_CAST(srtb.REASON as string) as TEST_REASON,\r\nSAFE_CAST(srtb.TESTS as string) as REQUESTED_TESTS,\r\nSAFE_CAST(NULL as string) as EORDER_NO,\r\nSAFE_CAST(NULL as string) as REASON_DISCARD,\r\nSAFE_CAST(NULL as string) as LOCATION_ID,\r\nSAFE_CAST(NULL as string) as RECORD_STATUS,\r\nSAFE_CAST(NULL as string) as REQUEST_TYPE,\r\nSAFE_CAST(NULL as int) as FASTING,\r\nSAFE_CAST(NULL as int) as PREGNANT,\r\nSAFE_CAST(NULL as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\r\nSAFE_CAST(NULL as timestamp) as ESTIMATED_CONFINEMENT_DATE,\r\nSAFE_CAST(NULL as int) as URGENT,\r\nSAFE_CAST(NULL as int) as URGENT_BY,\r\nSAFE_CAST(NULL as int) as URGENT_PHONE,\r\nSAFE_CAST(NULL as int) as URGENT_FAX,\r\nSAFE_CAST(NULL as int) as SMEAR_SITE,\r\nSAFE_CAST(NULL as int) as CERVIX,\r\nSAFE_CAST(NULL as int) as EROSION,\r\nSAFE_CAST(NULL as int) as ECTROPION,\r\nSAFE_CAST(NULL as int) as POST_NATAL,\r\nSAFE_CAST(NULL as int) as POST_MENOPAUSAL,\r\nSAFE_CAST(NULL as int) as ORAL_CONTRACEPTIVE_PILL,\r\nSAFE_CAST(NULL as int) as HORMONE_REPLACEMENT_THERAPY,\r\nSAFE_CAST(NULL as int) as HYSTERECTOMY,\r\nSAFE_CAST(NULL as int) as RADIORX,\r\nSAFE_CAST(NULL as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\r\nSAFE_CAST(NULL as int) as BLEEDING,\r\nSAFE_CAST(NULL as string) as COPIES,\r\nSAFE_CAST(NULL as string) as BILLING,\r\nSAFE_CAST(NULL as int) as PAP_REGISTER,\r\nSAFE_CAST(srtb.STAMP_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nSAFE_CAST(srtb.STAMP_USER_ID as int) as CREATED_BY, \r\nSAFE_CAST(srtb.STAMP_DATETIME as timestamp) as UPDATED_DATETIME,\r\nSAFE_CAST(srtb.STAMP_USER_ID as int) as UPDATED_BY,\r\nNULL as VISIT_ID,\r\nNULL as VISIT_UPDATED,\r\nSAFE_CAST(srtb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(srtb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(srtb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(srtb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(srtb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(srtb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(srtb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(srtb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_REQUESTED_TEST_OMOP')}} hrt \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_REQUESTED_TEST_GRH_MD_OMOP')}} srtb \r\non hrt.HUB_REQUESTED_TEST_SK = srtb.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_REQUESTED_TEST_OMOP')}} lrt \r\non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_REQUESTED_TEST_OMOP')}} lsrt \r\non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsrtb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND srtb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n) \r\n\r\nselect * from requested_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "requested_test", "src_requested_test_md"], "unique_id": "model.nps_mi_2021.src_requested_test_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\requested_test\\src_requested_test_md.sql", "original_file_path": "models\\source\\requested_test\\src_requested_test_md.sql", "name": "src_requested_test_md", "alias": "src_requested_test_md", "checksum": {"name": "sha256", "checksum": "c6ccdefabda172064ac0bcda04a8a1bab7c88dcbbc37ff2a0e017f4b74b7e379"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_GRH_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_REQUESTED_TEST_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\requested_test\\src_requested_test_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.425449, "compiled_sql": "\n\nwith requested_md as (\n\nselect\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\nSAFE_CAST(NULL as string) as PROVIDER_ID,\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST('SAT_REQUESTED_TEST_GRH_MD_OMOP' as string) as SOURCE_TABLE,\nSAFE_CAST(hrt.REQUEST_ID as string) as REQUEST_ID,\nSAFE_CAST(srtb.REQUEST_NO as string) as REQUEST_NO,\nSAFE_CAST(srtb.REQUEST_DATE as timestamp) as REQUEST_DATE,\nSAFE_CAST(srtb.STATUS_CODE as string) as REQUEST_STATUS_CODE,\nSAFE_CAST(srtb.LAB_NAME as string) as PROVIDER_LAB_NAME,\nSAFE_CAST(srtb.REASON as string) as TEST_REASON,\nSAFE_CAST(srtb.TESTS as string) as REQUESTED_TESTS,\nSAFE_CAST(NULL as string) as EORDER_NO,\nSAFE_CAST(NULL as string) as REASON_DISCARD,\nSAFE_CAST(NULL as string) as LOCATION_ID,\nSAFE_CAST(NULL as string) as RECORD_STATUS,\nSAFE_CAST(NULL as string) as REQUEST_TYPE,\nSAFE_CAST(NULL as int) as FASTING,\nSAFE_CAST(NULL as int) as PREGNANT,\nSAFE_CAST(NULL as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\nSAFE_CAST(NULL as timestamp) as ESTIMATED_CONFINEMENT_DATE,\nSAFE_CAST(NULL as int) as URGENT,\nSAFE_CAST(NULL as int) as URGENT_BY,\nSAFE_CAST(NULL as int) as URGENT_PHONE,\nSAFE_CAST(NULL as int) as URGENT_FAX,\nSAFE_CAST(NULL as int) as SMEAR_SITE,\nSAFE_CAST(NULL as int) as CERVIX,\nSAFE_CAST(NULL as int) as EROSION,\nSAFE_CAST(NULL as int) as ECTROPION,\nSAFE_CAST(NULL as int) as POST_NATAL,\nSAFE_CAST(NULL as int) as POST_MENOPAUSAL,\nSAFE_CAST(NULL as int) as ORAL_CONTRACEPTIVE_PILL,\nSAFE_CAST(NULL as int) as HORMONE_REPLACEMENT_THERAPY,\nSAFE_CAST(NULL as int) as HYSTERECTOMY,\nSAFE_CAST(NULL as int) as RADIORX,\nSAFE_CAST(NULL as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\nSAFE_CAST(NULL as int) as BLEEDING,\nSAFE_CAST(NULL as string) as COPIES,\nSAFE_CAST(NULL as string) as BILLING,\nSAFE_CAST(NULL as int) as PAP_REGISTER,\nSAFE_CAST(srtb.STAMP_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nSAFE_CAST(srtb.STAMP_USER_ID as int) as CREATED_BY, \nSAFE_CAST(srtb.STAMP_DATETIME as timestamp) as UPDATED_DATETIME,\nSAFE_CAST(srtb.STAMP_USER_ID as int) as UPDATED_BY,\nNULL as VISIT_ID,\nNULL as VISIT_UPDATED,\nSAFE_CAST(srtb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(srtb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(srtb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(srtb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(srtb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(srtb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(srtb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(srtb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_REQUESTED_TEST_OMOP` hrt \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_GRH_MD_OMOP` srtb \non hrt.HUB_REQUESTED_TEST_SK = srtb.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_REQUESTED_TEST_OMOP` lrt \non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_REQUESTED_TEST_OMOP` lsrt \non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsrtb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND srtb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n) \n\nselect * from requested_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_md`"}, "model.nps_mi_2021.src_requested_test_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith requested_phc_bp as (\r\n\r\nselect\r\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(srtb.PROVIDER_ID as string) as PROVIDER_ID,\r\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST('SAT_REQUESTED_TEST_PHC_BP_OMOP' as string) as SOURCE_TABLE,\r\nSAFE_CAST(hrt.REQUEST_ID as string) as REQUEST_ID,\r\nSAFE_CAST(NULL as string) as REQUEST_NO,\r\nSAFE_CAST(srtb.REQUEST_DATE as timestamp) as REQUEST_DATE,\r\nSAFE_CAST(srtb.REQUEST_STATUS as string) as REQUEST_STATUS_CODE,\r\nSAFE_CAST(srtb.PROVIDER_NAME as string) as PROVIDER_LAB_NAME,\r\nSAFE_CAST(NULL as string) as TEST_REASON,\r\nSAFE_CAST(srtb.FREE_TEXT_ITEM as string) as REQUESTED_TESTS,\r\nSAFE_CAST(NULL as string) as EORDER_NO,\r\nSAFE_CAST(NULL as string) as REASON_DISCARD,\r\nSAFE_CAST(srtb.LOCATION_ID as string) as LOCATION_ID,\r\nSAFE_CAST(srtb.RECORD_STATUS as string) as RECORD_STATUS,\r\nSAFE_CAST(srtb.REQUEST_TYPE as string) as REQUEST_TYPE,\r\nSAFE_CAST(srtb.FASTING as int) as FASTING,\r\nSAFE_CAST(srtb.PREGNANT as int) as PREGNANT,\r\nSAFE_CAST(srtb.LAST_MENSTRUAL_PERIOD_DATE as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\r\nSAFE_CAST(srtb.ESTIMATED_CONFINEMENT_DATE as timestamp) as ESTIMATED_CONFINEMENT_DATE,\r\nSAFE_CAST(srtb.URGENT as int) as URGENT,\r\nSAFE_CAST(srtb.URGENT_BY as int) as URGENT_BY,\r\nSAFE_CAST(srtb.URGENT_PHONE as int) as URGENT_PHONE,\r\nSAFE_CAST(srtb.URGENT_FAX as int) as URGENT_FAX,\r\nSAFE_CAST(srtb.SMEAR_SITE as int) as SMEAR_SITE,\r\nSAFE_CAST(srtb.CERVIX as int) as CERVIX,\r\nSAFE_CAST(srtb.EROSION as int) as EROSION,\r\nSAFE_CAST(srtb.ECTROPION as int) as ECTROPION,\r\nSAFE_CAST(srtb.POST_NATAL as int) as POST_NATAL,\r\nSAFE_CAST(srtb.POST_MENOPAUSAL as int) as POST_MENOPAUSAL,\r\nSAFE_CAST(srtb.ORAL_CONTRACEPTIVE_PILL as int) as ORAL_CONTRACEPTIVE_PILL,\r\nSAFE_CAST(srtb.HORMONE_REPLACEMENT_THERAPY as int) as HORMONE_REPLACEMENT_THERAPY,\r\nSAFE_CAST(srtb.HYSTERECTOMY as int) as HYSTERECTOMY,\r\nSAFE_CAST(srtb.RADIORX as int) as RADIORX,\r\nSAFE_CAST(srtb.INTRAUTERINE_CONTRACEPTIVE_DEVICE as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\r\nSAFE_CAST(srtb.BLEEDING as int) as BLEEDING,\r\nSAFE_CAST(NULL as string) as COPIES,\r\nSAFE_CAST(NULL as string) as BILLING,\r\nSAFE_CAST(srtb.PAP_REGISTER as int) as PAP_REGISTER,\r\nSAFE_CAST(srtb.CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nSAFE_CAST(srtb.CREATED_BY as int) as CREATED_BY, \r\nSAFE_CAST(srtb.UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\r\nSAFE_CAST(srtb.UPDATED_BY as int) as UPDATED_BY,\r\nNULL as VISIT_ID,\r\nNULL as VISIT_UPDATED,\r\nSAFE_CAST(srtb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(srtb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(srtb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(srtb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(srtb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(srtb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(srtb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(srtb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_REQUESTED_TEST_OMOP')}} hrt \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_REQUESTED_TEST_PHC_BP_OMOP')}} srtb \r\non hrt.HUB_REQUESTED_TEST_SK = srtb.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_REQUESTED_TEST_OMOP')}} lrt \r\non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_REQUESTED_TEST_OMOP')}} lsrt \r\non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsrtb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND srtb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n) \r\n\r\nselect * from requested_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "requested_test", "src_requested_test_phc_bp"], "unique_id": "model.nps_mi_2021.src_requested_test_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\requested_test\\src_requested_test_phc_bp.sql", "original_file_path": "models\\source\\requested_test\\src_requested_test_phc_bp.sql", "name": "src_requested_test_phc_bp", "alias": "src_requested_test_phc_bp", "checksum": {"name": "sha256", "checksum": "96bf3a6f5ab722a1273d00a70e7a296ce479a30a8db5b69d55593b00c5f10921"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_REQUESTED_TEST_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\requested_test\\src_requested_test_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.427448, "compiled_sql": "\n\nwith requested_phc_bp as (\n\nselect\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\nSAFE_CAST(srtb.PROVIDER_ID as string) as PROVIDER_ID,\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST('SAT_REQUESTED_TEST_PHC_BP_OMOP' as string) as SOURCE_TABLE,\nSAFE_CAST(hrt.REQUEST_ID as string) as REQUEST_ID,\nSAFE_CAST(NULL as string) as REQUEST_NO,\nSAFE_CAST(srtb.REQUEST_DATE as timestamp) as REQUEST_DATE,\nSAFE_CAST(srtb.REQUEST_STATUS as string) as REQUEST_STATUS_CODE,\nSAFE_CAST(srtb.PROVIDER_NAME as string) as PROVIDER_LAB_NAME,\nSAFE_CAST(NULL as string) as TEST_REASON,\nSAFE_CAST(srtb.FREE_TEXT_ITEM as string) as REQUESTED_TESTS,\nSAFE_CAST(NULL as string) as EORDER_NO,\nSAFE_CAST(NULL as string) as REASON_DISCARD,\nSAFE_CAST(srtb.LOCATION_ID as string) as LOCATION_ID,\nSAFE_CAST(srtb.RECORD_STATUS as string) as RECORD_STATUS,\nSAFE_CAST(srtb.REQUEST_TYPE as string) as REQUEST_TYPE,\nSAFE_CAST(srtb.FASTING as int) as FASTING,\nSAFE_CAST(srtb.PREGNANT as int) as PREGNANT,\nSAFE_CAST(srtb.LAST_MENSTRUAL_PERIOD_DATE as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\nSAFE_CAST(srtb.ESTIMATED_CONFINEMENT_DATE as timestamp) as ESTIMATED_CONFINEMENT_DATE,\nSAFE_CAST(srtb.URGENT as int) as URGENT,\nSAFE_CAST(srtb.URGENT_BY as int) as URGENT_BY,\nSAFE_CAST(srtb.URGENT_PHONE as int) as URGENT_PHONE,\nSAFE_CAST(srtb.URGENT_FAX as int) as URGENT_FAX,\nSAFE_CAST(srtb.SMEAR_SITE as int) as SMEAR_SITE,\nSAFE_CAST(srtb.CERVIX as int) as CERVIX,\nSAFE_CAST(srtb.EROSION as int) as EROSION,\nSAFE_CAST(srtb.ECTROPION as int) as ECTROPION,\nSAFE_CAST(srtb.POST_NATAL as int) as POST_NATAL,\nSAFE_CAST(srtb.POST_MENOPAUSAL as int) as POST_MENOPAUSAL,\nSAFE_CAST(srtb.ORAL_CONTRACEPTIVE_PILL as int) as ORAL_CONTRACEPTIVE_PILL,\nSAFE_CAST(srtb.HORMONE_REPLACEMENT_THERAPY as int) as HORMONE_REPLACEMENT_THERAPY,\nSAFE_CAST(srtb.HYSTERECTOMY as int) as HYSTERECTOMY,\nSAFE_CAST(srtb.RADIORX as int) as RADIORX,\nSAFE_CAST(srtb.INTRAUTERINE_CONTRACEPTIVE_DEVICE as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\nSAFE_CAST(srtb.BLEEDING as int) as BLEEDING,\nSAFE_CAST(NULL as string) as COPIES,\nSAFE_CAST(NULL as string) as BILLING,\nSAFE_CAST(srtb.PAP_REGISTER as int) as PAP_REGISTER,\nSAFE_CAST(srtb.CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nSAFE_CAST(srtb.CREATED_BY as int) as CREATED_BY, \nSAFE_CAST(srtb.UPDATED_DATETIME as timestamp) as UPDATED_DATETIME,\nSAFE_CAST(srtb.UPDATED_BY as int) as UPDATED_BY,\nNULL as VISIT_ID,\nNULL as VISIT_UPDATED,\nSAFE_CAST(srtb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(srtb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(srtb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(srtb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(srtb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(srtb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(srtb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(srtb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_REQUESTED_TEST_OMOP` hrt \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_PHC_BP_OMOP` srtb \non hrt.HUB_REQUESTED_TEST_SK = srtb.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_REQUESTED_TEST_OMOP` lrt \non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_REQUESTED_TEST_OMOP` lsrt \non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsrtb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND srtb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n) \n\nselect * from requested_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_phc_bp`"}, "model.nps_mi_2021.src_requested_test_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith requested_phc_md as (\r\n\r\nselect\r\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\r\nSAFE_CAST(NULL as string) as PROVIDER_ID,\r\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\nSAFE_CAST('SAT_REQUESTED_TEST_PHC_MD_OMOP' as string) as SOURCE_TABLE,\r\nSAFE_CAST(NULL as string) as REQUEST_ID,\r\nSAFE_CAST(srtpm.REQUEST_NO as string) as REQUEST_NO,\r\nSAFE_CAST(srtpm.REQUEST_DATE as timestamp) as REQUEST_DATE,\r\nSAFE_CAST(srtpm.STATUS_CODE as string) as REQUEST_STATUS_CODE,\r\nSAFE_CAST(srtpm.LAB_NAME as string) as PROVIDER_LAB_NAME,\r\nSAFE_CAST(srtpm.REASON as string) as TEST_REASON,\r\nSAFE_CAST(srtpm.TESTS as string) as REQUESTED_TESTS,\r\nSAFE_CAST(srtpm.EORDER_NO as string) as EORDER_NO,\r\nSAFE_CAST(srtpm.REASON_DISCARD as string) as REASON_DISCARD,\r\nSAFE_CAST(NULL as string) as LOCATION_ID,\r\nSAFE_CAST(NULL as string) as RECORD_STATUS,\r\nSAFE_CAST(NULL as string) as REQUEST_TYPE,\r\nSAFE_CAST(NULL as int) as FASTING,\r\nSAFE_CAST(NULL as int) as PREGNANT,\r\nSAFE_CAST(NULL as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\r\nSAFE_CAST(NULL as timestamp) as ESTIMATED_CONFINEMENT_DATE,\r\nSAFE_CAST(NULL as int) as URGENT,\r\nSAFE_CAST(NULL as int) as URGENT_BY,\r\nSAFE_CAST(NULL as int) as URGENT_PHONE,\r\nSAFE_CAST(NULL as int) as URGENT_FAX,\r\nSAFE_CAST(NULL as int) as SMEAR_SITE,\r\nSAFE_CAST(NULL as int) as CERVIX,\r\nSAFE_CAST(NULL as int) as EROSION,\r\nSAFE_CAST(NULL as int) as ECTROPION,\r\nSAFE_CAST(NULL as int) as POST_NATAL,\r\nSAFE_CAST(NULL as int) as POST_MENOPAUSAL,\r\nSAFE_CAST(NULL as int) as ORAL_CONTRACEPTIVE_PILL,\r\nSAFE_CAST(NULL as int) as HORMONE_REPLACEMENT_THERAPY,\r\nSAFE_CAST(NULL as int) as HYSTERECTOMY,\r\nSAFE_CAST(NULL as int) as RADIORX,\r\nSAFE_CAST(NULL as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\r\nSAFE_CAST(NULL as int) as BLEEDING,\r\nSAFE_CAST(NULL as string) as COPIES,\r\nSAFE_CAST(NULL as string) as BILLING,\r\nSAFE_CAST(NULL as int) as PAP_REGISTER,\r\nSAFE_CAST(srtpm.STAMP_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\r\nSAFE_CAST(srtpm.STAMP_USER_ID as int) as CREATED_BY, \r\nSAFE_CAST(srtpm.STAMP_DATETIME as timestamp) as UPDATED_DATETIME,\r\nSAFE_CAST(srtpm.STAMP_USER_ID as int) as UPDATED_BY,\r\nNULL as VISIT_ID,\r\nNULL as VISIT_UPDATED,\r\nSAFE_CAST(srtpm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nSAFE_CAST(srtpm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nSAFE_CAST(srtpm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nSAFE_CAST(srtpm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nSAFE_CAST(srtpm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nSAFE_CAST(srtpm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nSAFE_CAST(srtpm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nSAFE_CAST(srtpm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_REQUESTED_TEST_OMOP')}} hrt \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_REQUESTED_TEST_PHC_MD_OMOP')}} srtpm\r\non hrt.HUB_REQUESTED_TEST_SK = srtpm.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_REQUESTED_TEST_OMOP')}} lrt \r\non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_REQUESTED_TEST_OMOP')}} lsrt \r\non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsrtpm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND srtpm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n) \r\n\r\nselect * from requested_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "requested_test", "src_requested_test_phc_md"], "unique_id": "model.nps_mi_2021.src_requested_test_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\requested_test\\src_requested_test_phc_md.sql", "original_file_path": "models\\source\\requested_test\\src_requested_test_phc_md.sql", "name": "src_requested_test_phc_md", "alias": "src_requested_test_phc_md", "checksum": {"name": "sha256", "checksum": "c595dd44049ab9d8c1a500129f8a21963460168f0e7765508fdded8e496accc3"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_REQUESTED_TEST_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_PHC_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_REQUESTED_TEST_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\requested_test\\src_requested_test_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4294486, "compiled_sql": "\n\nwith requested_phc_md as (\n\nselect\nSAFE_CAST(lrt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\nSAFE_CAST(hrt.SITE_ID as string) as SITE_ID,\nSAFE_CAST(NULL as string) as PROVIDER_ID,\nSAFE_CAST(hrt.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\nSAFE_CAST('SAT_REQUESTED_TEST_PHC_MD_OMOP' as string) as SOURCE_TABLE,\nSAFE_CAST(NULL as string) as REQUEST_ID,\nSAFE_CAST(srtpm.REQUEST_NO as string) as REQUEST_NO,\nSAFE_CAST(srtpm.REQUEST_DATE as timestamp) as REQUEST_DATE,\nSAFE_CAST(srtpm.STATUS_CODE as string) as REQUEST_STATUS_CODE,\nSAFE_CAST(srtpm.LAB_NAME as string) as PROVIDER_LAB_NAME,\nSAFE_CAST(srtpm.REASON as string) as TEST_REASON,\nSAFE_CAST(srtpm.TESTS as string) as REQUESTED_TESTS,\nSAFE_CAST(srtpm.EORDER_NO as string) as EORDER_NO,\nSAFE_CAST(srtpm.REASON_DISCARD as string) as REASON_DISCARD,\nSAFE_CAST(NULL as string) as LOCATION_ID,\nSAFE_CAST(NULL as string) as RECORD_STATUS,\nSAFE_CAST(NULL as string) as REQUEST_TYPE,\nSAFE_CAST(NULL as int) as FASTING,\nSAFE_CAST(NULL as int) as PREGNANT,\nSAFE_CAST(NULL as timestamp) as LAST_MENSTRUAL_PERIOD_DATE,\nSAFE_CAST(NULL as timestamp) as ESTIMATED_CONFINEMENT_DATE,\nSAFE_CAST(NULL as int) as URGENT,\nSAFE_CAST(NULL as int) as URGENT_BY,\nSAFE_CAST(NULL as int) as URGENT_PHONE,\nSAFE_CAST(NULL as int) as URGENT_FAX,\nSAFE_CAST(NULL as int) as SMEAR_SITE,\nSAFE_CAST(NULL as int) as CERVIX,\nSAFE_CAST(NULL as int) as EROSION,\nSAFE_CAST(NULL as int) as ECTROPION,\nSAFE_CAST(NULL as int) as POST_NATAL,\nSAFE_CAST(NULL as int) as POST_MENOPAUSAL,\nSAFE_CAST(NULL as int) as ORAL_CONTRACEPTIVE_PILL,\nSAFE_CAST(NULL as int) as HORMONE_REPLACEMENT_THERAPY,\nSAFE_CAST(NULL as int) as HYSTERECTOMY,\nSAFE_CAST(NULL as int) as RADIORX,\nSAFE_CAST(NULL as int) as INTRAUTERINE_CONTRACEPTIVE_DEVICE,\nSAFE_CAST(NULL as int) as BLEEDING,\nSAFE_CAST(NULL as string) as COPIES,\nSAFE_CAST(NULL as string) as BILLING,\nSAFE_CAST(NULL as int) as PAP_REGISTER,\nSAFE_CAST(srtpm.STAMP_CREATED_DATETIME as timestamp) as CREATED_DATETIME,\nSAFE_CAST(srtpm.STAMP_USER_ID as int) as CREATED_BY, \nSAFE_CAST(srtpm.STAMP_DATETIME as timestamp) as UPDATED_DATETIME,\nSAFE_CAST(srtpm.STAMP_USER_ID as int) as UPDATED_BY,\nNULL as VISIT_ID,\nNULL as VISIT_UPDATED,\nSAFE_CAST(srtpm.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nSAFE_CAST(srtpm.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nSAFE_CAST(srtpm.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nSAFE_CAST(srtpm.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nSAFE_CAST(srtpm.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nSAFE_CAST(srtpm.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nSAFE_CAST(srtpm.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nSAFE_CAST(srtpm.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_REQUESTED_TEST_OMOP` hrt \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_PHC_MD_OMOP` srtpm\non hrt.HUB_REQUESTED_TEST_SK = srtpm.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_REQUESTED_TEST_OMOP` lrt \non hrt.HUB_REQUESTED_TEST_SK = lrt.HUB_REQUESTED_TEST_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_REQUESTED_TEST_OMOP` lsrt \non lrt.LNK_REQUESTED_TEST_SK=lsrt.LNK_REQUESTED_TEST_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lrt.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsrtpm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND srtpm.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsrt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsrt.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n    AND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n) \n\nselect * from requested_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_requested_test_phc_md`"}, "model.nps_mi_2021.src_smoking_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith smoking_bp as (\r\n\r\nselect \r\nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\r\ncast(\"BP\" as STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP' as STRING) as SOURCE_TABLE,\r\nNULL AS PROVIDER_ID,\r\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\r\ncast(sssb.RECORD_STATUS as STRING) as RECORD_STATUS,\r\ncast(CASE \r\n\t\tWHEN sssb.SMOKING_CODE = 1\r\n\t\tTHEN 1\r\n\t\tWHEN sssb.SMOKING_CODE = 2\r\n\t\tTHEN 2\r\n\t\tWHEN sssb.SMOKING_CODE = 3\r\n\t\tTHEN 3\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as INT) as SMOKING_STATUS_CODE,\r\n\t\tcast(CASE \r\n\t\tWHEN sssb.SMOKING_CODE = 1\r\n\t\tTHEN 'Non-Smoker'\r\n\t\tWHEN sssb.SMOKING_CODE = 2\r\n\t\tTHEN 'Ex-Smoker'\r\n\t\tWHEN sssb.SMOKING_CODE = 3\r\n\t\tTHEN 'Smoker'\r\n\t\tELSE\r\n\t\t'Not Recorded'\r\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\r\ncast(sssb.PAST_SMOKING_CODE as int) AS PAST_SMOKING_CODE,\r\ncast(sssb.SMOKING_TYPE as int) as SMOKING_PRODUCT_TYPE,\r\ncast(sssb.YEAR_STARTED as STRING) as SMOKING_START_DATE,\r\ncast(sssb.PAST_STARTED as INT) as PAST_SMOKING_START_DATE,\r\ncast(NULL as STRING) as SMOKING_FREQUENCY,\r\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\r\ncast(NULL as STRING) as SMOKING_CEASED_DATE,\r\ncast(sssb.PAST_STOPPED as INT) as PAST_SMOKING_STOPPED_DATE,\r\ncast(NULL as STRING) AS SMOKING_ASSESSMENT_DATE, \r\ncast(NULL AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\r\ncast(NULL as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \r\ncast(NULL as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\r\ncast(NULL as STRING) as SMOKING_ABSTINENCE_UNIT , \r\ncast(NULL as STRING) as SMOKING_COMMENT, \r\ncast(sssb.created_datetime as timestamp) as CREATED_DATETIME,\r\ncast(sssb.updated_datetime as timestamp) as UPDATED_DATETIME,\r\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} hssb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} sssb\r\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = sssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} lssb\r\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = lssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} lsssb\r\non lssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK = lsssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from smoking_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "smoking_status", "src_smoking_bp"], "unique_id": "model.nps_mi_2021.src_smoking_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\smoking_status\\src_smoking_bp.sql", "original_file_path": "models\\source\\smoking_status\\src_smoking_bp.sql", "name": "src_smoking_bp", "alias": "src_smoking_bp", "checksum": {"name": "sha256", "checksum": "31f7249c221fb91f2e817637ea73a8005f7adde41ae07f0c93db296cf8c89681"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\smoking_status\\src_smoking_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4314475, "compiled_sql": "\n\nwith smoking_bp as (\n\nselect \nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\ncast(\"BP\" as STRING) AS SOURCE_SYSTEM,\ncast('SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP' as STRING) as SOURCE_TABLE,\nNULL AS PROVIDER_ID,\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\ncast(sssb.RECORD_STATUS as STRING) as RECORD_STATUS,\ncast(CASE \n\t\tWHEN sssb.SMOKING_CODE = 1\n\t\tTHEN 1\n\t\tWHEN sssb.SMOKING_CODE = 2\n\t\tTHEN 2\n\t\tWHEN sssb.SMOKING_CODE = 3\n\t\tTHEN 3\n\t\tELSE\n\t\t0\n\t\tEND as INT) as SMOKING_STATUS_CODE,\n\t\tcast(CASE \n\t\tWHEN sssb.SMOKING_CODE = 1\n\t\tTHEN 'Non-Smoker'\n\t\tWHEN sssb.SMOKING_CODE = 2\n\t\tTHEN 'Ex-Smoker'\n\t\tWHEN sssb.SMOKING_CODE = 3\n\t\tTHEN 'Smoker'\n\t\tELSE\n\t\t'Not Recorded'\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\ncast(sssb.PAST_SMOKING_CODE as int) AS PAST_SMOKING_CODE,\ncast(sssb.SMOKING_TYPE as int) as SMOKING_PRODUCT_TYPE,\ncast(sssb.YEAR_STARTED as STRING) as SMOKING_START_DATE,\ncast(sssb.PAST_STARTED as INT) as PAST_SMOKING_START_DATE,\ncast(NULL as STRING) as SMOKING_FREQUENCY,\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\ncast(NULL as STRING) as SMOKING_CEASED_DATE,\ncast(sssb.PAST_STOPPED as INT) as PAST_SMOKING_STOPPED_DATE,\ncast(NULL as STRING) AS SMOKING_ASSESSMENT_DATE, \ncast(NULL AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\ncast(NULL as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \ncast(NULL as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\ncast(NULL as STRING) as SMOKING_ABSTINENCE_UNIT , \ncast(NULL as STRING) as SMOKING_COMMENT, \ncast(sssb.created_datetime as timestamp) as CREATED_DATETIME,\ncast(sssb.updated_datetime as timestamp) as UPDATED_DATETIME,\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` hssb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` sssb\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = sssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` lssb\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = lssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` lsssb\non lssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK = lsssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from smoking_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_bp`"}, "model.nps_mi_2021.src_smoking_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith smoking_phc_bp as (\r\n\r\nselect \r\nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\r\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\r\ncast(\"PHC_BP\" as STRING) AS SOURCE_SYSTEM,\r\ncast('SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP' as STRING) as SOURCE_TABLE,\r\nNULL AS PROVIDER_ID,\r\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\r\ncast(sssb.RECORD_STATUS as STRING) as RECORD_STATUS,\r\ncast(CASE \r\n\t\tWHEN sssb.SMOKING_CODE = 1\r\n\t\tTHEN 1\r\n\t\tWHEN sssb.SMOKING_CODE = 2\r\n\t\tTHEN 2\r\n\t\tWHEN sssb.SMOKING_CODE = 3\r\n\t\tTHEN 3\r\n\t\tELSE\r\n\t\t0\r\n\t\tEND as INT) as SMOKING_STATUS_CODE,\r\n\t\tcast(CASE \r\n\t\tWHEN sssb.SMOKING_CODE = 1\r\n\t\tTHEN 'Non-Smoker'\r\n\t\tWHEN sssb.SMOKING_CODE = 2\r\n\t\tTHEN 'Ex-Smoker'\r\n\t\tWHEN sssb.SMOKING_CODE = 3\r\n\t\tTHEN 'Smoker'\r\n\t\tELSE\r\n\t\t'Not Recorded'\r\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\r\ncast(sssb.PAST_SMOKING_CODE as int) AS PAST_SMOKING_CODE,\r\ncast(sssb.SMOKING_TYPE as int) as SMOKING_PRODUCT_TYPE,\r\ncast(sssb.YEAR_STARTED as STRING) as SMOKING_START_DATE,\r\ncast(sssb.PAST_STARTED as INT) as PAST_SMOKING_START_DATE,\r\ncast(NULL as STRING) as SMOKING_FREQUENCY,\r\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\r\ncast(NULL as STRING) as SMOKING_CEASED_DATE,\r\ncast(sssb.PAST_STOPPED as INT) as PAST_SMOKING_STOPPED_DATE,\r\ncast(NULL as STRING) AS SMOKING_ASSESSMENT_DATE, \r\ncast(NULL AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\r\ncast(NULL as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \r\ncast(NULL as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\r\ncast(NULL as STRING) as SMOKING_ABSTINENCE_UNIT , \r\ncast(NULL as STRING) as SMOKING_COMMENT, \r\ncast(sssb.CREATED as timestamp) as CREATED_DATETIME,\r\ncast(sssb.UPDATED as timestamp) as UPDATED_DATETIME,\r\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\r\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\r\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\r\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\r\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\r\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\r\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\r\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \r\nfrom {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} hssb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP')}} sssb\r\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = sssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} lssb\r\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = lssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP')}} lsssb\r\non lssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK = lsssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hsp\r\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\r\ninner join\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} ssp\r\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\r\nWHERE\r\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from smoking_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "smoking_status", "src_smoking_phc_bp"], "unique_id": "model.nps_mi_2021.src_smoking_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\smoking_status\\src_smoking_phc_bp.sql", "original_file_path": "models\\source\\smoking_status\\src_smoking_phc_bp.sql", "name": "src_smoking_phc_bp", "alias": "src_smoking_phc_bp", "checksum": {"name": "sha256", "checksum": "a5ce55cb78a90b5c496f8820f7572d48885738e40125b9e64037e526f2b6dce2"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\smoking_status\\src_smoking_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4337077, "compiled_sql": "\n\nwith smoking_phc_bp as (\n\nselect \nCAST(lssb.HUB_SITE_PATIENT_SK AS STRING) AS PATIENT_NUMBER,\nCAST(hssb.SITE_ID AS STRING) AS SITE_ID,\ncast(\"PHC_BP\" as STRING) AS SOURCE_SYSTEM,\ncast('SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP' as STRING) as SOURCE_TABLE,\nNULL AS PROVIDER_ID,\ncast(hssb.RECORD_ID AS STRING) as RECORD_ID,\ncast(sssb.RECORD_STATUS as STRING) as RECORD_STATUS,\ncast(CASE \n\t\tWHEN sssb.SMOKING_CODE = 1\n\t\tTHEN 1\n\t\tWHEN sssb.SMOKING_CODE = 2\n\t\tTHEN 2\n\t\tWHEN sssb.SMOKING_CODE = 3\n\t\tTHEN 3\n\t\tELSE\n\t\t0\n\t\tEND as INT) as SMOKING_STATUS_CODE,\n\t\tcast(CASE \n\t\tWHEN sssb.SMOKING_CODE = 1\n\t\tTHEN 'Non-Smoker'\n\t\tWHEN sssb.SMOKING_CODE = 2\n\t\tTHEN 'Ex-Smoker'\n\t\tWHEN sssb.SMOKING_CODE = 3\n\t\tTHEN 'Smoker'\n\t\tELSE\n\t\t'Not Recorded'\n\t\tEND as STRING) as SMOKING_STATUS_NAME,\ncast(sssb.PAST_SMOKING_CODE as int) AS PAST_SMOKING_CODE,\ncast(sssb.SMOKING_TYPE as int) as SMOKING_PRODUCT_TYPE,\ncast(sssb.YEAR_STARTED as STRING) as SMOKING_START_DATE,\ncast(sssb.PAST_STARTED as INT) as PAST_SMOKING_START_DATE,\ncast(NULL as STRING) as SMOKING_FREQUENCY,\ncast(sssb.SMOKES_PER_DAY as int) as SMOKES_PER_DAY,\ncast(NULL as STRING) as SMOKING_CEASED_DATE,\ncast(sssb.PAST_STOPPED as INT) as PAST_SMOKING_STOPPED_DATE,\ncast(NULL as STRING) AS SMOKING_ASSESSMENT_DATE, \ncast(NULL AS STRING) as SMOKING_CHANGE_STAGE_ASSESSMENT,\ncast(NULL as STRING) AS SMOKING_LAST_QUIT_ATTEMPT_DATE, \ncast(NULL as STRING) as SMOKING_LONGEST_ABSTINENCE_DURATION,\ncast(NULL as STRING) as SMOKING_ABSTINENCE_UNIT , \ncast(NULL as STRING) as SMOKING_COMMENT, \ncast(sssb.CREATED as timestamp) as CREATED_DATETIME,\ncast(sssb.UPDATED as timestamp) as UPDATED_DATETIME,\nCAST(sssb.OMD_EFFECTIVE_DATETIME AS TIMESTAMP) AS OMD_EFFECTIVE_DATETIME,\nCAST(sssb.OMD_SOURCE_ROW_ID AS INT) AS OMD_SOURCE_ROW_ID,\nCAST(sssb.OMD_INSERT_MODULE_INSTANCE_ID AS INT) AS OMD_INSERT_MODULE_INSTANCE_ID,\nCAST(sssb.OMD_EXPIRY_DATETIME AS TIMESTAMP) AS OMD_EXPIRY_DATETIME,\nCAST(sssb.OMD_CURRENT_RECORD_INDICATOR AS STRING) AS OMD_CURRENT_RECORD_INDICATOR,\nCAST(sssb.OMD_DELETED_RECORD_INDICATOR AS STRING) AS OMD_DELETED_RECORD_INDICATOR,\nCAST(sssb.OMD_RECORD_SOURCE_ID AS INT) AS OMD_RECORD_SOURCE_ID,\nCAST(sssb.OMD_HASH_FULL_RECORD AS STRING) AS OMD_HASH_FULL_RECORD \nfrom `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` hssb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP` sssb\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = sssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` lssb\non hssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK = lssb.HUB_SITE_PATIENT_SMOKING_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP` lsssb\non lssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK = lsssb.LNK_SITE_PATIENT_SMOKING_STATUS_BP_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hsp\nON lssb.HUB_SITE_PATIENT_SK = hsp.HUB_SITE_PATIENT_SK\ninner join\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` ssp\nON hsp.HUB_SITE_PATIENT_SK = ssp.HUB_SITE_PATIENT_SK\nWHERE\n\tsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND lsssb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsssb.OMD_DELETED_RECORD_INDICATOR = 'N'\n\tAND ssp.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND ssp.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from smoking_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_smoking_phc_bp`"}, "model.nps_mi_2021.src_clinical_user_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith clinical_user_phc_bp as (\r\nselect \r\ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PROVIDER_ID,\r\ncast(sspb.PRESCRIBER_NO as string) as PRESCRIBER_NUMBER,\r\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(\"PHC_BP\" as string) as SOURCE_SYSTEM,\r\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\r\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\r\ncast(NULL as string) as DOCTOR_INDICATOR,\r\ncast(NULL as string) as NURSE_INDICATOR,\r\ncast(NULL as string) as PROVIDER_CIS_STATUS,\r\ncast(NULL as string) as PROVIDER_WORK_STATUS,\r\ncast(sspb.INACTIVE_DATE as string) as PROVIDER_INACTIVE_DATE,\r\ncast(sspb.CREATED as string) as CREATE_DATETTIME,\r\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\r\ncast(sspb.UPDATED as string) as PROVIDER_UPDATED_DATETIME,\r\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\r\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_BP_OMOP')}} llsp \r\non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_PHC_BP_OMOP')}} sspb \r\non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK \r\nwhere \r\n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\n\r\nselect * from clinical_user_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "clinical_user", "src_clinical_user_phc_bp"], "unique_id": "model.nps_mi_2021.src_clinical_user_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\clinical_user\\src_clinical_user_phc_bp.sql", "original_file_path": "models\\source\\clinical_user\\src_clinical_user_phc_bp.sql", "name": "src_clinical_user_phc_bp", "alias": "src_clinical_user_phc_bp", "checksum": {"name": "sha256", "checksum": "b230ee6d7410dc9a33aee9203d2b2e5a4c973fd455baec0a748020aeb965c288"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\clinical_user\\src_clinical_user_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4357092, "compiled_sql": "\n\nwith clinical_user_phc_bp as (\nselect \ncast(hpo.OMD_NPS_SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PROVIDER_ID,\ncast(sspb.PRESCRIBER_NO as string) as PRESCRIBER_NUMBER,\ncast(hpo.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(\"PHC_BP\" as string) as SOURCE_SYSTEM,\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\ncast(NULL as string) as DOCTOR_INDICATOR,\ncast(NULL as string) as NURSE_INDICATOR,\ncast(NULL as string) as PROVIDER_CIS_STATUS,\ncast(NULL as string) as PROVIDER_WORK_STATUS,\ncast(sspb.INACTIVE_DATE as string) as PROVIDER_INACTIVE_DATE,\ncast(sspb.CREATED as string) as CREATE_DATETTIME,\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\ncast(sspb.UPDATED as string) as PROVIDER_UPDATED_DATETIME,\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP` llsp \non hpo.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_BP_OMOP` sspb \non llsp.HUB_LOGIN_SK = sspb.HUB_LOGIN_SK \nwhere \n\tsspb.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspb.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\n\nselect * from clinical_user_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_phc_bp`"}, "model.nps_mi_2021.PRACTICE_CONTACT": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_practice_contact as\r\n(\r\nselect * from {{ref('src_practice_contact_bp')}}\r\nUNION all\r\nselect * from {{ref('src_practice_contact_md')}}\r\nUNION all\r\nselect * from {{ref('src_practice_contact_phc_bp')}}\r\nUNION all\r\nselect * from {{ref('src_practice_contact_phc_md')}}\r\n)\r\nselect * from source_practice_contact", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_practice_contact_bp", "model.nps_mi_2021.src_practice_contact_md", "model.nps_mi_2021.src_practice_contact_phc_bp", "model.nps_mi_2021.src_practice_contact_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "practice_contact", "PRACTICE_CONTACT"], "unique_id": "model.nps_mi_2021.PRACTICE_CONTACT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\practice_contact\\PRACTICE_CONTACT.sql", "original_file_path": "models\\staging\\practice_contact\\PRACTICE_CONTACT.sql", "name": "PRACTICE_CONTACT", "alias": "PRACTICE_CONTACT", "checksum": {"name": "sha256", "checksum": "8d5dd127234f57a14461719e899eb9a6731977a44f35e5d02a2d86054ceeddc5"}, "tags": [], "refs": [["src_practice_contact_bp"], ["src_practice_contact_md"], ["src_practice_contact_phc_bp"], ["src_practice_contact_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\practice_contact\\PRACTICE_CONTACT.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4377122, "compiled_sql": "\n\nwith source_practice_contact as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_md`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_phc_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_phc_md`\n)\nselect * from source_practice_contact", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_CONTACT`"}, "model.nps_mi_2021.src_practice_contact_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nSELECT\r\ncast(hubb.OMD_NPS_SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PRACTICE_NAME,\r\ncast(NULL as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(hubb.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(NULL as string) as CRM_CONTACT_ID,\r\ncast(NULL as string) as CONTACT_SALUTATION,\r\ncast(satt.PRACTICE_PROVIDER_FIRST_NAME as string) as CONTACT_FIRSTNAME,\r\ncast(satt.PRACTICE_PROVIDER_SURNAME as string) as CONTACT_LASTNAME,\r\ncast(NULL as string) as CONTACT_NPS_ROLE,\r\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hubb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_BP_OMOP')}} llsp \r\non hubb.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_BP_OMOP')}} satt\r\non llsp.HUB_LOGIN_SK = satt.HUB_LOGIN_SK\r\nwhere \r\n\tsatt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "practice_contact", "src_practice_contact_bp"], "unique_id": "model.nps_mi_2021.src_practice_contact_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\practice_contact\\src_practice_contact_bp.sql", "original_file_path": "models\\source\\practice_contact\\src_practice_contact_bp.sql", "name": "src_practice_contact_bp", "alias": "src_practice_contact_bp", "checksum": {"name": "sha256", "checksum": "0e46fac091c268c52ea73aa7b0ed7b4346c9917d4dd7ad7179e7807f7d2e6dd7"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\practice_contact\\src_practice_contact_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4397106, "compiled_sql": "\n\nSELECT\ncast(hubb.OMD_NPS_SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PRACTICE_NAME,\ncast(NULL as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(hubb.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(NULL as string) as CRM_CONTACT_ID,\ncast(NULL as string) as CONTACT_SALUTATION,\ncast(satt.PRACTICE_PROVIDER_FIRST_NAME as string) as CONTACT_FIRSTNAME,\ncast(satt.PRACTICE_PROVIDER_SURNAME as string) as CONTACT_LASTNAME,\ncast(NULL as string) as CONTACT_NPS_ROLE,\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hubb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP` llsp \non hubb.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_BP_OMOP` satt\non llsp.HUB_LOGIN_SK = satt.HUB_LOGIN_SK\nwhere \n\tsatt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_bp`"}, "model.nps_mi_2021.src_practice_contact_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nSELECT\r\ncast(hpo.SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PRACTICE_NAME,\r\ncast(hpo.PRACTITIONER_ID as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(hubb.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(NULL as string) as CRM_CONTACT_ID,\r\ncast(NULL as string) as CONTACT_SALUTATION,\r\ncast(NULL as string) as CONTACT_FIRSTNAME,\r\ncast(NULL as string) as CONTACT_LASTNAME,\r\ncast(NULL as string) as CONTACT_NPS_ROLE,\r\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PROVIDER_MD_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_MD_OMOP')}} llsp \r\non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hubb\r\non llsp.HUB_LOGIN_SK = llsp.HUB_LOGIN_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_MD_OMOP')}} sspm \r\non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\r\nwhere \r\n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "practice_contact", "src_practice_contact_md"], "unique_id": "model.nps_mi_2021.src_practice_contact_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\practice_contact\\src_practice_contact_md.sql", "original_file_path": "models\\source\\practice_contact\\src_practice_contact_md.sql", "name": "src_practice_contact_md", "alias": "src_practice_contact_md", "checksum": {"name": "sha256", "checksum": "052c09cf2d504cc492477c4abe44d5188826ea847a217b0d662b8670c0f0553b"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\practice_contact\\src_practice_contact_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4417138, "compiled_sql": "\n\nSELECT\ncast(hpo.SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PRACTICE_NAME,\ncast(hpo.PRACTITIONER_ID as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(hubb.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(NULL as string) as CRM_CONTACT_ID,\ncast(NULL as string) as CONTACT_SALUTATION,\ncast(NULL as string) as CONTACT_FIRSTNAME,\ncast(NULL as string) as CONTACT_LASTNAME,\ncast(NULL as string) as CONTACT_NPS_ROLE,\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP` llsp \non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hubb\non llsp.HUB_LOGIN_SK = llsp.HUB_LOGIN_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_MD_OMOP` sspm \non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\nwhere \n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_md`"}, "model.nps_mi_2021.src_practice_contact_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nSELECT\r\ncast(hubb.OMD_NPS_SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PRACTICE_NAME,\r\ncast(NULL as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(hubb.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\r\ncast(NULL as string) as CRM_CONTACT_ID,\r\ncast(NULL as string) as CONTACT_SALUTATION,\r\ncast(satt.FIRST_NAME as string) as CONTACT_FIRSTNAME,\r\ncast(satt.SURNAME as string) as CONTACT_LASTNAME,\r\ncast(NULL as string) as CONTACT_NPS_ROLE,\r\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_PROVIDER_OMOP')}} hubb\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_BP_OMOP')}} llsp \r\non hubb.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_PHC_BP_OMOP')}} satt\r\non llsp.HUB_LOGIN_SK = satt.HUB_LOGIN_SK\r\nwhere \r\n\tsatt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "practice_contact", "src_practice_contact_phc_bp"], "unique_id": "model.nps_mi_2021.src_practice_contact_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\practice_contact\\src_practice_contact_phc_bp.sql", "original_file_path": "models\\source\\practice_contact\\src_practice_contact_phc_bp.sql", "name": "src_practice_contact_phc_bp", "alias": "src_practice_contact_phc_bp", "checksum": {"name": "sha256", "checksum": "c2fba1841508334b8542d4487f75fc0494144d8a520afe046fa06efd7ad57eaf"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\practice_contact\\src_practice_contact_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4449787, "compiled_sql": "\n\nSELECT\ncast(hubb.OMD_NPS_SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PRACTICE_NAME,\ncast(NULL as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(hubb.PROVIDER_NUMBER as string) as PROVIDER_NUMBER,\ncast(NULL as string) as CRM_CONTACT_ID,\ncast(NULL as string) as CONTACT_SALUTATION,\ncast(satt.FIRST_NAME as string) as CONTACT_FIRSTNAME,\ncast(satt.SURNAME as string) as CONTACT_LASTNAME,\ncast(NULL as string) as CONTACT_NPS_ROLE,\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP` hubb\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP` llsp \non hubb.HUB_PROVIDER_SK = llsp.HUB_PROVIDER_SK \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_BP_OMOP` satt\non llsp.HUB_LOGIN_SK = satt.HUB_LOGIN_SK\nwhere \n\tsatt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_phc_bp`"}, "model.nps_mi_2021.src_clinical_user_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith clinical_user_phc_md as (\r\nselect \r\ncast(hpo.SITE_ID as string) as SITE_ID,\r\ncast(hpo.PRACTITIONER_ID  as string) as PROVIDER_ID,\r\ncast(sspm.PRESCRIBER_NO as string) as PRESCRIBER_NUMBER,\r\ncast(sspm.PROVIDER_NO as string) as PROVIDER_NUMBER,\r\ncast(\"PHC_MD\" as string) as SOURCE_SYSTEM,\r\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\r\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\r\ncast(NULL as string) as DOCTOR_INDICATOR,\r\ncast(NULL as string) as NURSE_INDICATOR,\r\ncast(NULL as string) as PROVIDER_CIS_STATUS,\r\ncast(NULL as string) as PROVIDER_WORK_STATUS,\r\ncast(null as string) as PROVIDER_INACTIVE_DATE,\r\ncast(sspm.STAMP_CREATED_DATETIME as string) as CREATE_DATETTIME,\r\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\r\ncast(null as string) as PROVIDER_UPDATED_DATETIME,\r\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\r\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PROVIDER_MD_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_MD_OMOP')}} llsp \r\non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_PHC_MD_OMOP')}} sspm \r\non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\r\nwhere \r\n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\n\r\nselect * from clinical_user_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "clinical_user", "src_clinical_user_phc_md"], "unique_id": "model.nps_mi_2021.src_clinical_user_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\clinical_user\\src_clinical_user_phc_md.sql", "original_file_path": "models\\source\\clinical_user\\src_clinical_user_phc_md.sql", "name": "src_clinical_user_phc_md", "alias": "src_clinical_user_phc_md", "checksum": {"name": "sha256", "checksum": "359eb4591509cafd9f9adc8809aa01793a4566970f33ee0fd07f02c7fc977e06"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\clinical_user\\src_clinical_user_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4469786, "compiled_sql": "\n\nwith clinical_user_phc_md as (\nselect \ncast(hpo.SITE_ID as string) as SITE_ID,\ncast(hpo.PRACTITIONER_ID  as string) as PROVIDER_ID,\ncast(sspm.PRESCRIBER_NO as string) as PRESCRIBER_NUMBER,\ncast(sspm.PROVIDER_NO as string) as PROVIDER_NUMBER,\ncast(\"PHC_MD\" as string) as SOURCE_SYSTEM,\ncast(null as int) as CLINICAL_USER_TYPE_CODE,\ncast(NULL as string) as CLINICAL_USER_TYPE_NAME,\ncast(NULL as string) as DOCTOR_INDICATOR,\ncast(NULL as string) as NURSE_INDICATOR,\ncast(NULL as string) as PROVIDER_CIS_STATUS,\ncast(NULL as string) as PROVIDER_WORK_STATUS,\ncast(null as string) as PROVIDER_INACTIVE_DATE,\ncast(sspm.STAMP_CREATED_DATETIME as string) as CREATE_DATETTIME,\ncast(NULL as string) as PROVIDER_UPDATED_USER_ID,\ncast(null as string) as PROVIDER_UPDATED_DATETIME,\ncast(NULL as string) as PRESCRIBER_NUMBER_VALID_FLAG,\ncast(NULL as string) as PROVIDER_NUMBER_VALID_FLAG\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP` llsp \non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_MD_OMOP` sspm \non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\nwhere \n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\n\nselect * from clinical_user_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_clinical_user_phc_md`"}, "model.nps_mi_2021.src_practice_contact_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nSELECT\r\ncast(hpo.SITE_ID as string) as SITE_ID,\r\ncast(NULL as string) as PRACTICE_NAME,\r\ncast(hpo.PRACTITIONER_ID as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(sspm.PROVIDER_NO as string) as PROVIDER_NUMBER,\r\ncast(NULL as string) as CRM_CONTACT_ID,\r\ncast(NULL as string) as CONTACT_SALUTATION,\r\ncast(NULL as string) as CONTACT_FIRSTNAME,\r\ncast(NULL as string) as CONTACT_LASTNAME,\r\ncast(NULL as string) as CONTACT_NPS_ROLE,\r\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PROVIDER_MD_OMOP')}} hpo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_LOGIN_SITE_PROVIDER_MD_OMOP')}} llsp \r\non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PROVIDER_PHC_MD_OMOP')}} sspm \r\non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\r\nwhere \r\n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "practice_contact", "src_practice_contact_phc_md"], "unique_id": "model.nps_mi_2021.src_practice_contact_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\practice_contact\\src_practice_contact_phc_md.sql", "original_file_path": "models\\source\\practice_contact\\src_practice_contact_phc_md.sql", "name": "src_practice_contact_phc_md", "alias": "src_practice_contact_phc_md", "checksum": {"name": "sha256", "checksum": "c752ab1db5da68ac9c1ede7930385f652caf66f1148e9418427cf30d84be0286"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\practice_contact\\src_practice_contact_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4489858, "compiled_sql": "\n\nSELECT\ncast(hpo.SITE_ID as string) as SITE_ID,\ncast(NULL as string) as PRACTICE_NAME,\ncast(hpo.PRACTITIONER_ID as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(sspm.PROVIDER_NO as string) as PROVIDER_NUMBER,\ncast(NULL as string) as CRM_CONTACT_ID,\ncast(NULL as string) as CONTACT_SALUTATION,\ncast(NULL as string) as CONTACT_FIRSTNAME,\ncast(NULL as string) as CONTACT_LASTNAME,\ncast(NULL as string) as CONTACT_NPS_ROLE,\ncast(NULL as string) as CONTACT_MEDICINEINSIGHT_ROLE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP` hpo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP` llsp \non hpo.HUB_SITE_PROVIDER_MD_SK = llsp.HUB_SITE_PROVIDER_MD_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_MD_OMOP` sspm \non llsp.HUB_SITE_PROVIDER_MD_SK = sspm.HUB_SITE_PROVIDER_MD_SK\nwhere \n\tsspm.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sspm.OMD_DELETED_RECORD_INDICATOR = 'N'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_practice_contact_phc_md`"}, "model.nps_mi_2021.PATHOLOGY_ALBUMIN": {"raw_sql": "{{config(materialized='table')}}\r\n\r\n\r\nwith pathology_albumin as (\r\n\r\nselect\r\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\r\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\r\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\r\ncast(sbpa.PATHOLOGY_TEST_DATETIME as STRING) as PATHOLOGY_TEST_DATETIME,\r\ncast(sbpa.PATHOLOGY_TEST_TYPE as STRING) as PATHOLOGY_TEST_TYPE,\r\ncast(sbpa.LOINC_CODE as STRING) AS LOINC_CODE,\r\ncast(sbpa.LOINC_CODE_VALID_INDICATOR as STRING) as LOINC_CODE_VALID_INDICATOR,\r\ncast(sbpa.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\r\ncast(sbpa.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\r\ncast(sbpa.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\r\ncast(sbpa.DETECTED_CIS_UNIT_OF_MEASURE as STRING) as DETECTED_CIS_UNIT_OF_MEASURE,\r\ncast(sbpa.RESULT_UNIT_OF_MEASURE_STND as STRING) as RESULT_UNIT_OF_MEASURE_STND,\r\ncast(sbpa.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\r\ncast(sbpa.RESULT_VALID_RANGE_INDICATOR as STRING) as RESULT_VALID_RANGE_INDICATOR,\r\ncast(sbpa.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\r\ncast(sbpa.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\r\ncast(sbpa.RESULT_IMPORT_INDICATOR as STRING) as RESULT_IMPORT_INDICATOR,\r\ncast(sbpa.RESULT_HEADER_ONLY_INDICATOR as STRING) as RESULT_HEADER_ONLY_INDICATOR,\r\ncast(sbpa.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\r\ncast('<34 mg/mmol' as STRING) AS ALBUMIN_ACR_RESULT_VALUE_RANGE,\r\ncast('<30 mg/g' as STRING) AS ALBUMIN_CONCENTRATION_RESULT_VALUE_RANGE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BDV_PATHOLOGY_OMOP')}} hbpo\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_PATHOLOGY_ALBUMIN_OMOP')}} sbpa\r\non hbpo.HUB_BDV_PATHOLOGY_SK = sbpa.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATHOLOGY_OMOP')}} lbpa\r\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATHOLOGY_OMOP')}} lsbpa\r\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\r\nWHERE \r\n\tsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_albumin", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_ALBUMIN_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "pathology_albumin", "PATHOLOGY_ALBUMIN"], "unique_id": "model.nps_mi_2021.PATHOLOGY_ALBUMIN", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\pathology_albumin\\PATHOLOGY_ALBUMIN.sql", "original_file_path": "models\\staging\\pathology_albumin\\PATHOLOGY_ALBUMIN.sql", "name": "PATHOLOGY_ALBUMIN", "alias": "PATHOLOGY_ALBUMIN", "checksum": {"name": "sha256", "checksum": "6ea68ef3d2323dd8647819d10ae61e037182d6908a1e9fa6530be777e0e8f43f"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_ALBUMIN_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_PATHOLOGY_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\pathology_albumin\\PATHOLOGY_ALBUMIN.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4509783, "compiled_sql": "\n\n\nwith pathology_albumin as (\n\nselect\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\ncast(sbpa.PATHOLOGY_TEST_DATETIME as STRING) as PATHOLOGY_TEST_DATETIME,\ncast(sbpa.PATHOLOGY_TEST_TYPE as STRING) as PATHOLOGY_TEST_TYPE,\ncast(sbpa.LOINC_CODE as STRING) AS LOINC_CODE,\ncast(sbpa.LOINC_CODE_VALID_INDICATOR as STRING) as LOINC_CODE_VALID_INDICATOR,\ncast(sbpa.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\ncast(sbpa.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\ncast(sbpa.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\ncast(sbpa.DETECTED_CIS_UNIT_OF_MEASURE as STRING) as DETECTED_CIS_UNIT_OF_MEASURE,\ncast(sbpa.RESULT_UNIT_OF_MEASURE_STND as STRING) as RESULT_UNIT_OF_MEASURE_STND,\ncast(sbpa.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\ncast(sbpa.RESULT_VALID_RANGE_INDICATOR as STRING) as RESULT_VALID_RANGE_INDICATOR,\ncast(sbpa.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\ncast(sbpa.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\ncast(sbpa.RESULT_IMPORT_INDICATOR as STRING) as RESULT_IMPORT_INDICATOR,\ncast(sbpa.RESULT_HEADER_ONLY_INDICATOR as STRING) as RESULT_HEADER_ONLY_INDICATOR,\ncast(sbpa.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\ncast('<34 mg/mmol' as STRING) AS ALBUMIN_ACR_RESULT_VALUE_RANGE,\ncast('<30 mg/g' as STRING) AS ALBUMIN_CONCENTRATION_RESULT_VALUE_RANGE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_PATHOLOGY_OMOP` hbpo\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_ALBUMIN_OMOP` sbpa\non hbpo.HUB_BDV_PATHOLOGY_SK = sbpa.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATHOLOGY_OMOP` lbpa\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATHOLOGY_OMOP` lsbpa\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\nWHERE \n\tsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_albumin", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_ALBUMIN`"}, "model.nps_mi_2021.PATHOLOGY_EGFR": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith pathology_gfr as (\r\n    \r\nselect \r\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\r\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\r\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\r\ncast(sbpg.PATHOLOGY_TEST_DATETIME as TIMESTAMP) AS PATHOLOGY_TEST_DATETIME,\r\ncast(sbpg.PATHOLOGY_TEST_TYPE as STRING) AS PATHOLOGY_TEST_TYPE,\r\ncast(sbpg.LOINC_CODE as STRING) AS LOINC_CODE,\r\ncast(sbpg.LOINC_CODE_VALID_INDICATOR as STRING) AS LOINC_CODE_VALID_INDICATOR,\r\ncast(sbpg.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\r\ncast(sbpg.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\r\ncast(sbpg.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\r\ncast(sbpg.DETECTED_CIS_UNIT_OF_MEASURE as STRING) AS DETECTED_CIS_UNIT_OF_MEASURE,\r\ncast(sbpg.RESULT_UNIT_OF_MEASURE_STND as STRING) AS RESULT_UNIT_OF_MEASURE_STND,\r\ncast(sbpg.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\r\ncast(sbpg.RESULT_VALID_RANGE_INDICATOR as STRING) AS RESULT_VALID_RANGE_INDICATOR,\r\ncast(sbpg.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\r\ncast(sbpg.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\r\ncast(sbpg.RESULT_IMPORT_INDICATOR as STRING) AS RESULT_IMPORT_INDICATOR,\r\ncast(sbpg.RESULT_HEADER_ONLY_INDICATOR as STRING) AS RESULT_HEADER_ONLY_INDICATOR,\r\ncast(sbpg.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\r\ncast('90-120 mL/min/1.73 m2' as STRING) AS GFR_EGFR_RESULT_VALUE_RANGE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BDV_PATHOLOGY_OMOP')}} hbpo\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_PATHOLOGY_GFR_OMOP')}} sbpg\r\non hbpo.HUB_BDV_PATHOLOGY_SK = sbpg.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATHOLOGY_OMOP')}} lbpa\r\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATHOLOGY_OMOP')}} lsbpa\r\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\r\nWHERE \r\n\tsbpg.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbpg.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_gfr", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_GFR_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "pathology_gfr", "PATHOLOGY_EGFR"], "unique_id": "model.nps_mi_2021.PATHOLOGY_EGFR", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\pathology_gfr\\PATHOLOGY_EGFR.sql", "original_file_path": "models\\staging\\pathology_gfr\\PATHOLOGY_EGFR.sql", "name": "PATHOLOGY_EGFR", "alias": "PATHOLOGY_EGFR", "checksum": {"name": "sha256", "checksum": "f04beca56087a298a130685c955c5e692ea2c4178ebc2d06d50f0cbebb25cea6"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_GFR_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_PATHOLOGY_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\pathology_gfr\\PATHOLOGY_EGFR.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.453138, "compiled_sql": "\n\nwith pathology_gfr as (\n    \nselect \ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\ncast(sbpg.PATHOLOGY_TEST_DATETIME as TIMESTAMP) AS PATHOLOGY_TEST_DATETIME,\ncast(sbpg.PATHOLOGY_TEST_TYPE as STRING) AS PATHOLOGY_TEST_TYPE,\ncast(sbpg.LOINC_CODE as STRING) AS LOINC_CODE,\ncast(sbpg.LOINC_CODE_VALID_INDICATOR as STRING) AS LOINC_CODE_VALID_INDICATOR,\ncast(sbpg.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\ncast(sbpg.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\ncast(sbpg.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\ncast(sbpg.DETECTED_CIS_UNIT_OF_MEASURE as STRING) AS DETECTED_CIS_UNIT_OF_MEASURE,\ncast(sbpg.RESULT_UNIT_OF_MEASURE_STND as STRING) AS RESULT_UNIT_OF_MEASURE_STND,\ncast(sbpg.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\ncast(sbpg.RESULT_VALID_RANGE_INDICATOR as STRING) AS RESULT_VALID_RANGE_INDICATOR,\ncast(sbpg.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\ncast(sbpg.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\ncast(sbpg.RESULT_IMPORT_INDICATOR as STRING) AS RESULT_IMPORT_INDICATOR,\ncast(sbpg.RESULT_HEADER_ONLY_INDICATOR as STRING) AS RESULT_HEADER_ONLY_INDICATOR,\ncast(sbpg.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\ncast('90-120 mL/min/1.73 m2' as STRING) AS GFR_EGFR_RESULT_VALUE_RANGE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_PATHOLOGY_OMOP` hbpo\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_GFR_OMOP` sbpg\non hbpo.HUB_BDV_PATHOLOGY_SK = sbpg.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATHOLOGY_OMOP` lbpa\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATHOLOGY_OMOP` lsbpa\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\nWHERE \n\tsbpg.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbpg.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_gfr", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_EGFR`"}, "model.nps_mi_2021.PATHOLOGY_HBA1C": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith pathology_hba1c as (\r\nselect\r\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\r\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\r\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\r\ncast(sbph.PATHOLOGY_TEST_DATETIME as TIMESTAMP) AS PATHOLOGY_TEST_DATETIME,\r\ncast(sbph.PATHOLOGY_TEST_TYPE as STRING) AS PATHOLOGY_TEST_TYPE,\r\ncast(sbph.LOINC_CODE as STRING) AS LOINC_CODE,\r\ncast(sbph.LOINC_CODE_VALID_INDICATOR as STRING) AS LOINC_CODE_VALID_INDICATOR,\r\ncast(sbph.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\r\ncast(sbph.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\r\ncast(sbph.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\r\ncast(sbph.DETECTED_CIS_UNIT_OF_MEASURE as STRING) AS DETECTED_CIS_UNIT_OF_MEASURE,\r\ncast(sbph.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\r\ncast(sbph.RESULT_VALID_RANGE_INDICATOR as STRING) AS RESULT_VALID_RANGE_INDICATOR,\r\ncast(sbph.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\r\ncast(sbph.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\r\ncast(sbph.RESULT_IMPORT_INDICATOR as STRING) AS RESULT_IMPORT_INDICATOR,\r\ncast(sbph.RESULT_HEADER_ONLY_INDICATOR as STRING) AS RESULT_HEADER_ONLY_INDICATOR,\r\ncast(sbph.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\r\ncast('<48 mmol/mol' as STRING) AS HBA1C_RANGE_AIHW\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BDV_PATHOLOGY_OMOP')}} hbpo\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_PATHOLOGY_HBA1C_OMOP')}} sbph \r\non hbpo.HUB_BDV_PATHOLOGY_SK = sbph.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATHOLOGY_OMOP')}} lbpa\r\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATHOLOGY_OMOP')}} lsbpa\r\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\r\nWHERE \r\n\tsbph.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbph.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\nselect * from pathology_hba1c", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_HBA1C_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "pathology_hba1c", "PATHOLOGY_HBA1C"], "unique_id": "model.nps_mi_2021.PATHOLOGY_HBA1C", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\pathology_hba1c\\PATHOLOGY_HBA1C.sql", "original_file_path": "models\\staging\\pathology_hba1c\\PATHOLOGY_HBA1C.sql", "name": "PATHOLOGY_HBA1C", "alias": "PATHOLOGY_HBA1C", "checksum": {"name": "sha256", "checksum": "90b2128cc1f0bc563dab68901c3b773fd68ff0d031bfec83b3936fbe962beecf"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_HBA1C_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_PATHOLOGY_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\pathology_hba1c\\PATHOLOGY_HBA1C.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4551816, "compiled_sql": "\n\nwith pathology_hba1c as (\nselect\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\ncast(sbph.PATHOLOGY_TEST_DATETIME as TIMESTAMP) AS PATHOLOGY_TEST_DATETIME,\ncast(sbph.PATHOLOGY_TEST_TYPE as STRING) AS PATHOLOGY_TEST_TYPE,\ncast(sbph.LOINC_CODE as STRING) AS LOINC_CODE,\ncast(sbph.LOINC_CODE_VALID_INDICATOR as STRING) AS LOINC_CODE_VALID_INDICATOR,\ncast(sbph.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\ncast(sbph.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\ncast(sbph.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\ncast(sbph.DETECTED_CIS_UNIT_OF_MEASURE as STRING) AS DETECTED_CIS_UNIT_OF_MEASURE,\ncast(sbph.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\ncast(sbph.RESULT_VALID_RANGE_INDICATOR as STRING) AS RESULT_VALID_RANGE_INDICATOR,\ncast(sbph.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\ncast(sbph.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\ncast(sbph.RESULT_IMPORT_INDICATOR as STRING) AS RESULT_IMPORT_INDICATOR,\ncast(sbph.RESULT_HEADER_ONLY_INDICATOR as STRING) AS RESULT_HEADER_ONLY_INDICATOR,\ncast(sbph.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\ncast('<48 mmol/mol' as STRING) AS HBA1C_RANGE_AIHW\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_PATHOLOGY_OMOP` hbpo\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_HBA1C_OMOP` sbph \non hbpo.HUB_BDV_PATHOLOGY_SK = sbph.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATHOLOGY_OMOP` lbpa\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATHOLOGY_OMOP` lsbpa\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\nWHERE \n\tsbph.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbph.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\nselect * from pathology_hba1c", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_HBA1C`"}, "model.nps_mi_2021.PATHOLOGY_LIPIDS": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith pathology_lipids as (\r\nselect\r\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\r\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\r\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\r\ncast(sbpl.PATHOLOGY_TEST_DATETIME as TIMESTAMP) AS PATHOLOGY_TEST_DATETIME,\r\ncast(sbpl.PATHOLOGY_TEST_TYPE as STRING) AS PATHOLOGY_TEST_TYPE,\r\ncast(sbpl.LOINC_CODE as STRING) AS LOINC_CODE,\r\ncast(sbpl.LOINC_CODE_VALID_INDICATOR as STRING) AS LOINC_CODE_VALID_INDICATOR,\r\ncast(sbpl.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\r\ncast(sbpl.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\r\ncast(sbpl.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\r\ncast(sbpl.DETECTED_CIS_UNIT_OF_MEASURE as STRING) AS DETECTED_CIS_UNIT_OF_MEASURE,\r\ncast(sbpl.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\r\ncast(sbpl.RESULT_VALID_RANGE_INDICATOR as STRING) AS RESULT_VALID_RANGE_INDICATOR,\r\ncast(sbpl.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\r\ncast(sbpl.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\r\ncast(sbpl.RESULT_IMPORT_INDICATOR as STRING) AS RESULT_IMPORT_INDICATOR,\r\ncast(sbpl.RESULT_HEADER_ONLY_INDICATOR as STRING) AS RESULT_HEADER_ONLY_INDICATOR,\r\ncast(sbpl.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\r\ncast('<4.0mmol/L' as STRING) AS LIPIDS_TOTAL_CHOLESTEROL_RESULT_VALUE_RANGE,\r\ncast('>1.0mmol/L' as STRING) AS LIPIDS_HDL_RESULT_VALUE_RANGE,\r\ncast('<2.0mmol/L' as STRING) AS LIPIDS_LDL_RESULT_VALUE_RANGE,\r\ncast('<2.0mmol/L' as STRING) AS LIPIDS_TRIGLYCERIDES_RESULT_VALUE_RANGE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_BDV_PATHOLOGY_OMOP')}} hbpo\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_PATHOLOGY_LIPIDS_OMOP')}} sbpl\r\non hbpo.HUB_BDV_PATHOLOGY_SK = sbpl.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LNK_BDV_PATHOLOGY_OMOP')}} lbpa\r\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','LSAT_BDV_PATHOLOGY_OMOP')}} lsbpa\r\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\r\nWHERE \r\n\tsbpl.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND sbpl.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from pathology_lipids", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_LIPIDS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "pathology_lipids", "PATHOLOGY_LIPIDS"], "unique_id": "model.nps_mi_2021.PATHOLOGY_LIPIDS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\pathology_lipids\\PATHOLOGY_LIPIDS.sql", "original_file_path": "models\\staging\\pathology_lipids\\PATHOLOGY_LIPIDS.sql", "name": "PATHOLOGY_LIPIDS", "alias": "PATHOLOGY_LIPIDS", "checksum": {"name": "sha256", "checksum": "fb91e1fb5646b65782b444038ff0d874eba5a1630ad80d41f546220339039f77"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATHOLOGY_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_LIPIDS_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_PATHOLOGY_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\pathology_lipids\\PATHOLOGY_LIPIDS.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4571815, "compiled_sql": "\n\nwith pathology_lipids as (\nselect\ncast(lbpa.HUB_SITE_PATIENT_SK as STRING) as PATIENT_NUMBER,\ncast(hbpo.SITE_ID as STRING) as SITE_ID,\ncast(hbpo.PATHOLOGY_ID AS STRING) as PATHOLOGY_ID,\ncast(sbpl.PATHOLOGY_TEST_DATETIME as TIMESTAMP) AS PATHOLOGY_TEST_DATETIME,\ncast(sbpl.PATHOLOGY_TEST_TYPE as STRING) AS PATHOLOGY_TEST_TYPE,\ncast(sbpl.LOINC_CODE as STRING) AS LOINC_CODE,\ncast(sbpl.LOINC_CODE_VALID_INDICATOR as STRING) AS LOINC_CODE_VALID_INDICATOR,\ncast(sbpl.RESULT_VALUE_CIS as STRING) AS RESULT_VALUE_CIS,\ncast(sbpl.RESULT_VALUE_STND as STRING) AS RESULT_VALUE_STND,\ncast(sbpl.RESULT_VALUE_TYPE as STRING) AS RESULT_VALUE_TYPE,\ncast(sbpl.DETECTED_CIS_UNIT_OF_MEASURE as STRING) AS DETECTED_CIS_UNIT_OF_MEASURE,\ncast(sbpl.RESULT_AVAILABLE_INDICATOR as STRING) AS RESULT_AVAILABLE_INDICATOR,\ncast(sbpl.RESULT_VALID_RANGE_INDICATOR as STRING) AS RESULT_VALID_RANGE_INDICATOR,\ncast(sbpl.RESULT_VALID_FORMAT_INDICATOR as STRING) AS RESULT_VALID_FORMAT_INDICATOR,\ncast(sbpl.RESULT_INVALID_REASON as STRING) AS RESULT_INVALID_REASON,\ncast(sbpl.RESULT_IMPORT_INDICATOR as STRING) AS RESULT_IMPORT_INDICATOR,\ncast(sbpl.RESULT_HEADER_ONLY_INDICATOR as STRING) AS RESULT_HEADER_ONLY_INDICATOR,\ncast(sbpl.RESULT_TRANSMISSION_TYPE as STRING) AS RESULT_TRANSMISSION_TYPE,\ncast('<4.0mmol/L' as STRING) AS LIPIDS_TOTAL_CHOLESTEROL_RESULT_VALUE_RANGE,\ncast('>1.0mmol/L' as STRING) AS LIPIDS_HDL_RESULT_VALUE_RANGE,\ncast('<2.0mmol/L' as STRING) AS LIPIDS_LDL_RESULT_VALUE_RANGE,\ncast('<2.0mmol/L' as STRING) AS LIPIDS_TRIGLYCERIDES_RESULT_VALUE_RANGE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_PATHOLOGY_OMOP` hbpo\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_LIPIDS_OMOP` sbpl\non hbpo.HUB_BDV_PATHOLOGY_SK = sbpl.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATHOLOGY_OMOP` lbpa\non hbpo.HUB_BDV_PATHOLOGY_SK = lbpa.HUB_BDV_PATHOLOGY_SK\ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATHOLOGY_OMOP` lsbpa\non lbpa.LNK_BDV_PATHOLOGY_SK = lsbpa.LNK_BDV_PATHOLOGY_SK\nWHERE \n\tsbpl.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND sbpl.OMD_DELETED_RECORD_INDICATOR = 'N'\n    AND lsbpa.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND lsbpa.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from pathology_lipids", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_LIPIDS`"}, "model.nps_mi_2021.PRACTICE_RECRUITMENT": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nWITH practice_bdv as (\r\n\r\nselect distinct HUB_SITE_SK, SITE_NAME, POSTCODE_ORIGINAL, STATE, \r\nCRM_SITE_RECRUITMENT_STATUS, CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE,\r\nCRM_SITE_RECRUITMENT_WITHDRAWN_DATE , OMD_CURRENT_RECORD_INDICATOR, OMD_DELETED_RECORD_INDICATOR\r\nFROM {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_SITE_OMOP')}}\r\n), \r\n\r\npractice_phc as (\r\n\r\nselect HUB_SITE_SK, PRACTICE_ID , OMD_CURRENT_RECORD_INDICATOR, OMD_DELETED_RECORD_INDICATOR\r\nFROM {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PHC_OMOP')}}\r\n\r\n),\r\n\r\npractice_grh as (\r\n\r\nselect HUB_SITE_SK, SITE_ADDRESS ,OMD_CURRENT_RECORD_INDICATOR, OMD_DELETED_RECORD_INDICATOR\r\nFROM {{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_GRH_OMOP')}}\r\n\r\n),\r\n\r\npractice_recruitment as (\r\nselect \r\ncast(hub.HUB_SITE_SK as string) as SITE_ID,\r\ncast(bdv.SITE_NAME as string) as PRACTICE_NAME,\r\ncast(NULL as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(NULL as string) as PRACTICE_ADDRESS_STREET1,\r\ncast(NULL as string) as PRACTICE_ADDRESS_STREET2,\r\ncast(NULL as string) as PRACTICE_SUBURB,\r\ncast(bdv.POSTCODE_ORIGINAL as string) as PRACTICE_POSTCODE,\r\ncast(bdv.STATE as string) as PRACTICE_STATE,\r\ncast(NULL as string) as PRACTICE_NUMBER_OF_GP,\r\ncast(NULL as string) as PRACTICE_CATEGORY,\r\ncast(NULL as int ) as PRACTICE_FULLTIME_EMPLOYEES,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_ONBOARDING_STATUS,\r\ncast(bdv.CRM_SITE_RECRUITMENT_STATUS as string) as PRACTICE_RECRUITMENT_STATUS,\r\ncast(NULL as string) as PROGRAM_NAME,\r\ncast(NULL as string) as RECRUITMENT_CHANNEL,\r\ncast(bdv.CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE as string) as RECRUITMENT_AGREED_SIGNED_DATE,\r\ncast(bdv.CRM_SITE_RECRUITMENT_WITHDRAWN_DATE as string) as PRACTICE_RECRUITMENT_WITHDRAWN_DATE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_OMOP')}} hub\r\nLEFT join \r\npractice_bdv bdv \r\non hub.HUB_SITE_SK = bdv.HUB_SITE_SK \r\nwhere\r\n    bdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND bdv.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\nunion all\r\n\r\nselect \r\ncast(hub.HUB_SITE_SK as string) as SITE_ID,\r\ncast(NULL as string) as PRACTICE_NAME,\r\ncast(phc.PRACTICE_ID as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(NULL as string) as PRACTICE_ADDRESS_STREET1,\r\ncast(NULL as string) as PRACTICE_ADDRESS_STREET2,\r\ncast(NULL as string) as PRACTICE_SUBURB,\r\ncast(NULL as string) as PRACTICE_POSTCODE,\r\ncast(NULL as string) as PRACTICE_STATE,\r\ncast(NULL as string) as PRACTICE_NUMBER_OF_GP,\r\ncast(NULL as string) as PRACTICE_CATEGORY,\r\ncast(NULL as int ) as PRACTICE_FULLTIME_EMPLOYEES,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_ONBOARDING_STATUS,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_STATUS,\r\ncast(NULL as string) as PROGRAM_NAME,\r\ncast(NULL as string) as RECRUITMENT_CHANNEL,\r\ncast(NULL as string) as RECRUITMENT_AGREED_SIGNED_DATE,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_WITHDRAWN_DATE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_OMOP')}} hub\r\nLEFT join \r\npractice_phc phc\r\non hub.HUB_SITE_SK = phc.HUB_SITE_SK \r\nwhere\r\n    phc.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND phc.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\nunion all\r\n\r\nselect \r\ncast(hub.HUB_SITE_SK as string) as SITE_ID,\r\ncast(NULL as string) as PRACTICE_NAME,\r\ncast(NULL as string) as PRACTICE_ID,\r\ncast(NULL as string) as CRMID,\r\ncast(grh.SITE_ADDRESS as string) as PRACTICE_ADDRESS_STREET1,\r\ncast(NULL as string) as PRACTICE_ADDRESS_STREET2,\r\ncast(NULL as string) as PRACTICE_SUBURB,\r\ncast(NULL as string) as PRACTICE_POSTCODE,\r\ncast(NULL as string) as PRACTICE_STATE,\r\ncast(NULL as string) as PRACTICE_NUMBER_OF_GP,\r\ncast(NULL as string) as PRACTICE_CATEGORY,\r\ncast(NULL as int ) as PRACTICE_FULLTIME_EMPLOYEES,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_ONBOARDING_STATUS,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_STATUS,\r\ncast(NULL as string) as PROGRAM_NAME,\r\ncast(NULL as string) as RECRUITMENT_CHANNEL,\r\ncast(NULL as string) as RECRUITMENT_AGREED_SIGNED_DATE,\r\ncast(NULL as string) as PRACTICE_RECRUITMENT_WITHDRAWN_DATE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_OMOP')}} hub\r\nLEFT join \r\npractice_grh grh\r\non hub.HUB_SITE_SK = grh.HUB_SITE_SK \r\nwhere\r\n    grh.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND grh.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n\r\n)\r\n\r\n\r\nSELECT * FROM practice_recruitment", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PHC_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "PRACTICE_RECRUITMENT", "PRACTICE_RECRUITMENT"], "unique_id": "model.nps_mi_2021.PRACTICE_RECRUITMENT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\PRACTICE_RECRUITMENT\\PRACTICE_RECRUITMENT.sql", "original_file_path": "models\\staging\\PRACTICE_RECRUITMENT\\PRACTICE_RECRUITMENT.sql", "name": "PRACTICE_RECRUITMENT", "alias": "PRACTICE_RECRUITMENT", "checksum": {"name": "sha256", "checksum": "bbdaafdfcfed215c9d7e20b444257f1528aa0c3f334d30ec75ba696186e450a6"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PHC_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_GRH_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\PRACTICE_RECRUITMENT\\PRACTICE_RECRUITMENT.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.4591815, "compiled_sql": "\n\nWITH practice_bdv as (\n\nselect distinct HUB_SITE_SK, SITE_NAME, POSTCODE_ORIGINAL, STATE, \nCRM_SITE_RECRUITMENT_STATUS, CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE,\nCRM_SITE_RECRUITMENT_WITHDRAWN_DATE , OMD_CURRENT_RECORD_INDICATOR, OMD_DELETED_RECORD_INDICATOR\nFROM `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_SITE_OMOP`\n), \n\npractice_phc as (\n\nselect HUB_SITE_SK, PRACTICE_ID , OMD_CURRENT_RECORD_INDICATOR, OMD_DELETED_RECORD_INDICATOR\nFROM `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PHC_OMOP`\n\n),\n\npractice_grh as (\n\nselect HUB_SITE_SK, SITE_ADDRESS ,OMD_CURRENT_RECORD_INDICATOR, OMD_DELETED_RECORD_INDICATOR\nFROM `nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_GRH_OMOP`\n\n),\n\npractice_recruitment as (\nselect \ncast(hub.HUB_SITE_SK as string) as SITE_ID,\ncast(bdv.SITE_NAME as string) as PRACTICE_NAME,\ncast(NULL as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(NULL as string) as PRACTICE_ADDRESS_STREET1,\ncast(NULL as string) as PRACTICE_ADDRESS_STREET2,\ncast(NULL as string) as PRACTICE_SUBURB,\ncast(bdv.POSTCODE_ORIGINAL as string) as PRACTICE_POSTCODE,\ncast(bdv.STATE as string) as PRACTICE_STATE,\ncast(NULL as string) as PRACTICE_NUMBER_OF_GP,\ncast(NULL as string) as PRACTICE_CATEGORY,\ncast(NULL as int ) as PRACTICE_FULLTIME_EMPLOYEES,\ncast(NULL as string) as PRACTICE_RECRUITMENT_ONBOARDING_STATUS,\ncast(bdv.CRM_SITE_RECRUITMENT_STATUS as string) as PRACTICE_RECRUITMENT_STATUS,\ncast(NULL as string) as PROGRAM_NAME,\ncast(NULL as string) as RECRUITMENT_CHANNEL,\ncast(bdv.CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE as string) as RECRUITMENT_AGREED_SIGNED_DATE,\ncast(bdv.CRM_SITE_RECRUITMENT_WITHDRAWN_DATE as string) as PRACTICE_RECRUITMENT_WITHDRAWN_DATE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_OMOP` hub\nLEFT join \npractice_bdv bdv \non hub.HUB_SITE_SK = bdv.HUB_SITE_SK \nwhere\n    bdv.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND bdv.OMD_DELETED_RECORD_INDICATOR = 'N'\n\nunion all\n\nselect \ncast(hub.HUB_SITE_SK as string) as SITE_ID,\ncast(NULL as string) as PRACTICE_NAME,\ncast(phc.PRACTICE_ID as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(NULL as string) as PRACTICE_ADDRESS_STREET1,\ncast(NULL as string) as PRACTICE_ADDRESS_STREET2,\ncast(NULL as string) as PRACTICE_SUBURB,\ncast(NULL as string) as PRACTICE_POSTCODE,\ncast(NULL as string) as PRACTICE_STATE,\ncast(NULL as string) as PRACTICE_NUMBER_OF_GP,\ncast(NULL as string) as PRACTICE_CATEGORY,\ncast(NULL as int ) as PRACTICE_FULLTIME_EMPLOYEES,\ncast(NULL as string) as PRACTICE_RECRUITMENT_ONBOARDING_STATUS,\ncast(NULL as string) as PRACTICE_RECRUITMENT_STATUS,\ncast(NULL as string) as PROGRAM_NAME,\ncast(NULL as string) as RECRUITMENT_CHANNEL,\ncast(NULL as string) as RECRUITMENT_AGREED_SIGNED_DATE,\ncast(NULL as string) as PRACTICE_RECRUITMENT_WITHDRAWN_DATE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_OMOP` hub\nLEFT join \npractice_phc phc\non hub.HUB_SITE_SK = phc.HUB_SITE_SK \nwhere\n    phc.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND phc.OMD_DELETED_RECORD_INDICATOR = 'N'\n\nunion all\n\nselect \ncast(hub.HUB_SITE_SK as string) as SITE_ID,\ncast(NULL as string) as PRACTICE_NAME,\ncast(NULL as string) as PRACTICE_ID,\ncast(NULL as string) as CRMID,\ncast(grh.SITE_ADDRESS as string) as PRACTICE_ADDRESS_STREET1,\ncast(NULL as string) as PRACTICE_ADDRESS_STREET2,\ncast(NULL as string) as PRACTICE_SUBURB,\ncast(NULL as string) as PRACTICE_POSTCODE,\ncast(NULL as string) as PRACTICE_STATE,\ncast(NULL as string) as PRACTICE_NUMBER_OF_GP,\ncast(NULL as string) as PRACTICE_CATEGORY,\ncast(NULL as int ) as PRACTICE_FULLTIME_EMPLOYEES,\ncast(NULL as string) as PRACTICE_RECRUITMENT_ONBOARDING_STATUS,\ncast(NULL as string) as PRACTICE_RECRUITMENT_STATUS,\ncast(NULL as string) as PROGRAM_NAME,\ncast(NULL as string) as RECRUITMENT_CHANNEL,\ncast(NULL as string) as RECRUITMENT_AGREED_SIGNED_DATE,\ncast(NULL as string) as PRACTICE_RECRUITMENT_WITHDRAWN_DATE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_OMOP` hub\nLEFT join \npractice_grh grh\non hub.HUB_SITE_SK = grh.HUB_SITE_SK \nwhere\n    grh.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND grh.OMD_DELETED_RECORD_INDICATOR = 'N'\n\n)\n\n\nSELECT * FROM practice_recruitment", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_RECRUITMENT`"}, "model.nps_mi_2021.SITE": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith sitebdv as (\r\nselect SITE_NAME, HUB_SITE_SK ,SITE_IDENTIFIER, STATE, POSTCODE_ORIGINAL, POSTCODE_OVERRIDE,\r\nPOSTCODE_OVERRIDE_FLAG, POSTCODE_OVERRIDE_REASON, SOURCE_SYSTEM, \r\nMAX(CAST(CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE AS TIMESTAMP)) AS CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE, \r\nCRM_SITE_RECRUITMENT_STATUS, \r\nMAX(CAST(CRM_SITE_RECRUITMENT_WITHDRAWN_DATE AS TIMESTAMP)) AS CRM_SITE_RECRUITMENT_WITHDRAWN_DATE, \r\nSITE_EXTRACTION_TYPE, \r\nMAX(CAST(SITE_DWH_BASELINE_DATE AS TIMESTAMP)) AS SITE_DWH_BASELINE_DATE, \r\nMAX(CAST(SITE_LATEST_LOAD_DATE AS TIMESTAMP)) AS SITE_LATEST_LOAD_DATE\r\nfrom\r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_BDV_SITE_OMOP')}}\r\nWHERE SOURCE_SYSTEM not like 'Unknown' and CRM_SITE_RECRUITMENT_STATUS like 'Participating'\r\nGROUP BY SITE_NAME, HUB_SITE_SK ,SITE_IDENTIFIER, STATE, POSTCODE_ORIGINAL, POSTCODE_OVERRIDE,\r\nPOSTCODE_OVERRIDE_FLAG, POSTCODE_OVERRIDE_REASON, SOURCE_SYSTEM,\r\nCRM_SITE_RECRUITMENT_STATUS, SITE_EXTRACTION_TYPE\r\n),\r\n\r\nsite_table as (\r\nselect\r\ncast(hso.HUB_SITE_SK as string) as SITE_NUMBER,\r\ncast(hso.SITE_ID as string) as SITE_ID,\r\ncast(sbdv.SITE_NAME as string) as SITE_NAME,\r\ncast(satt.SITE_CONTROLLER as string) as SITE_CONTROLLER,\r\ncast(satt.SITE_ADDRESS as string) as SITE_ADDRESS,\r\ncast(satt.SITE_EMAIL as string) as SITE_EMAIL,\r\ncast(satt.SITE_PHONE as string) as SITE_PHONE,\r\ncast(satt.SITE_DATAPROCESSING_ENABLED as int) as SITE_DATAPROCESSING_ENABLED,\r\ncast(satt.SITE_REQUEST_EXPORTLOGS as int) as SITE_REQUEST_EXPORTLOGS,\r\ncast(satt.SITE_REQUEST_DATARESET as int) as SITE_REQUEST_DATARESET,\r\ncast(satt.SITE_WEBSERVICE_ENABLED as int) as SITE_WEBSERVICE_ENABLED,\r\ncast(satt.SITE_WEBSITE_ENABLED as int) as SITE_WEBSITE_ENABLED,\r\ncast(satt.SITE_CREATED as timestamp) as SITE_CREATED_DATE,\r\ncast(satt.SITE_MODIFIED as timestamp) as SITE_MODIFIED_DATE,\r\ncast(null as string) as OMD_CDC_OPERATION,\r\ncast(null as string) as MULTI_PRACTICE_FLAG,\r\ncast(sbdv.SITE_IDENTIFIER as string) as SITE_IDENTIFIER,\r\ncast(sbdv.STATE as string) as STATE,\r\ncast(sbdv.POSTCODE_ORIGINAL as string) as POSTCODE_ORIGINAL,\r\ncast(sbdv.POSTCODE_OVERRIDE as string) as POSTCODE_OVERRIDE,\r\ncast(sbdv.POSTCODE_OVERRIDE_FLAG as int) as POSTCODE_OVERRIDE_FLAG,\r\ncast(sbdv.POSTCODE_OVERRIDE_REASON as string) as POSTCODE_OVERRIDE_REASON,\r\ncast(sbdv.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\r\ncast(sbdv.CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE as timestamp) as CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE,\r\ncast(sbdv.CRM_SITE_RECRUITMENT_STATUS as string) as CRM_SITE_RECRUITMENT_STATUS,\r\ncast(sbdv.CRM_SITE_RECRUITMENT_WITHDRAWN_DATE as timestamp) as CRM_SITE_RECRUITMENT_WITHDRAWN_DATE,\r\ncast(sbdv.SITE_EXTRACTION_TYPE as string) as SITE_EXTRACTION_TYPE,\r\ncast(sbdv.SITE_DWH_BASELINE_DATE as timestamp) as SITE_DWH_BASELINE_DATE,\r\ncast(sbdv.SITE_LATEST_LOAD_DATE as timestamp) as SITE_LATEST_LOAD_DATE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_OMOP')}} hso \r\nLEFT JOIN \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_GRH_OMOP')}} satt\r\nON hso.HUB_SITE_SK = satt.HUB_SITE_SK\r\nLEFT JOIN \r\nsitebdv sbdv\r\nON hso.HUB_SITE_SK = sbdv.HUB_SITE_SK\r\n)\r\nselect DISTINCT * from site_table", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "site", "SITE"], "unique_id": "model.nps_mi_2021.SITE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\site\\SITE.sql", "original_file_path": "models\\staging\\site\\SITE.sql", "name": "SITE", "alias": "SITE", "checksum": {"name": "sha256", "checksum": "26e6212d39ffd19ef77c76cf6b42b76b20f99f6ae6b487c6e05f30a35c42cb53"}, "tags": [], "refs": [], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_GRH_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_SITE_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_OMOP"]], "description": "", "columns": {"SITE_REQUEST_EXPORTLOGS": {"name": "SITE_REQUEST_EXPORTLOGS", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SITE_REQUEST_DATARESET": {"name": "SITE_REQUEST_DATARESET", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SITE_WEBSERVICE_ENABLED": {"name": "SITE_WEBSERVICE_ENABLED", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SITE_WEBSITE_ENABLED": {"name": "SITE_WEBSITE_ENABLED", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "nps_mi_2021://models\\staging\\site\\SITE_test.yml", "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\site\\SITE.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642459926.5456889, "compiled_sql": "\n\nwith sitebdv as (\nselect SITE_NAME, HUB_SITE_SK ,SITE_IDENTIFIER, STATE, POSTCODE_ORIGINAL, POSTCODE_OVERRIDE,\nPOSTCODE_OVERRIDE_FLAG, POSTCODE_OVERRIDE_REASON, SOURCE_SYSTEM, \nMAX(CAST(CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE AS TIMESTAMP)) AS CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE, \nCRM_SITE_RECRUITMENT_STATUS, \nMAX(CAST(CRM_SITE_RECRUITMENT_WITHDRAWN_DATE AS TIMESTAMP)) AS CRM_SITE_RECRUITMENT_WITHDRAWN_DATE, \nSITE_EXTRACTION_TYPE, \nMAX(CAST(SITE_DWH_BASELINE_DATE AS TIMESTAMP)) AS SITE_DWH_BASELINE_DATE, \nMAX(CAST(SITE_LATEST_LOAD_DATE AS TIMESTAMP)) AS SITE_LATEST_LOAD_DATE\nfrom\n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_SITE_OMOP`\nWHERE SOURCE_SYSTEM not like 'Unknown' and CRM_SITE_RECRUITMENT_STATUS like 'Participating'\nGROUP BY SITE_NAME, HUB_SITE_SK ,SITE_IDENTIFIER, STATE, POSTCODE_ORIGINAL, POSTCODE_OVERRIDE,\nPOSTCODE_OVERRIDE_FLAG, POSTCODE_OVERRIDE_REASON, SOURCE_SYSTEM,\nCRM_SITE_RECRUITMENT_STATUS, SITE_EXTRACTION_TYPE\n),\n\nsite_table as (\nselect\ncast(hso.HUB_SITE_SK as string) as SITE_NUMBER,\ncast(hso.SITE_ID as string) as SITE_ID,\ncast(sbdv.SITE_NAME as string) as SITE_NAME,\ncast(satt.SITE_CONTROLLER as string) as SITE_CONTROLLER,\ncast(satt.SITE_ADDRESS as string) as SITE_ADDRESS,\ncast(satt.SITE_EMAIL as string) as SITE_EMAIL,\ncast(satt.SITE_PHONE as string) as SITE_PHONE,\ncast(satt.SITE_DATAPROCESSING_ENABLED as int) as SITE_DATAPROCESSING_ENABLED,\ncast(satt.SITE_REQUEST_EXPORTLOGS as int) as SITE_REQUEST_EXPORTLOGS,\ncast(satt.SITE_REQUEST_DATARESET as int) as SITE_REQUEST_DATARESET,\ncast(satt.SITE_WEBSERVICE_ENABLED as int) as SITE_WEBSERVICE_ENABLED,\ncast(satt.SITE_WEBSITE_ENABLED as int) as SITE_WEBSITE_ENABLED,\ncast(satt.SITE_CREATED as timestamp) as SITE_CREATED_DATE,\ncast(satt.SITE_MODIFIED as timestamp) as SITE_MODIFIED_DATE,\ncast(null as string) as OMD_CDC_OPERATION,\ncast(null as string) as MULTI_PRACTICE_FLAG,\ncast(sbdv.SITE_IDENTIFIER as string) as SITE_IDENTIFIER,\ncast(sbdv.STATE as string) as STATE,\ncast(sbdv.POSTCODE_ORIGINAL as string) as POSTCODE_ORIGINAL,\ncast(sbdv.POSTCODE_OVERRIDE as string) as POSTCODE_OVERRIDE,\ncast(sbdv.POSTCODE_OVERRIDE_FLAG as int) as POSTCODE_OVERRIDE_FLAG,\ncast(sbdv.POSTCODE_OVERRIDE_REASON as string) as POSTCODE_OVERRIDE_REASON,\ncast(sbdv.SOURCE_SYSTEM as string) as SOURCE_SYSTEM,\ncast(sbdv.CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE as timestamp) as CRM_SITE_RECRUITMENT_AGREED_SIGNED_DATE,\ncast(sbdv.CRM_SITE_RECRUITMENT_STATUS as string) as CRM_SITE_RECRUITMENT_STATUS,\ncast(sbdv.CRM_SITE_RECRUITMENT_WITHDRAWN_DATE as timestamp) as CRM_SITE_RECRUITMENT_WITHDRAWN_DATE,\ncast(sbdv.SITE_EXTRACTION_TYPE as string) as SITE_EXTRACTION_TYPE,\ncast(sbdv.SITE_DWH_BASELINE_DATE as timestamp) as SITE_DWH_BASELINE_DATE,\ncast(sbdv.SITE_LATEST_LOAD_DATE as timestamp) as SITE_LATEST_LOAD_DATE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_OMOP` hso \nLEFT JOIN \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_GRH_OMOP` satt\nON hso.HUB_SITE_SK = satt.HUB_SITE_SK\nLEFT JOIN \nsitebdv sbdv\nON hso.HUB_SITE_SK = sbdv.HUB_SITE_SK\n)\nselect DISTINCT * from site_table", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`"}, "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.2205f46cd2": {"raw_sql": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "SITE_REQUEST_EXPORTLOGS", "model": "{{ get_where_subquery(ref('SITE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.nps_mi_2021.SITE"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "staging", "site", "dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0"], "unique_id": "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.2205f46cd2", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.sql", "original_file_path": "models\\staging\\site\\SITE_test.yml", "name": "dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0", "alias": "dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["SITE"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\site\\SITE_test.yml\\dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1642459926.5466902, "compiled_sql": "\n\nwith meet_condition as(\n  select *\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not SITE_REQUEST_EXPORTLOGS >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_REQUEST_EXPORTLOGS", "file_key_name": "models.SITE"}, "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.052e187c1f": {"raw_sql": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "SITE_REQUEST_DATARESET", "model": "{{ get_where_subquery(ref('SITE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.nps_mi_2021.SITE"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "staging", "site", "dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0"], "unique_id": "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.052e187c1f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.sql", "original_file_path": "models\\staging\\site\\SITE_test.yml", "name": "dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0", "alias": "dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["SITE"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\site\\SITE_test.yml\\dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1642459926.5548701, "compiled_sql": "\n\nwith meet_condition as(\n  select *\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not SITE_REQUEST_DATARESET >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_REQUEST_DATARESET", "file_key_name": "models.SITE"}, "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.74d7b07101": {"raw_sql": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "SITE_WEBSERVICE_ENABLED", "model": "{{ get_where_subquery(ref('SITE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.nps_mi_2021.SITE"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "staging", "site", "dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0"], "unique_id": "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.74d7b07101", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.sql", "original_file_path": "models\\staging\\site\\SITE_test.yml", "name": "dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0", "alias": "dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["SITE"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\site\\SITE_test.yml\\dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1642459926.5578701, "compiled_sql": "\n\nwith meet_condition as(\n  select *\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not SITE_WEBSERVICE_ENABLED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_WEBSERVICE_ENABLED", "file_key_name": "models.SITE"}, "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.77aa18e311": {"raw_sql": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "SITE_WEBSITE_ENABLED", "model": "{{ get_where_subquery(ref('SITE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.nps_mi_2021.SITE"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "staging", "site", "dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0"], "unique_id": "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.77aa18e311", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.sql", "original_file_path": "models\\staging\\site\\SITE_test.yml", "name": "dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0", "alias": "dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["SITE"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\site\\SITE_test.yml\\dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1642459926.5618563, "compiled_sql": "\n\nwith meet_condition as(\n  select *\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not SITE_WEBSITE_ENABLED >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_WEBSITE_ENABLED", "file_key_name": "models.SITE"}, "model.nps_mi_2021.PATIENT": {"raw_sql": "{{config(materialized='table')}}\r\n\r\nwith source_patient as\r\n(\r\nselect * from {{ref('src_patients_bp')}}\r\nUNION all\r\nselect * from {{ref('src_patients_md')}}\r\nUNION all\r\nselect * from {{ref('src_patients_phc_bp')}}\r\nUNION all\r\nselect * from {{ref('src_patients_phc_md')}}\r\n)\r\nselect * from source_patient", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.nps_mi_2021.src_patients_bp", "model.nps_mi_2021.src_patients_md", "model.nps_mi_2021.src_patients_phc_bp", "model.nps_mi_2021.src_patients_phc_md"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "staging", "patient", "PATIENT"], "unique_id": "model.nps_mi_2021.PATIENT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "staging\\patient\\PATIENT.sql", "original_file_path": "models\\staging\\patient\\PATIENT.sql", "name": "PATIENT", "alias": "PATIENT", "checksum": {"name": "sha256", "checksum": "63bf00192cfa68f4c3a3962d07fd4e2516f467fd0d176735ca85dbb9ffa34a94"}, "tags": [], "refs": [["src_patients_bp"], ["src_patients_md"], ["src_patients_phc_bp"], ["src_patients_phc_md"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\patient\\PATIENT.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.7880163, "compiled_sql": "\n\nwith source_patient as\n(\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_md`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_phc_bp`\nUNION all\nselect * from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_phc_md`\n)\nselect * from source_patient", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`"}, "model.nps_mi_2021.src_patients_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith patient_bp as (\r\n\r\nselect\r\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hspo.SITE_ID as string) as SITE_ID,\r\ncast(satt.CITY as string) as PATIENT_CITY,\r\ncast(satt.POSTCODE as string) as PATIENT_POSTCODE,\r\ncast(case \r\n\t\twhen satt.SEX_CODE = 1\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.SEX_CODE = 2\r\n\t\tTHEN '2'\r\n        WHEN satt.SEX_CODE = 3 \r\n\t\tTHEN '3'\r\n        WHEN satt.SEX_CODE = 4\r\n\t\tTHEN '9'\r\n\t\tELSE\r\n\t\t'99'\r\n\t\tEND AS STRING) as GENDER_CODE,\r\ncast(case \r\n\t\twhen satt.SEX_CODE = 1\r\n\t\tTHEN 'Male' \r\n\t\tWHEN satt.SEX_CODE = 2\r\n\t\tTHEN 'Female'\r\n        WHEN satt.SEX_CODE = 3\r\n\t\tTHEN 'Intersex or indeterminate'\r\n        WHEN satt.SEX_CODE = 4\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND AS STRING) as GENDER_NAME,\r\ncast(satt.YEAR_OF_BIRTH as INT) as YEAR_OF_BIRTH,\r\ncast(satt.YEAR_OF_DEATH as INT) as YEAR_OF_DEATH,\r\ncast(case \r\n        WHEN satt.PATIENT_STATUS_CODE = 3 OR satt.YEAR_OF_DEATH is not null\r\n        THEN 'Deceased'\r\n        ELSE\r\n        'Not Deceased' \r\n        END as string) as DECEASED_INDICATOR,\r\ncast(case \r\n\t\twhen satt.ORIGIN = 1\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.ORIGIN = 2\r\n\t\tTHEN '2'\r\n\t\twhen satt.ORIGIN = 3\r\n\t\tTHEN '3'\r\n\t\twhen satt.ORIGIN = 4\r\n\t\tTHEN '4'\r\n        when satt.ORIGIN = 8\r\n\t\tTHEN '9'\r\n        when satt.ORIGIN = 0\r\n\t\tTHEN '99'\r\n\t\tEND AS STRING) as ATSI_CODE,\r\ncast(case \r\n\t\twhen satt.ORIGIN = 1\r\n\t\tTHEN 'Aboriginal but not TSI origin'\r\n\t\tWHEN satt.ORIGIN = 2\r\n\t\tTHEN 'TSI but not Aboriginal origin'\r\n\t\twhen satt.ORIGIN = 3\r\n\t\tTHEN 'Both Aboriginal and TSI origin'\r\n\t\twhen satt.ORIGIN = 4\r\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\r\n        when satt.ORIGIN = 8\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\twhen satt.ORIGIN = 0\r\n        THEN 'Not recorded'\r\n\t\tEND AS STRING) as ATSI_NAME,\r\ncast(case \r\n        when satt.PENSION_CODE = 1\r\n        THEN '1'\r\n        when satt.PENSION_CODE = 3\r\n        THEN '3'\r\n        when satt.PENSION_CODE = 4\r\n        THEN '4'\r\n        ELSE\r\n        '99'\r\n        END as string) as PENSION_CODE,\r\ncast(case \r\n        when satt.PENSION_CODE = 1\r\n        THEN 'No Concession Card (Pension/DVA)'\r\n        when satt.PENSION_CODE = 3\r\n        THEN 'Health Care Card'\r\n        when satt.PENSION_CODE = 4\r\n        THEN 'Commonwealth Seniors Health Card'\r\n        ELSE\r\n        'Not recorded'\r\n        END as string) as PENSION_NAME,\r\ncast(case\r\n        WHEN satt.PATIENT_STATUS_CODE = 1\r\n        then 'A'\r\n        WHEN satt.PATIENT_STATUS_CODE = 2\r\n        then 'I' \r\n        WHEN satt.PATIENT_STATUS_CODE = 3\r\n        then 'D'\r\n        END as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case\r\n        WHEN satt.PATIENT_STATUS_CODE = 1\r\n        then 'Active'\r\n        WHEN satt.PATIENT_STATUS_CODE = 2\r\n        then 'Inactive' \r\n        WHEN satt.PATIENT_STATUS_CODE = 3\r\n        then 'Deceased'\r\n        END as string) as CIS_PATIENT_STATUS_NAME,\r\ncast(case \r\n\t\twhen satt.PATIENT_STATUS_CODE = 1\r\n\t\tTHEN 'RACGP Active'\r\n\t\tELSE\r\n\t\t'RACGP Inactive'\r\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\r\ncast(satt.PATIENT_CREATED_DATETIME as string) as PATIENT_CREATED_DATE,    \r\ncast(satt.PATIENT_UPDATED_DATETIME as string) as PATIENT_MODIFIED_DATE,\r\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\r\ncast(ss.POSTCODE_ORIGINAL as int) as SITE_POSTCODE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hspo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_BP_OMOP')}} satt\r\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\ninner join \r\n{{source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021','SITE')}} ss\r\non hspo.SITE_ID = ss.HUB_SITE_SK\r\nleft join\r\n{{ref('src_postcode_phncode')}} phn \r\non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from patient_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE", "model.nps_mi_2021.src_postcode_phncode"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient", "src_patients_bp"], "unique_id": "model.nps_mi_2021.src_patients_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient\\src_patients_bp.sql", "original_file_path": "models\\source\\patient\\src_patients_bp.sql", "name": "src_patients_bp", "alias": "src_patients_bp", "checksum": {"name": "sha256", "checksum": "15dd343cbae110dab9e1d23cdf048910014275fb765cf7324e08f40a78d3b566"}, "tags": [], "refs": [["src_postcode_phncode"]], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], ["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SITE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient\\src_patients_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.8030355, "compiled_sql": "\n\nwith patient_bp as (\n\nselect\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hspo.SITE_ID as string) as SITE_ID,\ncast(satt.CITY as string) as PATIENT_CITY,\ncast(satt.POSTCODE as string) as PATIENT_POSTCODE,\ncast(case \n\t\twhen satt.SEX_CODE = 1\n\t\tTHEN '1'\n\t\tWHEN satt.SEX_CODE = 2\n\t\tTHEN '2'\n        WHEN satt.SEX_CODE = 3 \n\t\tTHEN '3'\n        WHEN satt.SEX_CODE = 4\n\t\tTHEN '9'\n\t\tELSE\n\t\t'99'\n\t\tEND AS STRING) as GENDER_CODE,\ncast(case \n\t\twhen satt.SEX_CODE = 1\n\t\tTHEN 'Male' \n\t\tWHEN satt.SEX_CODE = 2\n\t\tTHEN 'Female'\n        WHEN satt.SEX_CODE = 3\n\t\tTHEN 'Intersex or indeterminate'\n        WHEN satt.SEX_CODE = 4\n\t\tTHEN 'Not stated/inadequately described'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND AS STRING) as GENDER_NAME,\ncast(satt.YEAR_OF_BIRTH as INT) as YEAR_OF_BIRTH,\ncast(satt.YEAR_OF_DEATH as INT) as YEAR_OF_DEATH,\ncast(case \n        WHEN satt.PATIENT_STATUS_CODE = 3 OR satt.YEAR_OF_DEATH is not null\n        THEN 'Deceased'\n        ELSE\n        'Not Deceased' \n        END as string) as DECEASED_INDICATOR,\ncast(case \n\t\twhen satt.ORIGIN = 1\n\t\tTHEN '1'\n\t\tWHEN satt.ORIGIN = 2\n\t\tTHEN '2'\n\t\twhen satt.ORIGIN = 3\n\t\tTHEN '3'\n\t\twhen satt.ORIGIN = 4\n\t\tTHEN '4'\n        when satt.ORIGIN = 8\n\t\tTHEN '9'\n        when satt.ORIGIN = 0\n\t\tTHEN '99'\n\t\tEND AS STRING) as ATSI_CODE,\ncast(case \n\t\twhen satt.ORIGIN = 1\n\t\tTHEN 'Aboriginal but not TSI origin'\n\t\tWHEN satt.ORIGIN = 2\n\t\tTHEN 'TSI but not Aboriginal origin'\n\t\twhen satt.ORIGIN = 3\n\t\tTHEN 'Both Aboriginal and TSI origin'\n\t\twhen satt.ORIGIN = 4\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\n        when satt.ORIGIN = 8\n\t\tTHEN 'Not stated/inadequately described'\n\t\twhen satt.ORIGIN = 0\n        THEN 'Not recorded'\n\t\tEND AS STRING) as ATSI_NAME,\ncast(case \n        when satt.PENSION_CODE = 1\n        THEN '1'\n        when satt.PENSION_CODE = 3\n        THEN '3'\n        when satt.PENSION_CODE = 4\n        THEN '4'\n        ELSE\n        '99'\n        END as string) as PENSION_CODE,\ncast(case \n        when satt.PENSION_CODE = 1\n        THEN 'No Concession Card (Pension/DVA)'\n        when satt.PENSION_CODE = 3\n        THEN 'Health Care Card'\n        when satt.PENSION_CODE = 4\n        THEN 'Commonwealth Seniors Health Card'\n        ELSE\n        'Not recorded'\n        END as string) as PENSION_NAME,\ncast(case\n        WHEN satt.PATIENT_STATUS_CODE = 1\n        then 'A'\n        WHEN satt.PATIENT_STATUS_CODE = 2\n        then 'I' \n        WHEN satt.PATIENT_STATUS_CODE = 3\n        then 'D'\n        END as string) as CIS_PATIENT_STATUS_CODE,\ncast(case\n        WHEN satt.PATIENT_STATUS_CODE = 1\n        then 'Active'\n        WHEN satt.PATIENT_STATUS_CODE = 2\n        then 'Inactive' \n        WHEN satt.PATIENT_STATUS_CODE = 3\n        then 'Deceased'\n        END as string) as CIS_PATIENT_STATUS_NAME,\ncast(case \n\t\twhen satt.PATIENT_STATUS_CODE = 1\n\t\tTHEN 'RACGP Active'\n\t\tELSE\n\t\t'RACGP Inactive'\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\ncast(satt.PATIENT_CREATED_DATETIME as string) as PATIENT_CREATED_DATE,    \ncast(satt.PATIENT_UPDATED_DATETIME as string) as PATIENT_MODIFIED_DATE,\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\ncast(ss.POSTCODE_ORIGINAL as int) as SITE_POSTCODE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hspo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP` satt\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\ninner join \n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE` ss\non hspo.SITE_ID = ss.HUB_SITE_SK\nleft join\n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_postcode_phncode` phn \non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from patient_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_bp`"}, "model.nps_mi_2021.src_patients_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith patient_md as (\r\n\r\nselect\r\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hspo.SITE_ID as string) as SITE_ID,\r\ncast(satt.CITY as string) as PATIENT_CITY,\r\ncast(satt.POSTCODE as string) as PATIENT_POSTCODE,\r\ncast(case \r\n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\r\n\t\tTHEN '2' \r\n\t\tWHEN satt.GENDER_CODE = 'X'\r\n\t\tTHEN '3'\r\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\r\n\t\tTHEN '9'\r\n\t\tELSE \r\n\t\t'99'\r\n\t\tEND AS STRING) as GENDER_CODE,\r\ncast(case \r\n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\r\n\t\tTHEN 'Male'\r\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\r\n\t\tTHEN 'Female'\r\n\t\tWHEN satt.GENDER_CODE = 'X'\r\n\t\tTHEN 'Intersex or indeterminate'\r\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND AS STRING) as GENDER_NAME,\r\ncast(satt.YEAR_OF_BIRTH as int) as YEAR_OF_BIRTH,\r\ncast(satt.YEAR_OF_DEATH as int) as YEAR_OF_DEATH,\r\ncast(case \r\n\t\tWHEN satt.STATUS_CODE = 'D' OR satt.YEAR_OF_DEATH is not NULL\r\n\t\tTHEN 'Deceased'\r\n\t\tELSE\r\n\t\t'Not Deceased' END as string) as DECEASED_INDICATOR,\r\ncast(case \r\n\t\twhen satt.ATSI = '1' OR satt.ATSI = '1.00000'\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.ATSI = '2' OR satt.ATSI = '2.00000'\r\n\t\tTHEN '2'\r\n\t\twhen satt.ATSI = '3' OR satt.ATSI = '3.00000'\r\n\t\tTHEN '3'\r\n\t\twhen satt.ATSI = '4' OR satt.ATSI = '4.00000'\r\n\t\tTHEN '4'\r\n\t\twhen satt.ATSI = '9' OR satt.ATSI = '9.00000'\r\n\t\tTHEN '9'\r\n\t\tELSE\r\n\t\t'99'\r\n\t\tEND AS STRING) as ATSI_CODE,\r\ncast(case \r\n\t\twhen satt.ATSI = '1' OR satt.ATSI = '1.00000'\r\n\t\tTHEN 'Aboriginal but not TSI origin'\r\n\t\tWHEN satt.ATSI = '2' OR satt.ATSI = '2.00000'\r\n\t\tTHEN 'TSI but not Aboriginal origin'\r\n\t\twhen satt.ATSI = '3' OR satt.ATSI = '3.00000'\r\n\t\tTHEN 'Both Aboriginal and TSI origin'\r\n\t\twhen satt.ATSI = '4' OR satt.ATSI = '4.00000'\r\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\r\n\t\twhen satt.ATSI = '9' OR satt.ATSI = '9.00000'\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND AS STRING) as ATSI_NAME,\r\ncast(case \r\n\t\twhen satt.PENSION_CODE = 'P'\r\n\t\tTHEN '2'\r\n\t\twhen satt.PENSION_CODE = 'R'\r\n\t\tTHEN '5'\r\n\t\twhen satt.PENSION_CODE = 'N'\r\n\t\tTHEN '1'\r\n\t\twhen satt.PENSION_CODE = 'L'\r\n\t\tTHEN '51'\r\n\t\tELSE\r\n\t\t'99'\r\n\t\tEND as string) as PENSION_CODE,\r\ncast(case \r\n\t\twhen satt.PENSION_CODE = 'P'\r\n\t\tTHEN 'Pensioner Concession Card'\r\n\t\twhen satt.PENSION_CODE = 'R'\r\n\t\tTHEN 'Pensioner or Health Care Card'\r\n\t\twhen satt.PENSION_CODE = 'N'\r\n\t\tTHEN 'No Concession Card (Pension/DVA)'\r\n\t\twhen satt.PENSION_CODE = 'L'\r\n\t\tTHEN 'Limited DVA (White, Lilac, Orange)'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND as string) as PENSION_NAME,\r\ncast(satt.STATUS_CODE as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case \r\n\t\twhen satt.STATUS_CODE = 'A'\r\n\t\tTHEN 'Active'\r\n\t\tWHEN satt.STATUS_CODE = 'D'\r\n\t\tTHEN 'Deceased'\r\n\t\twhen satt.STATUS_CODE = 'I'\r\n\t\tTHEN 'Inactive'\r\n\t\twhen satt.STATUS_CODE = 'V'\r\n\t\tTHEN 'Visitor'\r\n\t\twhen satt.STATUS_CODE = 'K'\r\n\t\tTHEN 'Next of Kin'\r\n\t\twhen satt.STATUS_CODE = 'E'\r\n\t\tTHEN 'Emergency Contact'\r\n\t\tEND AS STRING) as CIS_PATIENT_STATUS_NAME,\r\ncast(case \r\n\t\twhen satt.STATUS_CODE = 'A'\r\n\t\tTHEN 'RACGP Active'\r\n\t\tELSE\r\n\t\t'RACGP Inactive'\r\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\r\ncast(satt.PATIENT_CREATED_DATETIME as string) as PATIENT_CREATED_DATE,\r\ncast(satt.PATIENT_UPDATED_DATETIME as string) as PATIENT_MODIFIED_DATE,\r\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\r\ncast(ss.POSTCODE_ORIGINAL as INT) as SITE_POSTCODE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hspo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_MD_OMOP')}} satt\r\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nINNER join \r\n{{source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021','SITE')}} ss\r\non hspo.SITE_ID = ss.HUB_SITE_SK\r\nleft join\r\n{{ref('src_postcode_phncode')}} phn \r\non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from patient_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE", "model.nps_mi_2021.src_postcode_phncode"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient", "src_patients_md"], "unique_id": "model.nps_mi_2021.src_patients_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient\\src_patients_md.sql", "original_file_path": "models\\source\\patient\\src_patients_md.sql", "name": "src_patients_md", "alias": "src_patients_md", "checksum": {"name": "sha256", "checksum": "9f061dbfd0b1ebf15f797173d42defcba881428c4c6a0e80d055304aabe780cd"}, "tags": [], "refs": [["src_postcode_phncode"]], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], ["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SITE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient\\src_patients_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.8069766, "compiled_sql": "\n\nwith patient_md as (\n\nselect\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hspo.SITE_ID as string) as SITE_ID,\ncast(satt.CITY as string) as PATIENT_CITY,\ncast(satt.POSTCODE as string) as PATIENT_POSTCODE,\ncast(case \n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\n\t\tTHEN '1'\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\n\t\tTHEN '2' \n\t\tWHEN satt.GENDER_CODE = 'X'\n\t\tTHEN '3'\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\n\t\tTHEN '9'\n\t\tELSE \n\t\t'99'\n\t\tEND AS STRING) as GENDER_CODE,\ncast(case \n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\n\t\tTHEN 'Male'\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\n\t\tTHEN 'Female'\n\t\tWHEN satt.GENDER_CODE = 'X'\n\t\tTHEN 'Intersex or indeterminate'\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\n\t\tTHEN 'Not stated/inadequately described'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND AS STRING) as GENDER_NAME,\ncast(satt.YEAR_OF_BIRTH as int) as YEAR_OF_BIRTH,\ncast(satt.YEAR_OF_DEATH as int) as YEAR_OF_DEATH,\ncast(case \n\t\tWHEN satt.STATUS_CODE = 'D' OR satt.YEAR_OF_DEATH is not NULL\n\t\tTHEN 'Deceased'\n\t\tELSE\n\t\t'Not Deceased' END as string) as DECEASED_INDICATOR,\ncast(case \n\t\twhen satt.ATSI = '1' OR satt.ATSI = '1.00000'\n\t\tTHEN '1'\n\t\tWHEN satt.ATSI = '2' OR satt.ATSI = '2.00000'\n\t\tTHEN '2'\n\t\twhen satt.ATSI = '3' OR satt.ATSI = '3.00000'\n\t\tTHEN '3'\n\t\twhen satt.ATSI = '4' OR satt.ATSI = '4.00000'\n\t\tTHEN '4'\n\t\twhen satt.ATSI = '9' OR satt.ATSI = '9.00000'\n\t\tTHEN '9'\n\t\tELSE\n\t\t'99'\n\t\tEND AS STRING) as ATSI_CODE,\ncast(case \n\t\twhen satt.ATSI = '1' OR satt.ATSI = '1.00000'\n\t\tTHEN 'Aboriginal but not TSI origin'\n\t\tWHEN satt.ATSI = '2' OR satt.ATSI = '2.00000'\n\t\tTHEN 'TSI but not Aboriginal origin'\n\t\twhen satt.ATSI = '3' OR satt.ATSI = '3.00000'\n\t\tTHEN 'Both Aboriginal and TSI origin'\n\t\twhen satt.ATSI = '4' OR satt.ATSI = '4.00000'\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\n\t\twhen satt.ATSI = '9' OR satt.ATSI = '9.00000'\n\t\tTHEN 'Not stated/inadequately described'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND AS STRING) as ATSI_NAME,\ncast(case \n\t\twhen satt.PENSION_CODE = 'P'\n\t\tTHEN '2'\n\t\twhen satt.PENSION_CODE = 'R'\n\t\tTHEN '5'\n\t\twhen satt.PENSION_CODE = 'N'\n\t\tTHEN '1'\n\t\twhen satt.PENSION_CODE = 'L'\n\t\tTHEN '51'\n\t\tELSE\n\t\t'99'\n\t\tEND as string) as PENSION_CODE,\ncast(case \n\t\twhen satt.PENSION_CODE = 'P'\n\t\tTHEN 'Pensioner Concession Card'\n\t\twhen satt.PENSION_CODE = 'R'\n\t\tTHEN 'Pensioner or Health Care Card'\n\t\twhen satt.PENSION_CODE = 'N'\n\t\tTHEN 'No Concession Card (Pension/DVA)'\n\t\twhen satt.PENSION_CODE = 'L'\n\t\tTHEN 'Limited DVA (White, Lilac, Orange)'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND as string) as PENSION_NAME,\ncast(satt.STATUS_CODE as string) as CIS_PATIENT_STATUS_CODE,\ncast(case \n\t\twhen satt.STATUS_CODE = 'A'\n\t\tTHEN 'Active'\n\t\tWHEN satt.STATUS_CODE = 'D'\n\t\tTHEN 'Deceased'\n\t\twhen satt.STATUS_CODE = 'I'\n\t\tTHEN 'Inactive'\n\t\twhen satt.STATUS_CODE = 'V'\n\t\tTHEN 'Visitor'\n\t\twhen satt.STATUS_CODE = 'K'\n\t\tTHEN 'Next of Kin'\n\t\twhen satt.STATUS_CODE = 'E'\n\t\tTHEN 'Emergency Contact'\n\t\tEND AS STRING) as CIS_PATIENT_STATUS_NAME,\ncast(case \n\t\twhen satt.STATUS_CODE = 'A'\n\t\tTHEN 'RACGP Active'\n\t\tELSE\n\t\t'RACGP Inactive'\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\ncast(satt.PATIENT_CREATED_DATETIME as string) as PATIENT_CREATED_DATE,\ncast(satt.PATIENT_UPDATED_DATETIME as string) as PATIENT_MODIFIED_DATE,\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\ncast(ss.POSTCODE_ORIGINAL as INT) as SITE_POSTCODE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hspo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP` satt\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nINNER join \n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE` ss\non hspo.SITE_ID = ss.HUB_SITE_SK\nleft join\n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_postcode_phncode` phn \non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from patient_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_md`"}, "model.nps_mi_2021.src_patients_phc_bp": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith patient_phc_bp as (\r\n\r\nselect\r\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hspo.SITE_ID as string) as SITE_ID,\r\ncast(satt.CITY as string) as PATIENT_CITY,\r\ncast(satt.POST_CODE as string) as PATIENT_POSTCODE,\r\ncast(case \r\n\t\twhen satt.SEX_CODE = 1\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.SEX_CODE = 2\r\n\t\tTHEN '2'\r\n        WHEN satt.SEX_CODE = 3\r\n\t\tTHEN '3'\r\n        WHEN satt.SEX_CODE = 4\r\n\t\tTHEN '9'\r\n\t\tELSE\r\n\t\t'99'\r\n\t\tEND AS STRING) as GENDER_CODE,\r\ncast(case \r\n\t\twhen satt.SEX_CODE = 1\r\n\t\tTHEN 'Male' \r\n\t\tWHEN satt.SEX_CODE = 2\r\n\t\tTHEN 'Female'\r\n        WHEN satt.SEX_CODE = 3\r\n\t\tTHEN 'Intersex or indeterminate'\r\n        WHEN satt.SEX_CODE = 4\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND AS STRING) as GENDER_NAME,\r\ncast(satt.YOB as int) as YEAR_OF_BIRTH,\r\ncast(satt.YOD as int) as YEAR_OF_DEATH,\r\ncast(case \r\n        WHEN satt.PATIENT_STATUS = 3 OR satt.YOD is not NULL\r\n        THEN 'Deceased'\r\n        ELSE\r\n        'Not Deceased' END as string) as DECEASED_INDICATOR,\r\ncast(case \r\n\t\twhen satt.ORIGIN = 1\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.ORIGIN = 2\r\n\t\tTHEN '2'\r\n\t\twhen satt.ORIGIN = 3\r\n\t\tTHEN '3'\r\n\t\twhen satt.ORIGIN = 4\r\n\t\tTHEN '4'\r\n        when satt.ORIGIN = 8\r\n\t\tTHEN '9'\r\n        when satt.ORIGIN = 0\r\n\t\tTHEN '99'\r\n\t\tEND AS STRING) as ATSI_CODE,\r\ncast(case \r\n\t\twhen satt.ORIGIN = 1\r\n\t\tTHEN 'Aboriginal but not TSI origin'\r\n\t\tWHEN satt.ORIGIN = 2\r\n\t\tTHEN 'TSI but not Aboriginal origin'\r\n\t\twhen satt.ORIGIN = 3\r\n\t\tTHEN 'Both Aboriginal and TSI origin'\r\n\t\twhen satt.ORIGIN = 4\r\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\r\n        when satt.ORIGIN = 8\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\twhen satt.ORIGIN = 0\r\n        THEN 'Not recorded'\r\n\t\tEND AS STRING) as ATSI_NAME,\r\ncast(case \r\n        when satt.PENSION_CODE = 1\r\n        THEN '1'\r\n        when satt.PENSION_CODE = 3\r\n        THEN '3'\r\n        when satt.PENSION_CODE = 4\r\n        THEN '4'\r\n        ELSE\r\n        '99'\r\n        END as string) as PENSION_CODE,\r\ncast(case \r\n        when satt.PENSION_CODE = 1\r\n        THEN 'No Concession Card (Pension/DVA)'\r\n        when satt.PENSION_CODE = 3\r\n        THEN 'Health Care Card'\r\n        when satt.PENSION_CODE = 4\r\n        THEN 'Commonwealth Seniors Health Card'\r\n        ELSE\r\n        'Not recorded'\r\n        END as string) as PENSION_NAME,\r\ncast(case\r\n        WHEN satt.PATIENT_STATUS = 1\r\n        then 'A'\r\n        WHEN satt.PATIENT_STATUS = 2\r\n        then 'I' \r\n        WHEN satt.PATIENT_STATUS = 3\r\n        then 'D'\r\n        END as string) as CIS_PATIENT_STATUS,\r\ncast(case\r\n        WHEN satt.PATIENT_STATUS = 1\r\n        then 'Active'\r\n        WHEN satt.PATIENT_STATUS = 2\r\n        then 'Inactive' \r\n        WHEN satt.PATIENT_STATUS = 3\r\n        then 'Deceased'\r\n        END as string) as CIS_PATIENT_STATUS_NAME,\r\ncast(case \r\n\t\twhen satt.PATIENT_STATUS = 1\r\n\t\tTHEN 'RACGP Active'\r\n\t\tELSE\r\n\t\t'RACGP Inactive'\r\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\r\ncast(satt.CREATED as string) as PATIENT_CREATED_DATE,\r\ncast(satt.UPDATED as string) as PATIENT_MODIFIED_DATE,\r\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\r\ncast(ss.POSTCODE_ORIGINAL as INT) as SITE_POSTCODE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hspo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_BP_OMOP')}} satt\r\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nINNER join \r\n{{source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021','SITE')}} ss\r\non hspo.SITE_ID = ss.HUB_SITE_SK\r\nleft join\r\n{{ref('src_postcode_phncode')}} phn \r\non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from patient_phc_bp", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "model.nps_mi_2021.src_postcode_phncode"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient", "src_patients_phc_bp"], "unique_id": "model.nps_mi_2021.src_patients_phc_bp", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient\\src_patients_phc_bp.sql", "original_file_path": "models\\source\\patient\\src_patients_phc_bp.sql", "name": "src_patients_phc_bp", "alias": "src_patients_phc_bp", "checksum": {"name": "sha256", "checksum": "9ae8863c9accd3e8ae08fdbfb58a7f58d151d7cb0f6350ee58bd5b41af6f9531"}, "tags": [], "refs": [["src_postcode_phncode"]], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SITE"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient\\src_patients_phc_bp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.810976, "compiled_sql": "\n\nwith patient_phc_bp as (\n\nselect\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hspo.SITE_ID as string) as SITE_ID,\ncast(satt.CITY as string) as PATIENT_CITY,\ncast(satt.POST_CODE as string) as PATIENT_POSTCODE,\ncast(case \n\t\twhen satt.SEX_CODE = 1\n\t\tTHEN '1'\n\t\tWHEN satt.SEX_CODE = 2\n\t\tTHEN '2'\n        WHEN satt.SEX_CODE = 3\n\t\tTHEN '3'\n        WHEN satt.SEX_CODE = 4\n\t\tTHEN '9'\n\t\tELSE\n\t\t'99'\n\t\tEND AS STRING) as GENDER_CODE,\ncast(case \n\t\twhen satt.SEX_CODE = 1\n\t\tTHEN 'Male' \n\t\tWHEN satt.SEX_CODE = 2\n\t\tTHEN 'Female'\n        WHEN satt.SEX_CODE = 3\n\t\tTHEN 'Intersex or indeterminate'\n        WHEN satt.SEX_CODE = 4\n\t\tTHEN 'Not stated/inadequately described'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND AS STRING) as GENDER_NAME,\ncast(satt.YOB as int) as YEAR_OF_BIRTH,\ncast(satt.YOD as int) as YEAR_OF_DEATH,\ncast(case \n        WHEN satt.PATIENT_STATUS = 3 OR satt.YOD is not NULL\n        THEN 'Deceased'\n        ELSE\n        'Not Deceased' END as string) as DECEASED_INDICATOR,\ncast(case \n\t\twhen satt.ORIGIN = 1\n\t\tTHEN '1'\n\t\tWHEN satt.ORIGIN = 2\n\t\tTHEN '2'\n\t\twhen satt.ORIGIN = 3\n\t\tTHEN '3'\n\t\twhen satt.ORIGIN = 4\n\t\tTHEN '4'\n        when satt.ORIGIN = 8\n\t\tTHEN '9'\n        when satt.ORIGIN = 0\n\t\tTHEN '99'\n\t\tEND AS STRING) as ATSI_CODE,\ncast(case \n\t\twhen satt.ORIGIN = 1\n\t\tTHEN 'Aboriginal but not TSI origin'\n\t\tWHEN satt.ORIGIN = 2\n\t\tTHEN 'TSI but not Aboriginal origin'\n\t\twhen satt.ORIGIN = 3\n\t\tTHEN 'Both Aboriginal and TSI origin'\n\t\twhen satt.ORIGIN = 4\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\n        when satt.ORIGIN = 8\n\t\tTHEN 'Not stated/inadequately described'\n\t\twhen satt.ORIGIN = 0\n        THEN 'Not recorded'\n\t\tEND AS STRING) as ATSI_NAME,\ncast(case \n        when satt.PENSION_CODE = 1\n        THEN '1'\n        when satt.PENSION_CODE = 3\n        THEN '3'\n        when satt.PENSION_CODE = 4\n        THEN '4'\n        ELSE\n        '99'\n        END as string) as PENSION_CODE,\ncast(case \n        when satt.PENSION_CODE = 1\n        THEN 'No Concession Card (Pension/DVA)'\n        when satt.PENSION_CODE = 3\n        THEN 'Health Care Card'\n        when satt.PENSION_CODE = 4\n        THEN 'Commonwealth Seniors Health Card'\n        ELSE\n        'Not recorded'\n        END as string) as PENSION_NAME,\ncast(case\n        WHEN satt.PATIENT_STATUS = 1\n        then 'A'\n        WHEN satt.PATIENT_STATUS = 2\n        then 'I' \n        WHEN satt.PATIENT_STATUS = 3\n        then 'D'\n        END as string) as CIS_PATIENT_STATUS,\ncast(case\n        WHEN satt.PATIENT_STATUS = 1\n        then 'Active'\n        WHEN satt.PATIENT_STATUS = 2\n        then 'Inactive' \n        WHEN satt.PATIENT_STATUS = 3\n        then 'Deceased'\n        END as string) as CIS_PATIENT_STATUS_NAME,\ncast(case \n\t\twhen satt.PATIENT_STATUS = 1\n\t\tTHEN 'RACGP Active'\n\t\tELSE\n\t\t'RACGP Inactive'\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\ncast(satt.CREATED as string) as PATIENT_CREATED_DATE,\ncast(satt.UPDATED as string) as PATIENT_MODIFIED_DATE,\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\ncast(ss.POSTCODE_ORIGINAL as INT) as SITE_POSTCODE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hspo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP` satt\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nINNER join \n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE` ss\non hspo.SITE_ID = ss.HUB_SITE_SK\nleft join\n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_postcode_phncode` phn \non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from patient_phc_bp", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_phc_bp`"}, "model.nps_mi_2021.src_patients_phc_md": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith patient_phc_md as (\r\n\r\nselect\r\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\r\ncast(hspo.SITE_ID as string) as SITE_ID,\r\ncast(satt.CITY as string) as PATIENT_CITY,\r\ncast(satt.POSTCODE as string) as PATIENT_POSTCODE,\r\ncast(case \r\n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\r\n\t\tTHEN '2' \r\n\t\tWHEN satt.GENDER_CODE = 'X'\r\n\t\tTHEN '3'\r\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\r\n\t\tTHEN '9'\r\n\t\tELSE \r\n\t\t'99'\r\n\t\tEND AS STRING) as GENDER_CODE,\r\ncast(case \r\n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\r\n\t\tTHEN 'Male'\r\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\r\n\t\tTHEN 'Female'\r\n\t\tWHEN satt.GENDER_CODE = 'X'\r\n\t\tTHEN 'Intersex or indeterminate'\r\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND AS STRING) as GENDER_NAME,\r\ncast(satt.YOB as int) as YEAR_OF_BIRTH,\r\ncast(satt.YOD as int) as YEAR_OF_DEATH,\r\ncast(case \r\n\t\tWHEN satt.STATUS_CODE = 'D' OR satt.YOD is not NULL\r\n\t\tTHEN 'Deceased'\r\n\t\tELSE\r\n\t\t'Not Deceased' END as string) as DECEASED_INDICATOR,\r\ncast(case \r\n\t\twhen satt.ATSI = 1\r\n\t\tTHEN '1'\r\n\t\tWHEN satt.ATSI = 2\r\n\t\tTHEN '2'\r\n\t\twhen satt.ATSI = 3\r\n\t\tTHEN '3'\r\n\t\twhen satt.ATSI = 4\r\n\t\tTHEN '4'\r\n\t\twhen satt.ATSI = 9\r\n\t\tTHEN '9'\r\n\t\tELSE\r\n\t\t'99'\r\n\t\tEND AS STRING) as ATSI_CODE,\r\ncast(case \r\n\t\twhen satt.ATSI = 1\r\n\t\tTHEN 'Aboriginal but not TSI origin'\r\n\t\tWHEN satt.ATSI = 2\r\n\t\tTHEN 'TSI but not Aboriginal origin'\r\n\t\twhen satt.ATSI = 3\r\n\t\tTHEN 'Both Aboriginal and TSI origin'\r\n\t\twhen satt.ATSI = 4\r\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\r\n\t\twhen satt.ATSI = 9\r\n\t\tTHEN 'Not stated/inadequately described'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND AS STRING) as ATSI_NAME,\r\ncast(case \r\n\t\twhen satt.PENSION_CODE = 'P'\r\n\t\tTHEN '2'\r\n\t\twhen satt.PENSION_CODE = 'R'\r\n\t\tTHEN '5'\r\n\t\twhen satt.PENSION_CODE = 'N'\r\n\t\tTHEN '1'\r\n\t\twhen satt.PENSION_CODE = 'L'\r\n\t\tTHEN '51'\r\n\t\tELSE\r\n\t\t'99'\r\n\t\tEND as string) as PENSION_CODE,\r\ncast(case \r\n\t\twhen satt.PENSION_CODE = 'P'\r\n\t\tTHEN 'Pensioner Concession Card'\r\n\t\twhen satt.PENSION_CODE = 'R'\r\n\t\tTHEN 'Pensioner or Health Care Card'\r\n\t\twhen satt.PENSION_CODE = 'N'\r\n\t\tTHEN 'No Concession Card (Pension/DVA)'\r\n\t\twhen satt.PENSION_CODE = 'L'\r\n\t\tTHEN 'Limited DVA (White, Lilac, Orange)'\r\n\t\tELSE\r\n\t\t'Not recorded'\r\n\t\tEND as string) as PENSION_NAME,\r\ncast(satt.STATUS_CODE as string) as CIS_PATIENT_STATUS_CODE,\r\ncast(case \r\n\t\twhen satt.STATUS_CODE = 'A'\r\n\t\tTHEN 'Active'\r\n\t\tWHEN satt.STATUS_CODE = 'D'\r\n\t\tTHEN 'Deceased'\r\n\t\twhen satt.STATUS_CODE = 'I'\r\n\t\tTHEN 'Inactive'\r\n\t\twhen satt.STATUS_CODE = 'V'\r\n\t\tTHEN 'Visitor'\r\n\t\twhen satt.STATUS_CODE = 'K'\r\n\t\tTHEN 'Next of Kin'\r\n\t\twhen satt.STATUS_CODE = 'E'\r\n\t\tTHEN 'Emergency Contact'\r\n\t\tEND AS STRING) as CIS_PATIENT_STATUS_NAME,\r\ncast(case \r\n\t\twhen satt.STATUS_CODE = 'A'\r\n\t\tTHEN 'RACGP Active'\r\n\t\tELSE\r\n\t\t'RACGP Inactive'\r\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\r\ncast(satt.STAMP_CREATED_DATETIME as string) as PATIENT_CREATED_DATE,\r\ncast(satt.STAMP_DATETIME as string) as PATIENT_MODIFIED_DATE,\r\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\r\ncast(ss.POSTCODE_ORIGINAL as int) as SITE_POSTCODE\r\nfrom \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','HUB_SITE_PATIENT_OMOP')}} hspo \r\ninner join \r\n{{source('B_SREDH_NPS_MI_SF_RDV_BDV_2021','SAT_SITE_PATIENT_PHC_MD_OMOP')}} satt\r\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\r\nINNER join \r\n{{source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021','SITE')}} ss\r\non hspo.SITE_ID = ss.HUB_SITE_SK\r\nleft join\r\n{{ref('src_postcode_phncode')}} phn \r\non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\r\nwhere\r\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\r\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\r\n)\r\n\r\nselect * from patient_phc_md", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "model.nps_mi_2021.src_postcode_phncode"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "patient", "src_patients_phc_md"], "unique_id": "model.nps_mi_2021.src_patients_phc_md", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\patient\\src_patients_phc_md.sql", "original_file_path": "models\\source\\patient\\src_patients_phc_md.sql", "name": "src_patients_phc_md", "alias": "src_patients_phc_md", "checksum": {"name": "sha256", "checksum": "c0291e221c5ef273b09ff359f29bc4be1ceb97078afe95d6d129e430b2d02691"}, "tags": [], "refs": [["src_postcode_phncode"]], "sources": [["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], ["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SITE"], ["B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\patient\\src_patients_phc_md.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.8510182, "compiled_sql": "\n\nwith patient_phc_md as (\n\nselect\ncast(satt.HUB_SITE_PATIENT_SK as string) as PATIENT_NUMBER,\ncast(hspo.SITE_ID as string) as SITE_ID,\ncast(satt.CITY as string) as PATIENT_CITY,\ncast(satt.POSTCODE as string) as PATIENT_POSTCODE,\ncast(case \n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\n\t\tTHEN '1'\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\n\t\tTHEN '2' \n\t\tWHEN satt.GENDER_CODE = 'X'\n\t\tTHEN '3'\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\n\t\tTHEN '9'\n\t\tELSE \n\t\t'99'\n\t\tEND AS STRING) as GENDER_CODE,\ncast(case \n\t\twhen satt.GENDER_CODE = 'M' OR satt.GENDER_CODE = 'm'\n\t\tTHEN 'Male'\n\t\tWHEN satt.GENDER_CODE = 'F' OR satt.GENDER_CODE = 'f'\n\t\tTHEN 'Female'\n\t\tWHEN satt.GENDER_CODE = 'X'\n\t\tTHEN 'Intersex or indeterminate'\n\t\tWHEN satt.GENDER_CODE = 'O' or satt.GENDER_CODE = '-' or satt.GENDER_CODE = '?' or satt.GENDER_CODE = ' '\n\t\tTHEN 'Not stated/inadequately described'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND AS STRING) as GENDER_NAME,\ncast(satt.YOB as int) as YEAR_OF_BIRTH,\ncast(satt.YOD as int) as YEAR_OF_DEATH,\ncast(case \n\t\tWHEN satt.STATUS_CODE = 'D' OR satt.YOD is not NULL\n\t\tTHEN 'Deceased'\n\t\tELSE\n\t\t'Not Deceased' END as string) as DECEASED_INDICATOR,\ncast(case \n\t\twhen satt.ATSI = 1\n\t\tTHEN '1'\n\t\tWHEN satt.ATSI = 2\n\t\tTHEN '2'\n\t\twhen satt.ATSI = 3\n\t\tTHEN '3'\n\t\twhen satt.ATSI = 4\n\t\tTHEN '4'\n\t\twhen satt.ATSI = 9\n\t\tTHEN '9'\n\t\tELSE\n\t\t'99'\n\t\tEND AS STRING) as ATSI_CODE,\ncast(case \n\t\twhen satt.ATSI = 1\n\t\tTHEN 'Aboriginal but not TSI origin'\n\t\tWHEN satt.ATSI = 2\n\t\tTHEN 'TSI but not Aboriginal origin'\n\t\twhen satt.ATSI = 3\n\t\tTHEN 'Both Aboriginal and TSI origin'\n\t\twhen satt.ATSI = 4\n\t\tTHEN 'Neither Aboriginal nor TSI origin'\n\t\twhen satt.ATSI = 9\n\t\tTHEN 'Not stated/inadequately described'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND AS STRING) as ATSI_NAME,\ncast(case \n\t\twhen satt.PENSION_CODE = 'P'\n\t\tTHEN '2'\n\t\twhen satt.PENSION_CODE = 'R'\n\t\tTHEN '5'\n\t\twhen satt.PENSION_CODE = 'N'\n\t\tTHEN '1'\n\t\twhen satt.PENSION_CODE = 'L'\n\t\tTHEN '51'\n\t\tELSE\n\t\t'99'\n\t\tEND as string) as PENSION_CODE,\ncast(case \n\t\twhen satt.PENSION_CODE = 'P'\n\t\tTHEN 'Pensioner Concession Card'\n\t\twhen satt.PENSION_CODE = 'R'\n\t\tTHEN 'Pensioner or Health Care Card'\n\t\twhen satt.PENSION_CODE = 'N'\n\t\tTHEN 'No Concession Card (Pension/DVA)'\n\t\twhen satt.PENSION_CODE = 'L'\n\t\tTHEN 'Limited DVA (White, Lilac, Orange)'\n\t\tELSE\n\t\t'Not recorded'\n\t\tEND as string) as PENSION_NAME,\ncast(satt.STATUS_CODE as string) as CIS_PATIENT_STATUS_CODE,\ncast(case \n\t\twhen satt.STATUS_CODE = 'A'\n\t\tTHEN 'Active'\n\t\tWHEN satt.STATUS_CODE = 'D'\n\t\tTHEN 'Deceased'\n\t\twhen satt.STATUS_CODE = 'I'\n\t\tTHEN 'Inactive'\n\t\twhen satt.STATUS_CODE = 'V'\n\t\tTHEN 'Visitor'\n\t\twhen satt.STATUS_CODE = 'K'\n\t\tTHEN 'Next of Kin'\n\t\twhen satt.STATUS_CODE = 'E'\n\t\tTHEN 'Emergency Contact'\n\t\tEND AS STRING) as CIS_PATIENT_STATUS_NAME,\ncast(case \n\t\twhen satt.STATUS_CODE = 'A'\n\t\tTHEN 'RACGP Active'\n\t\tELSE\n\t\t'RACGP Inactive'\n\t\tEND AS STRING) as RACGP_PATIENT_STATUS_INDICATOR,\ncast(satt.STAMP_CREATED_DATETIME as string) as PATIENT_CREATED_DATE,\ncast(satt.STAMP_DATETIME as string) as PATIENT_MODIFIED_DATE,\ncast(phn.PHN_CODE_2017 as string) as PHN_CODE,\ncast(ss.POSTCODE_ORIGINAL as int) as SITE_POSTCODE\nfrom \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP` hspo \ninner join \n`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP` satt\non hspo.HUB_SITE_PATIENT_SK = satt.HUB_SITE_PATIENT_SK\nINNER join \n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE` ss\non hspo.SITE_ID = ss.HUB_SITE_SK\nleft join\n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_postcode_phncode` phn \non ss.POSTCODE_ORIGINAL = phn.POSTCODE_2019\nwhere\n    satt.OMD_CURRENT_RECORD_INDICATOR = 'Y'\n\tAND satt.OMD_DELETED_RECORD_INDICATOR = 'N'\n)\n\nselect * from patient_phc_md", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`src_patients_phc_md`"}, "model.nps_mi_2021.test_get_phn_codes": {"raw_sql": "{{config(materialized='view')}}\r\n\r\n\r\n\r\n{{distinct_values(\r\n    model = source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021','PRIMARY_HEALTH_NETWORK'),\r\n    column_name = 'PHN_CODE_2017'\r\n)}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.nps_mi_2021.distinct_values"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "phn", "test_get_phn_codes"], "unique_id": "model.nps_mi_2021.test_get_phn_codes", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\phn\\test_get_phn_codes.sql", "original_file_path": "models\\source\\phn\\test_get_phn_codes.sql", "name": "test_get_phn_codes", "alias": "test_get_phn_codes", "checksum": {"name": "sha256", "checksum": "59000f8887700845b82c2336b764b7328011e67c00d656ec4ee03547858cb4b7"}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRIMARY_HEALTH_NETWORK"]], "description": "", "columns": {"PHN_CODE_2017": {"name": "PHN_CODE_2017", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "nps_mi_2021://models\\staging\\phn\\primary_health_network_test.yml", "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\phn\\test_get_phn_codes.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.8735502, "compiled_sql": "\n\n\n\n\n\nselect distinct PHN_CODE_2017 from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRIMARY_HEALTH_NETWORK` order by PHN_CODE_2017 \n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`test_get_phn_codes`"}, "model.nps_mi_2021.test_phn_percent": {"raw_sql": "{{config(materialized='view')}}\r\n\r\nwith phn_percent as (\r\nSELECT SA2_MAINCODE_2016 ,SUM(PHN_CODE_2017_PERCENTAGE) AS  SA2_PHN_SUMS\r\nFROM\r\n{{source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021','PRIMARY_HEALTH_NETWORK')}}\r\nGROUP BY SA2_MAINCODE_2016 having (SA2_PHN_SUMS > 99)\r\n)\r\n\r\nselect * from phn_percent", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK"]}, "config": {"enabled": true, "alias": null, "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "fqn": ["nps_mi_2021", "source", "phn", "test_phn_percent"], "unique_id": "model.nps_mi_2021.test_phn_percent", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "source\\phn\\test_phn_percent.sql", "original_file_path": "models\\source\\phn\\test_phn_percent.sql", "name": "test_phn_percent", "alias": "test_phn_percent", "checksum": {"name": "sha256", "checksum": "d5c8da92f0ab9d24feb63298c378603c5472f07e0986092f845b0f921d210178"}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRIMARY_HEALTH_NETWORK"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\source\\phn\\test_phn_percent.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "created_at": 1642461351.8610651, "compiled_sql": "\n\nwith phn_percent as (\nSELECT SA2_MAINCODE_2016 ,SUM(PHN_CODE_2017_PERCENTAGE) AS  SA2_PHN_SUMS\nFROM\n`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRIMARY_HEALTH_NETWORK`\nGROUP BY SA2_MAINCODE_2016 having (SA2_PHN_SUMS > 99)\n)\n\nselect * from phn_percent", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`test_phn_percent`"}, "test.nps_mi_2021.relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_.5e80f16b64": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_test_get_phn_cod_a77263e40c14d7fa5ed7ca6fc5571430\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('PRIMARY_HEALTH_NETWORK')", "field": "PHN_CODE_2017", "column_name": "PHN_CODE_2017", "model": "{{ get_where_subquery(ref('test_get_phn_codes')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.nps_mi_2021.PRIMARY_HEALTH_NETWORK", "model.nps_mi_2021.test_get_phn_codes"]}, "config": {"enabled": true, "alias": "relationships_test_get_phn_cod_a77263e40c14d7fa5ed7ca6fc5571430", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "staging", "phn", "relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_"], "unique_id": "test.nps_mi_2021.relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_.5e80f16b64", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "relationships_test_get_phn_cod_a77263e40c14d7fa5ed7ca6fc5571430.sql", "original_file_path": "models\\staging\\phn\\primary_health_network_test.yml", "name": "relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_", "alias": "relationships_test_get_phn_cod_a77263e40c14d7fa5ed7ca6fc5571430", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["PRIMARY_HEALTH_NETWORK"], ["test_get_phn_codes"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\staging\\phn\\primary_health_network_test.yml\\relationships_test_get_phn_cod_a77263e40c14d7fa5ed7ca6fc5571430.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_test_get_phn_cod_a77263e40c14d7fa5ed7ca6fc5571430"}, "created_at": 1642461351.8801668, "compiled_sql": "\n    \n    \n\nwith child as (\n    select PHN_CODE_2017 as from_field\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`test_get_phn_codes`\n    where PHN_CODE_2017 is not null\n),\n\nparent as (\n    select PHN_CODE_2017 as to_field\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRIMARY_HEALTH_NETWORK`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PHN_CODE_2017", "file_key_name": "models.test_get_phn_codes"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.1fd49f355a": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_70c76eb95fb97e62d2513813960c6a17\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_70c76eb95fb97e62d2513813960c6a17", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.1fd49f355a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_70c76eb95fb97e62d2513813960c6a17.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID", "alias": "dbt_expectations_source_expect_70c76eb95fb97e62d2513813960c6a17", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_70c76eb95fb97e62d2513813960c6a17.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_70c76eb95fb97e62d2513813960c6a17"}, "created_at": 1642461352.0683157, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.5eb848e427": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3e8a3df2cd16b06afc815e2e498c37d9\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3e8a3df2cd16b06afc815e2e498c37d9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.5eb848e427", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3e8a3df2cd16b06afc815e2e498c37d9.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID", "alias": "dbt_expectations_source_expect_3e8a3df2cd16b06afc815e2e498c37d9", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3e8a3df2cd16b06afc815e2e498c37d9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3e8a3df2cd16b06afc815e2e498c37d9"}, "created_at": 1642461352.0828445, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string.10c7ced156": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ddc7dd3140362e4f6a4e02b34721bfa7\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ddc7dd3140362e4f6a4e02b34721bfa7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string.10c7ced156", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ddc7dd3140362e4f6a4e02b34721bfa7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string", "alias": "dbt_expectations_source_expect_ddc7dd3140362e4f6a4e02b34721bfa7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ddc7dd3140362e4f6a4e02b34721bfa7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ddc7dd3140362e4f6a4e02b34721bfa7"}, "created_at": 1642461352.0988822, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STARTED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STOPPED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1.2c19e44c9f": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f02521b18484e027ecb76330c118ac6d\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 6, "column_name": "RECORD_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f02521b18484e027ecb76330c118ac6d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1.2c19e44c9f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f02521b18484e027ecb76330c118ac6d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1", "alias": "dbt_expectations_source_expect_f02521b18484e027ecb76330c118ac6d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f02521b18484e027ecb76330c118ac6d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f02521b18484e027ecb76330c118ac6d"}, "created_at": 1642461352.1118617, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        RECORD_ID\n    ) >= 1 and length(\n        RECORD_ID\n    ) <= 6\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "RECORD_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.846ac26707": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_de7baaf0f401b31b2566bcc89a369b5c\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_de7baaf0f401b31b2566bcc89a369b5c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.846ac26707", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_de7baaf0f401b31b2566bcc89a369b5c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_de7baaf0f401b31b2566bcc89a369b5c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_de7baaf0f401b31b2566bcc89a369b5c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_de7baaf0f401b31b2566bcc89a369b5c"}, "created_at": 1642461352.1329045, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM.5302f76f97": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_55c9e12097229c26e4045b6af73e74ce\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_55c9e12097229c26e4045b6af73e74ce", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM.5302f76f97", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_55c9e12097229c26e4045b6af73e74ce.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_55c9e12097229c26e4045b6af73e74ce", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_55c9e12097229c26e4045b6af73e74ce.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_55c9e12097229c26e4045b6af73e74ce"}, "created_at": 1642461352.1498983, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM.3776826794": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_0715b6c8e3f80dd69049844c5c1efecc\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_0715b6c8e3f80dd69049844c5c1efecc", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM.3776826794", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_0715b6c8e3f80dd69049844c5c1efecc.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_0715b6c8e3f80dd69049844c5c1efecc", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_0715b6c8e3f80dd69049844c5c1efecc.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_0715b6c8e3f80dd69049844c5c1efecc"}, "created_at": 1642461352.1608686, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.e3a6618d67": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_6badf56c63fc180ef2739086060842af\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_6badf56c63fc180ef2739086060842af", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.e3a6618d67", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_6badf56c63fc180ef2739086060842af.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_6badf56c63fc180ef2739086060842af", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_6badf56c63fc180ef2739086060842af.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_6badf56c63fc180ef2739086060842af"}, "created_at": 1642461352.1648583, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.89635f761b": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0685dadfc2c026097a8d62ea969bcc8c\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0685dadfc2c026097a8d62ea969bcc8c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.89635f761b", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0685dadfc2c026097a8d62ea969bcc8c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_0685dadfc2c026097a8d62ea969bcc8c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0685dadfc2c026097a8d62ea969bcc8c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0685dadfc2c026097a8d62ea969bcc8c"}, "created_at": 1642461352.170861, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.a96531a840": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_8413b006c509c63c13c7f7082256cd45\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_8413b006c509c63c13c7f7082256cd45", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.a96531a840", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_8413b006c509c63c13c7f7082256cd45.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_8413b006c509c63c13c7f7082256cd45", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_8413b006c509c63c13c7f7082256cd45.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_8413b006c509c63c13c7f7082256cd45"}, "created_at": 1642461352.1779017, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string.8888773815": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_047d4d1a85e73f2fe807456ff1fec9f0\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_047d4d1a85e73f2fe807456ff1fec9f0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string.8888773815", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_047d4d1a85e73f2fe807456ff1fec9f0.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_047d4d1a85e73f2fe807456ff1fec9f0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_047d4d1a85e73f2fe807456ff1fec9f0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_047d4d1a85e73f2fe807456ff1fec9f0"}, "created_at": 1642461352.1948626, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STARTED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STOPPED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime.88760a3bf8": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_2a2c0c23b7848e489c06a1d7ad2cf955\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_2a2c0c23b7848e489c06a1d7ad2cf955", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime.88760a3bf8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_2a2c0c23b7848e489c06a1d7ad2cf955.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_2a2c0c23b7848e489c06a1d7ad2cf955", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_2a2c0c23b7848e489c06a1d7ad2cf955.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_2a2c0c23b7848e489c06a1d7ad2cf955"}, "created_at": 1642461352.199862, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STARTED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STOPPED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime.a39095e9d6": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_a454ae749b63453ae0622ab79c4dd413\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALCOHOL_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_a454ae749b63453ae0622ab79c4dd413", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime.a39095e9d6", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_a454ae749b63453ae0622ab79c4dd413.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_a454ae749b63453ae0622ab79c4dd413", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_a454ae749b63453ae0622ab79c4dd413.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_a454ae749b63453ae0622ab79c4dd413"}, "created_at": 1642461352.2068615, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_ALCOHOL_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALCOHOL_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STARTED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_STOPPED' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DRINKS_PER_DAY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_DAYS_PER_WEEK' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.a680eef112": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ed2e798e14e3c2464b459c13c0bf02b8\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ed2e798e14e3c2464b459c13c0bf02b8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.a680eef112", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ed2e798e14e3c2464b459c13c0bf02b8.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID", "alias": "dbt_expectations_source_expect_ed2e798e14e3c2464b459c13c0bf02b8", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ed2e798e14e3c2464b459c13c0bf02b8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ed2e798e14e3c2464b459c13c0bf02b8"}, "created_at": 1642461352.2128618, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.74f627f4cf": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f387e6e4247cd2c3e5b3f9d2be95e814\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f387e6e4247cd2c3e5b3f9d2be95e814", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.74f627f4cf", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f387e6e4247cd2c3e5b3f9d2be95e814.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID", "alias": "dbt_expectations_source_expect_f387e6e4247cd2c3e5b3f9d2be95e814", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f387e6e4247cd2c3e5b3f9d2be95e814.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f387e6e4247cd2c3e5b3f9d2be95e814"}, "created_at": 1642461352.2168622, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string.13e7565f62": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_bd89faab5cea20aee917f23bcf08bf02\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_bd89faab5cea20aee917f23bcf08bf02", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string.13e7565f62", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_bd89faab5cea20aee917f23bcf08bf02.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string", "alias": "dbt_expectations_source_expect_bd89faab5cea20aee917f23bcf08bf02", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_bd89faab5cea20aee917f23bcf08bf02.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_bd89faab5cea20aee917f23bcf08bf02"}, "created_at": 1642461352.2249076, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ALLERGY_ITEM_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REACTION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1.e3e3343ea6": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_48181d4d7f6b11d27358a241468a49d4\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 6, "column_name": "RECORD_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_48181d4d7f6b11d27358a241468a49d4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1.e3e3343ea6", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_48181d4d7f6b11d27358a241468a49d4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1", "alias": "dbt_expectations_source_expect_48181d4d7f6b11d27358a241468a49d4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_48181d4d7f6b11d27358a241468a49d4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_48181d4d7f6b11d27358a241468a49d4"}, "created_at": 1642461352.229901, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        RECORD_ID\n    ) >= 1 and length(\n        RECORD_ID\n    ) <= 6\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "RECORD_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID.ee6534c4f6": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_a1fd500bceea5d7733149a55c60d2253\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "RECORD_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_a1fd500bceea5d7733149a55c60d2253", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID.ee6534c4f6", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_a1fd500bceea5d7733149a55c60d2253.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID", "alias": "dbt_utils_source_not_null_prop_a1fd500bceea5d7733149a55c60d2253", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_a1fd500bceea5d7733149a55c60d2253.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_a1fd500bceea5d7733149a55c60d2253"}, "created_at": 1642461352.2398672, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when RECORD_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "RECORD_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.9b91680f29": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f10fb317034771b9efe52b081221998b\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f10fb317034771b9efe52b081221998b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.9b91680f29", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f10fb317034771b9efe52b081221998b.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_f10fb317034771b9efe52b081221998b", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f10fb317034771b9efe52b081221998b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f10fb317034771b9efe52b081221998b"}, "created_at": 1642461352.2448614, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM.c7f7d5a0a8": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_19eaf3d3c3499928c135bc5e44235e09\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_19eaf3d3c3499928c135bc5e44235e09", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM.c7f7d5a0a8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_19eaf3d3c3499928c135bc5e44235e09.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_19eaf3d3c3499928c135bc5e44235e09", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_19eaf3d3c3499928c135bc5e44235e09.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_19eaf3d3c3499928c135bc5e44235e09"}, "created_at": 1642461352.250859, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM.9f3a3cf321": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_2cde11ec296d05228ec53c6d973c0bba\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_2cde11ec296d05228ec53c6d973c0bba", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM.9f3a3cf321", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_2cde11ec296d05228ec53c6d973c0bba.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_2cde11ec296d05228ec53c6d973c0bba", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_2cde11ec296d05228ec53c6d973c0bba.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_2cde11ec296d05228ec53c6d973c0bba"}, "created_at": 1642461352.2578607, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.2d52e9b62e": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_294806a336bdab3233eb3d0854292d15\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_294806a336bdab3233eb3d0854292d15", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.2d52e9b62e", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_294806a336bdab3233eb3d0854292d15.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_294806a336bdab3233eb3d0854292d15", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_294806a336bdab3233eb3d0854292d15.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_294806a336bdab3233eb3d0854292d15"}, "created_at": 1642461352.2618597, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.5ef9d67fa3": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_2d1f4db2fc8c264f0f4366009a2146f1\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_2d1f4db2fc8c264f0f4366009a2146f1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.5ef9d67fa3", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_2d1f4db2fc8c264f0f4366009a2146f1.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_2d1f4db2fc8c264f0f4366009a2146f1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_2d1f4db2fc8c264f0f4366009a2146f1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_2d1f4db2fc8c264f0f4366009a2146f1"}, "created_at": 1642461352.2668588, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.4ab27ecd0c": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_60357381c7f0747eb4fca98b26f0e716\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_60357381c7f0747eb4fca98b26f0e716", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.4ab27ecd0c", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_60357381c7f0747eb4fca98b26f0e716.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_60357381c7f0747eb4fca98b26f0e716", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_60357381c7f0747eb4fca98b26f0e716.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_60357381c7f0747eb4fca98b26f0e716"}, "created_at": 1642461352.2738628, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string.ec45fa6736": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_02b97a6124f23276d41b8215f28d621e\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_02b97a6124f23276d41b8215f28d621e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string.ec45fa6736", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_02b97a6124f23276d41b8215f28d621e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_02b97a6124f23276d41b8215f28d621e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_02b97a6124f23276d41b8215f28d621e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_02b97a6124f23276d41b8215f28d621e"}, "created_at": 1642461352.2798946, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ALLERGY_ITEM_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REACTION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime.67a06fa1c6": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0a121d96b0d27c5b9c2db2f5299cdd1f\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0a121d96b0d27c5b9c2db2f5299cdd1f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime.67a06fa1c6", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0a121d96b0d27c5b9c2db2f5299cdd1f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_0a121d96b0d27c5b9c2db2f5299cdd1f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0a121d96b0d27c5b9c2db2f5299cdd1f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0a121d96b0d27c5b9c2db2f5299cdd1f"}, "created_at": 1642461352.283895, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ALLERGY_ITEM_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REACTION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime.2a6fa5e8df": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_addc1508dd0e42aecbf8986e71902f3e\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ALLERGY_REACTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_addc1508dd0e42aecbf8986e71902f3e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime.2a6fa5e8df", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_addc1508dd0e42aecbf8986e71902f3e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_addc1508dd0e42aecbf8986e71902f3e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_addc1508dd0e42aecbf8986e71902f3e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_addc1508dd0e42aecbf8986e71902f3e"}, "created_at": 1642461352.2918603, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ALLERGY_ITEM_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REACTION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ALLERGY_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.5ca59c218a": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_014f3dffb7409ca9ce60e187f94a102e\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_014f3dffb7409ca9ce60e187f94a102e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.5ca59c218a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_014f3dffb7409ca9ce60e187f94a102e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID", "alias": "dbt_expectations_source_expect_014f3dffb7409ca9ce60e187f94a102e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_014f3dffb7409ca9ce60e187f94a102e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_014f3dffb7409ca9ce60e187f94a102e"}, "created_at": 1642461352.2968583, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.b865ba6625": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7cc9e94a3e7e91d4b869b72d44c74a2d\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7cc9e94a3e7e91d4b869b72d44c74a2d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.b865ba6625", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7cc9e94a3e7e91d4b869b72d44c74a2d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID", "alias": "dbt_expectations_source_expect_7cc9e94a3e7e91d4b869b72d44c74a2d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7cc9e94a3e7e91d4b869b72d44c74a2d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7cc9e94a3e7e91d4b869b72d44c74a2d"}, "created_at": 1642461352.3018608, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string.b02963d614": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f05dd36d57cbd7aa64056efed8b0041d\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f05dd36d57cbd7aa64056efed8b0041d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string.b02963d614", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f05dd36d57cbd7aa64056efed8b0041d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string", "alias": "dbt_expectations_source_expect_f05dd36d57cbd7aa64056efed8b0041d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f05dd36d57cbd7aa64056efed8b0041d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f05dd36d57cbd7aa64056efed8b0041d"}, "created_at": 1642461352.3098614, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ITEM_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_PATIENT_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1.fd714909db": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7644aa3c3402fde898807d79e7e6fbd7\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 6, "column_name": "SERVICE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7644aa3c3402fde898807d79e7e6fbd7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1.fd714909db", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7644aa3c3402fde898807d79e7e6fbd7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1", "alias": "dbt_expectations_source_expect_7644aa3c3402fde898807d79e7e6fbd7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7644aa3c3402fde898807d79e7e6fbd7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7644aa3c3402fde898807d79e7e6fbd7"}, "created_at": 1642461352.3148658, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        SERVICE_ID\n    ) >= 1 and length(\n        SERVICE_ID\n    ) <= 6\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SERVICE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID.95dac6d029": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_014f1f90ebf9fbb145ad59936c7f9720\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SERVICE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_014f1f90ebf9fbb145ad59936c7f9720", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID.95dac6d029", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_014f1f90ebf9fbb145ad59936c7f9720.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID", "alias": "dbt_utils_source_not_null_prop_014f1f90ebf9fbb145ad59936c7f9720", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_014f1f90ebf9fbb145ad59936c7f9720.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_014f1f90ebf9fbb145ad59936c7f9720"}, "created_at": 1642461352.3238614, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SERVICE_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SERVICE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.ba9f53c643": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_e0e5ae400f1d9c7c72a48a5c95e24743\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_e0e5ae400f1d9c7c72a48a5c95e24743", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.ba9f53c643", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_e0e5ae400f1d9c7c72a48a5c95e24743.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_e0e5ae400f1d9c7c72a48a5c95e24743", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_e0e5ae400f1d9c7c72a48a5c95e24743.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_e0e5ae400f1d9c7c72a48a5c95e24743"}, "created_at": 1642461352.3288598, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM.190669a7bd": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_1d18bf648fefb1ba7a4e8e2282316bdd\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_1d18bf648fefb1ba7a4e8e2282316bdd", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM.190669a7bd", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_1d18bf648fefb1ba7a4e8e2282316bdd.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_1d18bf648fefb1ba7a4e8e2282316bdd", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_1d18bf648fefb1ba7a4e8e2282316bdd.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_1d18bf648fefb1ba7a4e8e2282316bdd"}, "created_at": 1642461352.3358717, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM.30b29be29c": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_2604b50a7f62b559367e3edba40dd5cb\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_2604b50a7f62b559367e3edba40dd5cb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM.30b29be29c", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_2604b50a7f62b559367e3edba40dd5cb.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_2604b50a7f62b559367e3edba40dd5cb", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_2604b50a7f62b559367e3edba40dd5cb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_2604b50a7f62b559367e3edba40dd5cb"}, "created_at": 1642461352.3428602, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.e6e90aebd5": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b9ca6bc7b978487a6626db56f486e79f\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b9ca6bc7b978487a6626db56f486e79f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.e6e90aebd5", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b9ca6bc7b978487a6626db56f486e79f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_b9ca6bc7b978487a6626db56f486e79f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b9ca6bc7b978487a6626db56f486e79f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b9ca6bc7b978487a6626db56f486e79f"}, "created_at": 1642461352.3488584, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.aa8023999f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_09b6c1ccf0f395bdebe775ba3b421109\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_09b6c1ccf0f395bdebe775ba3b421109", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.aa8023999f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_09b6c1ccf0f395bdebe775ba3b421109.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_09b6c1ccf0f395bdebe775ba3b421109", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_09b6c1ccf0f395bdebe775ba3b421109.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_09b6c1ccf0f395bdebe775ba3b421109"}, "created_at": 1642461352.356863, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.efcb049473": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_9c5ae89105604ed333620252bda8e75a\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_9c5ae89105604ed333620252bda8e75a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.efcb049473", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_9c5ae89105604ed333620252bda8e75a.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_9c5ae89105604ed333620252bda8e75a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_9c5ae89105604ed333620252bda8e75a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_9c5ae89105604ed333620252bda8e75a"}, "created_at": 1642461352.36286, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string.a348363466": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_594c6ba62ab0a439aa0c8f51947eb372\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_594c6ba62ab0a439aa0c8f51947eb372", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string.a348363466", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_594c6ba62ab0a439aa0c8f51947eb372.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_594c6ba62ab0a439aa0c8f51947eb372", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_594c6ba62ab0a439aa0c8f51947eb372.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_594c6ba62ab0a439aa0c8f51947eb372"}, "created_at": 1642461352.36786, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ITEM_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_PATIENT_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime.840ee0415d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ae56229cc24cf11e0a13a2da66dbac19\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ae56229cc24cf11e0a13a2da66dbac19", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime.840ee0415d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ae56229cc24cf11e0a13a2da66dbac19.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_ae56229cc24cf11e0a13a2da66dbac19", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ae56229cc24cf11e0a13a2da66dbac19.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ae56229cc24cf11e0a13a2da66dbac19"}, "created_at": 1642461352.3778603, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ITEM_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_PATIENT_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime.776ee3829c": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c5237397864bc20a76b7c2262cbade5d\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c5237397864bc20a76b7c2262cbade5d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime.776ee3829c", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c5237397864bc20a76b7c2262cbade5d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_c5237397864bc20a76b7c2262cbade5d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c5237397864bc20a76b7c2262cbade5d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c5237397864bc20a76b7c2262cbade5d"}, "created_at": 1642461352.3858674, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ITEM_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_PATIENT_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime.06793428fa": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_27d0e5c091d914e1a856138412c547a7\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "SERVICE_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_27d0e5c091d914e1a856138412c547a7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime.06793428fa", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_27d0e5c091d914e1a856138412c547a7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime", "alias": "dbt_expectations_source_expect_27d0e5c091d914e1a856138412c547a7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_27d0e5c091d914e1a856138412c547a7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_27d0e5c091d914e1a856138412c547a7"}, "created_at": 1642461352.3938587, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ITEM_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_PATIENT_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SERVICE_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SERVICE_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime.3575ba9248": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0f64bfd870ca2f891d73a0916e38ea38\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "VISIT_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'BILLING_SERVICE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0f64bfd870ca2f891d73a0916e38ea38", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime.3575ba9248", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0f64bfd870ca2f891d73a0916e38ea38.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime", "alias": "dbt_expectations_source_expect_0f64bfd870ca2f891d73a0916e38ea38", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0f64bfd870ca2f891d73a0916e38ea38.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0f64bfd870ca2f891d73a0916e38ea38"}, "created_at": 1642461352.3988566, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ITEM_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_PATIENT_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'VISIT_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "VISIT_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.5e339707bf": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_986259869edae83f5573ee07ec4ef260\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_986259869edae83f5573ee07ec4ef260", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.5e339707bf", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_986259869edae83f5573ee07ec4ef260.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_986259869edae83f5573ee07ec4ef260", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_986259869edae83f5573ee07ec4ef260.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_986259869edae83f5573ee07ec4ef260"}, "created_at": 1642461352.4048698, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.fa917fec4c": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3e1093438c2770ab96dfc4a016e7ac3c\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3e1093438c2770ab96dfc4a016e7ac3c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.fa917fec4c", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3e1093438c2770ab96dfc4a016e7ac3c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_3e1093438c2770ab96dfc4a016e7ac3c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3e1093438c2770ab96dfc4a016e7ac3c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3e1093438c2770ab96dfc4a016e7ac3c"}, "created_at": 1642461352.4108574, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT_MATCHED_USUAL_PROVIDER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string.aa3ceea01b": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ebf53d719fdd8f1620663d96b11119d5\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ebf53d719fdd8f1620663d96b11119d5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string.aa3ceea01b", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ebf53d719fdd8f1620663d96b11119d5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_ebf53d719fdd8f1620663d96b11119d5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ebf53d719fdd8f1620663d96b11119d5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ebf53d719fdd8f1620663d96b11119d5"}, "created_at": 1642461352.4148571, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_SALUTATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_FIRSTNAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_LASTNAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRM_PERSON_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ACRRM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_RACGP' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_AHPRA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRM_CONTACT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_PSA_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GENDER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_AGE_GROUP' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_DECEASED_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONTACT_RELATIONSHIP_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONTACT_RELATIONSHIP_END_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_MEDICINEINSIGHT_ROLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_REPORT_ACCESS_AUTHORISATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_COMMENTS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_STATUS_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_STATUS_END_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GP_MATCHING_ON_NAME_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER.b09d3160ef": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_8360bcdff06e5f121c20d4972e30f4af\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_8360bcdff06e5f121c20d4972e30f4af", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER.b09d3160ef", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_8360bcdff06e5f121c20d4972e30f4af.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER", "alias": "dbt_utils_source_not_null_prop_8360bcdff06e5f121c20d4972e30f4af", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_8360bcdff06e5f121c20d4972e30f4af.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_8360bcdff06e5f121c20d4972e30f4af"}, "created_at": 1642461352.419866, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATIENT_NUMBER is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT_MATCHED_USUAL_PROVIDER`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.c7c06685d3": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_433d0e341616e95ea892628566770b41\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_433d0e341616e95ea892628566770b41", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.c7c06685d3", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_433d0e341616e95ea892628566770b41.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID", "alias": "dbt_expectations_source_expect_433d0e341616e95ea892628566770b41", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_433d0e341616e95ea892628566770b41.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_433d0e341616e95ea892628566770b41"}, "created_at": 1642461352.4268756, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.ce865e7dfd": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_88ff688fc65a721d77c8e607ee102f0e\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_88ff688fc65a721d77c8e607ee102f0e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.ce865e7dfd", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_88ff688fc65a721d77c8e607ee102f0e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID", "alias": "dbt_expectations_source_expect_88ff688fc65a721d77c8e607ee102f0e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_88ff688fc65a721d77c8e607ee102f0e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_88ff688fc65a721d77c8e607ee102f0e"}, "created_at": 1642461352.4318564, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT_MATCHED_USUAL_PROVIDER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string.699240662a": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3767e8d51e6f9d82b129937942186972\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT_MATCHED_USUAL_PROVIDER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3767e8d51e6f9d82b129937942186972", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string.699240662a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3767e8d51e6f9d82b129937942186972.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string", "alias": "dbt_expectations_source_expect_3767e8d51e6f9d82b129937942186972", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3767e8d51e6f9d82b129937942186972.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3767e8d51e6f9d82b129937942186972"}, "created_at": 1642461352.4378598, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_SALUTATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_FIRSTNAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_LASTNAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRM_PERSON_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ACRRM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_RACGP' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_AHPRA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRM_CONTACT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_PSA_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GENDER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_AGE_GROUP' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_MEDICAL_TRAINING_IN_AUSTRALIA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_YEARS_PRACTICING_IN_AUSTRALIA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_DECEASED_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONTACT_RELATIONSHIP_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONTACT_RELATIONSHIP_END_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_MEDICINEINSIGHT_ROLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_REPORT_ACCESS_AUTHORISATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_COMMENTS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_STATUS_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CONSENT_STATUS_END_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GP_MATCHING_ON_PRESCRIBER_NUMBER_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GP_MATCHING_ON_PROVIDER_NUMBER_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_GP_MATCHING_ON_NAME_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.d35102fc07": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f52570c9802a22b508cc56f159e3207f\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f52570c9802a22b508cc56f159e3207f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.d35102fc07", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f52570c9802a22b508cc56f159e3207f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID", "alias": "dbt_expectations_source_expect_f52570c9802a22b508cc56f159e3207f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f52570c9802a22b508cc56f159e3207f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f52570c9802a22b508cc56f159e3207f"}, "created_at": 1642461352.4449012, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.3f1a577594": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f633b86b35a9caab7a8882da17ec6246\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f633b86b35a9caab7a8882da17ec6246", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.3f1a577594", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f633b86b35a9caab7a8882da17ec6246.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID", "alias": "dbt_expectations_source_expect_f633b86b35a9caab7a8882da17ec6246", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f633b86b35a9caab7a8882da17ec6246.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f633b86b35a9caab7a8882da17ec6246"}, "created_at": 1642461352.44886, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string.35b87fc341": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0b2e4f056a6438a91ead436501570a1d\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0b2e4f056a6438a91ead436501570a1d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string.35b87fc341", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0b2e4f056a6438a91ead436501570a1d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string", "alias": "dbt_expectations_source_expect_0b2e4f056a6438a91ead436501570a1d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0b2e4f056a6438a91ead436501570a1d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0b2e4f056a6438a91ead436501570a1d"}, "created_at": 1642461352.4548619, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DOCTOR_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NURSE_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_INACTIVE_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATE_DATETTIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_USER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1.b9271e0869": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_98883be4828b8667b2ff49721588112e\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 6, "column_name": "SERVICE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_98883be4828b8667b2ff49721588112e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1.b9271e0869", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_98883be4828b8667b2ff49721588112e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1", "alias": "dbt_expectations_source_expect_98883be4828b8667b2ff49721588112e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_98883be4828b8667b2ff49721588112e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_98883be4828b8667b2ff49721588112e"}, "created_at": 1642461352.4609022, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        SERVICE_ID\n    ) >= 1 and length(\n        SERVICE_ID\n    ) <= 6\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SERVICE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID.5d6da0b44f": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_5b6981585b19368671c13a4940cef550\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SERVICE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_5b6981585b19368671c13a4940cef550", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID.5d6da0b44f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_5b6981585b19368671c13a4940cef550.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID", "alias": "dbt_utils_source_not_null_prop_5b6981585b19368671c13a4940cef550", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_5b6981585b19368671c13a4940cef550.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_5b6981585b19368671c13a4940cef550"}, "created_at": 1642461352.4668994, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SERVICE_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SERVICE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD.422805cff4": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_63e7bed3b3c099bcaa3afdccf59b1409\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["PHC_BP", "BP", "MD", "PHC_MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_63e7bed3b3c099bcaa3afdccf59b1409", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD.422805cff4", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_63e7bed3b3c099bcaa3afdccf59b1409.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD", "alias": "dbt_expectations_source_expect_63e7bed3b3c099bcaa3afdccf59b1409", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_63e7bed3b3c099bcaa3afdccf59b1409.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_63e7bed3b3c099bcaa3afdccf59b1409"}, "created_at": 1642461352.4738584, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    \n\n),\nset_values as (\n\n    select\n        'PHC_BP' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'PHC_MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM.1df77c56c5": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_5d9d9d8eb5c9c92f97da20a2f22d4281\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_5d9d9d8eb5c9c92f97da20a2f22d4281", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM.1df77c56c5", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_5d9d9d8eb5c9c92f97da20a2f22d4281.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_5d9d9d8eb5c9c92f97da20a2f22d4281", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_5d9d9d8eb5c9c92f97da20a2f22d4281.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_5d9d9d8eb5c9c92f97da20a2f22d4281"}, "created_at": 1642461352.4808598, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM.06c1fd0354": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_41aa2580a67b99f1a032cba1d49c8dfb\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_41aa2580a67b99f1a032cba1d49c8dfb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM.06c1fd0354", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_41aa2580a67b99f1a032cba1d49c8dfb.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_41aa2580a67b99f1a032cba1d49c8dfb", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_41aa2580a67b99f1a032cba1d49c8dfb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_41aa2580a67b99f1a032cba1d49c8dfb"}, "created_at": 1642461352.486873, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.afde74abbb": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0f825294f6d720ac4ee2a705256c2813\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PRESCRIBER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0f825294f6d720ac4ee2a705256c2813", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.afde74abbb", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0f825294f6d720ac4ee2a705256c2813.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER", "alias": "dbt_expectations_source_expect_0f825294f6d720ac4ee2a705256c2813", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0f825294f6d720ac4ee2a705256c2813.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0f825294f6d720ac4ee2a705256c2813"}, "created_at": 1642461352.4938602, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PRESCRIBER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.db877ef8ce": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_cd901ce22d1997e3169f4c6ecde1efe5\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PRESCRIBER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_cd901ce22d1997e3169f4c6ecde1efe5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.db877ef8ce", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_cd901ce22d1997e3169f4c6ecde1efe5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER", "alias": "dbt_expectations_source_expect_cd901ce22d1997e3169f4c6ecde1efe5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_cd901ce22d1997e3169f4c6ecde1efe5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_cd901ce22d1997e3169f4c6ecde1efe5"}, "created_at": 1642461352.4978588, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PRESCRIBER_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PRESCRIBER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.cb3ba12f02": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_08fda995036a85b1fc8249e65464d1c1\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PRESCRIBER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_08fda995036a85b1fc8249e65464d1c1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.cb3ba12f02", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_08fda995036a85b1fc8249e65464d1c1.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER", "alias": "dbt_expectations_source_expect_08fda995036a85b1fc8249e65464d1c1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_08fda995036a85b1fc8249e65464d1c1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_08fda995036a85b1fc8249e65464d1c1"}, "created_at": 1642461352.5038722, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PRESCRIBER_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    where 1=1\n    \n    group by\n        PRESCRIBER_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PRESCRIBER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string.365a3dc0c2": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_cecb31838e9d1eff4a41a295ef2b9d72\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PRESCRIBER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_cecb31838e9d1eff4a41a295ef2b9d72", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string.365a3dc0c2", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_cecb31838e9d1eff4a41a295ef2b9d72.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string", "alias": "dbt_expectations_source_expect_cecb31838e9d1eff4a41a295ef2b9d72", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_cecb31838e9d1eff4a41a295ef2b9d72.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_cecb31838e9d1eff4a41a295ef2b9d72"}, "created_at": 1642461352.5099158, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DOCTOR_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NURSE_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_INACTIVE_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATE_DATETTIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_USER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PRESCRIBER_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PRESCRIBER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.5f256407a9": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_bb58ce60cbde6b9987aee8914ae03ad7\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PROVIDER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_bb58ce60cbde6b9987aee8914ae03ad7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.5f256407a9", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_bb58ce60cbde6b9987aee8914ae03ad7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER", "alias": "dbt_expectations_source_expect_bb58ce60cbde6b9987aee8914ae03ad7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_bb58ce60cbde6b9987aee8914ae03ad7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_bb58ce60cbde6b9987aee8914ae03ad7"}, "created_at": 1642461352.513943, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PROVIDER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.1720383e1b": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_54dbace2be347bbc4d02e448e25239ea\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PROVIDER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_54dbace2be347bbc4d02e448e25239ea", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.1720383e1b", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_54dbace2be347bbc4d02e448e25239ea.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER", "alias": "dbt_expectations_source_expect_54dbace2be347bbc4d02e448e25239ea", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_54dbace2be347bbc4d02e448e25239ea.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_54dbace2be347bbc4d02e448e25239ea"}, "created_at": 1642461352.5189247, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PROVIDER_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PROVIDER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.84c8809b85": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f1e39d8e2685584a655a723ea96e21e1\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PROVIDER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f1e39d8e2685584a655a723ea96e21e1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.84c8809b85", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f1e39d8e2685584a655a723ea96e21e1.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER", "alias": "dbt_expectations_source_expect_f1e39d8e2685584a655a723ea96e21e1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f1e39d8e2685584a655a723ea96e21e1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f1e39d8e2685584a655a723ea96e21e1"}, "created_at": 1642461352.52592, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PROVIDER_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`\n    where 1=1\n    \n    group by\n        PROVIDER_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PROVIDER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string.ccef86a17d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ca719e9f8298d427568f90b3f4c83d20\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PROVIDER_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ca719e9f8298d427568f90b3f4c83d20", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string.ccef86a17d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ca719e9f8298d427568f90b3f4c83d20.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string", "alias": "dbt_expectations_source_expect_ca719e9f8298d427568f90b3f4c83d20", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ca719e9f8298d427568f90b3f4c83d20.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ca719e9f8298d427568f90b3f4c83d20"}, "created_at": 1642461352.5309343, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DOCTOR_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NURSE_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_INACTIVE_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATE_DATETTIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_USER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROVIDER_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PROVIDER_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime.28495dcbeb": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_34df3bd446f440a457fc5809e3e2172d\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_34df3bd446f440a457fc5809e3e2172d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime.28495dcbeb", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_34df3bd446f440a457fc5809e3e2172d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_34df3bd446f440a457fc5809e3e2172d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_34df3bd446f440a457fc5809e3e2172d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_34df3bd446f440a457fc5809e3e2172d"}, "created_at": 1642461352.5359426, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DOCTOR_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NURSE_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_INACTIVE_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATE_DATETTIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_USER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime.d290c025c0": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_44b81686dc13942e0af4610a6e9a4978\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "PROVIDER_UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'CLINICAL_USER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_44b81686dc13942e0af4610a6e9a4978", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime.d290c025c0", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_44b81686dc13942e0af4610a6e9a4978.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_44b81686dc13942e0af4610a6e9a4978", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_44b81686dc13942e0af4610a6e9a4978.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_44b81686dc13942e0af4610a6e9a4978"}, "created_at": 1642461352.5419357, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CLINICAL_USER_TYPE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DOCTOR_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NURSE_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_CIS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_WORK_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_INACTIVE_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATE_DATETTIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_USER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER_VALID_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROVIDER_UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PROVIDER_UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.4d5b2aff42": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_dd625f7279b618d0486d6bb5e5dd2db8\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_dd625f7279b618d0486d6bb5e5dd2db8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.4d5b2aff42", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_dd625f7279b618d0486d6bb5e5dd2db8.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID", "alias": "dbt_expectations_source_expect_dd625f7279b618d0486d6bb5e5dd2db8", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_dd625f7279b618d0486d6bb5e5dd2db8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_dd625f7279b618d0486d6bb5e5dd2db8"}, "created_at": 1642461352.5469348, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.e92036c72b": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7e2615c310bab4ebf04142b6ce16c635\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7e2615c310bab4ebf04142b6ce16c635", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.e92036c72b", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7e2615c310bab4ebf04142b6ce16c635.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID", "alias": "dbt_expectations_source_expect_7e2615c310bab4ebf04142b6ce16c635", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7e2615c310bab4ebf04142b6ce16c635.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7e2615c310bab4ebf04142b6ce16c635"}, "created_at": 1642461352.5519338, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string.675b6df74f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_4615da9041084f9aa66163028d8ff023\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_4615da9041084f9aa66163028d8ff023", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string.675b6df74f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_4615da9041084f9aa66163028d8ff023.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string", "alias": "dbt_expectations_source_expect_4615da9041084f9aa66163028d8ff023", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_4615da9041084f9aa66163028d8ff023.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_4615da9041084f9aa66163028d8ff023"}, "created_at": 1642461352.5589323, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATE' as \n    string\n) as relation_column,\n            cast('DATE' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_DURATION' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOGICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHYSICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('EXACT_DUPLICATE_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTAINS_IMPORTED_ENCOUNTERS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1.50166821c0": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_4ef378a416f24fdc120d1443072dd8ba\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "ENCOUNTER_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_4ef378a416f24fdc120d1443072dd8ba", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1.50166821c0", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_4ef378a416f24fdc120d1443072dd8ba.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1", "alias": "dbt_expectations_source_expect_4ef378a416f24fdc120d1443072dd8ba", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_4ef378a416f24fdc120d1443072dd8ba.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_4ef378a416f24fdc120d1443072dd8ba"}, "created_at": 1642461352.5629323, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        ENCOUNTER_ID\n    ) >= 1 and length(\n        ENCOUNTER_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "ENCOUNTER_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID.0f6535467e": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_2d7e25f3ae8db5c9bcf6f226df008ae1\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "ENCOUNTER_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_2d7e25f3ae8db5c9bcf6f226df008ae1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID.0f6535467e", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_2d7e25f3ae8db5c9bcf6f226df008ae1.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID", "alias": "dbt_utils_source_not_null_prop_2d7e25f3ae8db5c9bcf6f226df008ae1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_2d7e25f3ae8db5c9bcf6f226df008ae1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_2d7e25f3ae8db5c9bcf6f226df008ae1"}, "created_at": 1642461352.5689404, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when ENCOUNTER_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "ENCOUNTER_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.e2105f54f0": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_48133f0f282a8bf060db033bedac6e71\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_48133f0f282a8bf060db033bedac6e71", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.e2105f54f0", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_48133f0f282a8bf060db033bedac6e71.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_48133f0f282a8bf060db033bedac6e71", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_48133f0f282a8bf060db033bedac6e71.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_48133f0f282a8bf060db033bedac6e71"}, "created_at": 1642461352.574936, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM.7d876e47e9": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_20c737ad00e4b3525b13b27fe364e7a1\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_20c737ad00e4b3525b13b27fe364e7a1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM.7d876e47e9", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_20c737ad00e4b3525b13b27fe364e7a1.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_20c737ad00e4b3525b13b27fe364e7a1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_20c737ad00e4b3525b13b27fe364e7a1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_20c737ad00e4b3525b13b27fe364e7a1"}, "created_at": 1642461352.581973, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM.ae40878b99": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_ba50e9b48c9ebc5a30d61f4ba6e7d974\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_ba50e9b48c9ebc5a30d61f4ba6e7d974", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM.ae40878b99", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_ba50e9b48c9ebc5a30d61f4ba6e7d974.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_ba50e9b48c9ebc5a30d61f4ba6e7d974", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_ba50e9b48c9ebc5a30d61f4ba6e7d974.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_ba50e9b48c9ebc5a30d61f4ba6e7d974"}, "created_at": 1642461352.5879416, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.8d7e3c4349": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_094d06e0ae125b220a8e2cd4ca94e748\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_094d06e0ae125b220a8e2cd4ca94e748", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.8d7e3c4349", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_094d06e0ae125b220a8e2cd4ca94e748.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_094d06e0ae125b220a8e2cd4ca94e748", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_094d06e0ae125b220a8e2cd4ca94e748.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_094d06e0ae125b220a8e2cd4ca94e748"}, "created_at": 1642461352.5939357, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.63feb4a016": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_e8860523212ce77412f36b640d13a6b9\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_e8860523212ce77412f36b640d13a6b9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.63feb4a016", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_e8860523212ce77412f36b640d13a6b9.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_e8860523212ce77412f36b640d13a6b9", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_e8860523212ce77412f36b640d13a6b9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_e8860523212ce77412f36b640d13a6b9"}, "created_at": 1642461352.5979345, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.62e2e3b638": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_fac8777330fd71624054ef023cef084e\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_fac8777330fd71624054ef023cef084e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.62e2e3b638", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_fac8777330fd71624054ef023cef084e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_fac8777330fd71624054ef023cef084e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_fac8777330fd71624054ef023cef084e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_fac8777330fd71624054ef023cef084e"}, "created_at": 1642461352.6039467, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string.c82580e626": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_62d883507acfb47ba5875294bfe13546\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_62d883507acfb47ba5875294bfe13546", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string.c82580e626", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_62d883507acfb47ba5875294bfe13546.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_62d883507acfb47ba5875294bfe13546", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_62d883507acfb47ba5875294bfe13546.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_62d883507acfb47ba5875294bfe13546"}, "created_at": 1642461352.6089344, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATE' as \n    string\n) as relation_column,\n            cast('DATE' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_DURATION' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOGICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHYSICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('EXACT_DUPLICATE_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTAINS_IMPORTED_ENCOUNTERS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime.f10448be72": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_40a98275a1070cc8f5a9ec7056e0b66c\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_40a98275a1070cc8f5a9ec7056e0b66c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime.f10448be72", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_40a98275a1070cc8f5a9ec7056e0b66c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_40a98275a1070cc8f5a9ec7056e0b66c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_40a98275a1070cc8f5a9ec7056e0b66c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_40a98275a1070cc8f5a9ec7056e0b66c"}, "created_at": 1642461352.6129727, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATE' as \n    string\n) as relation_column,\n            cast('DATE' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_DURATION' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOGICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHYSICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('EXACT_DUPLICATE_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTAINS_IMPORTED_ENCOUNTERS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime.bcb06831f8": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_656c82230ad84fee9d05649e02d9eb94\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_656c82230ad84fee9d05649e02d9eb94", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime.bcb06831f8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_656c82230ad84fee9d05649e02d9eb94.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_656c82230ad84fee9d05649e02d9eb94", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_656c82230ad84fee9d05649e02d9eb94.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_656c82230ad84fee9d05649e02d9eb94"}, "created_at": 1642461352.6169724, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATE' as \n    string\n) as relation_column,\n            cast('DATE' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_DURATION' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOGICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHYSICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('EXACT_DUPLICATE_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTAINS_IMPORTED_ENCOUNTERS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime.79e8e8d9bf": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_71f0b6d0a973dd0f184b18cd4d540144\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "VISIT_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_71f0b6d0a973dd0f184b18cd4d540144", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime.79e8e8d9bf", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_71f0b6d0a973dd0f184b18cd4d540144.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime", "alias": "dbt_expectations_source_expect_71f0b6d0a973dd0f184b18cd4d540144", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_71f0b6d0a973dd0f184b18cd4d540144.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_71f0b6d0a973dd0f184b18cd4d540144"}, "created_at": 1642461352.6219757, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATE' as \n    string\n) as relation_column,\n            cast('DATE' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATETIME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_DURATION' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOGICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHYSICAL_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('EXACT_DUPLICATE_ENCOUNTER_COUNT' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTAINS_IMPORTED_ENCOUNTERS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'VISIT_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "VISIT_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.f7ebbb98d0": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_d11d0010d72352d7efcd86ffb1bde443\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_d11d0010d72352d7efcd86ffb1bde443", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.f7ebbb98d0", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_d11d0010d72352d7efcd86ffb1bde443.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID", "alias": "dbt_expectations_source_expect_d11d0010d72352d7efcd86ffb1bde443", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_d11d0010d72352d7efcd86ffb1bde443.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_d11d0010d72352d7efcd86ffb1bde443"}, "created_at": 1642461352.6269755, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.3a20765014": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c9aeec2772cfe6a2010a36709b9d68b2\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c9aeec2772cfe6a2010a36709b9d68b2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.3a20765014", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c9aeec2772cfe6a2010a36709b9d68b2.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID", "alias": "dbt_expectations_source_expect_c9aeec2772cfe6a2010a36709b9d68b2", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c9aeec2772cfe6a2010a36709b9d68b2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c9aeec2772cfe6a2010a36709b9d68b2"}, "created_at": 1642461352.630973, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string.e6dc7da5ac": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_e5274b700d2588ef0902d8270e37642e\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_e5274b700d2588ef0902d8270e37642e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string.e6dc7da5ac", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_e5274b700d2588ef0902d8270e37642e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string", "alias": "dbt_expectations_source_expect_e5274b700d2588ef0902d8270e37642e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_e5274b700d2588ef0902d8270e37642e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_e5274b700d2588ef0902d8270e37642e"}, "created_at": 1642461352.6339743, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1.bb695a2638": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_8d4060a5869a5ada135891720949dfd4\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "ENCOUNTER_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_8d4060a5869a5ada135891720949dfd4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1.bb695a2638", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_8d4060a5869a5ada135891720949dfd4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1", "alias": "dbt_expectations_source_expect_8d4060a5869a5ada135891720949dfd4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_8d4060a5869a5ada135891720949dfd4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_8d4060a5869a5ada135891720949dfd4"}, "created_at": 1642461352.6382172, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        ENCOUNTER_ID\n    ) >= 1 and length(\n        ENCOUNTER_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "ENCOUNTER_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID.29b08089ee": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_cc1cc0a1c685ff77eb09f26aee4ab965\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "ENCOUNTER_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_cc1cc0a1c685ff77eb09f26aee4ab965", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID.29b08089ee", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_cc1cc0a1c685ff77eb09f26aee4ab965.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID", "alias": "dbt_utils_source_not_null_prop_cc1cc0a1c685ff77eb09f26aee4ab965", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_cc1cc0a1c685ff77eb09f26aee4ab965.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_cc1cc0a1c685ff77eb09f26aee4ab965"}, "created_at": 1642461352.6432614, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when ENCOUNTER_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "ENCOUNTER_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC.91dad824e7": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_86cbac4df6a51d32f4541df0cbedeab3\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["PHC_BP", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_86cbac4df6a51d32f4541df0cbedeab3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC.91dad824e7", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_86cbac4df6a51d32f4541df0cbedeab3.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_86cbac4df6a51d32f4541df0cbedeab3", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_86cbac4df6a51d32f4541df0cbedeab3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_86cbac4df6a51d32f4541df0cbedeab3"}, "created_at": 1642461352.6472652, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n    \n\n),\nset_values as (\n\n    select\n        'PHC_BP' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM.763321588e": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b4b5dff8c898a93d15f2776e771b7814\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b4b5dff8c898a93d15f2776e771b7814", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM.763321588e", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b4b5dff8c898a93d15f2776e771b7814.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_b4b5dff8c898a93d15f2776e771b7814", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b4b5dff8c898a93d15f2776e771b7814.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b4b5dff8c898a93d15f2776e771b7814"}, "created_at": 1642461352.6515024, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM.18b37002e8": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_6e8eef9a43faf3169bf207474701aa39\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_6e8eef9a43faf3169bf207474701aa39", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM.18b37002e8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_6e8eef9a43faf3169bf207474701aa39.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_6e8eef9a43faf3169bf207474701aa39", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_6e8eef9a43faf3169bf207474701aa39.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_6e8eef9a43faf3169bf207474701aa39"}, "created_at": 1642461352.6565433, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.5e5d7f08d6": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7a22686cc1cda1e5c04713e98d2e003f\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7a22686cc1cda1e5c04713e98d2e003f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.5e5d7f08d6", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7a22686cc1cda1e5c04713e98d2e003f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_7a22686cc1cda1e5c04713e98d2e003f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7a22686cc1cda1e5c04713e98d2e003f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7a22686cc1cda1e5c04713e98d2e003f"}, "created_at": 1642461352.6598315, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.76b3d307e3": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_bebfe3394a42223338bd86dbfef363c4\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_bebfe3394a42223338bd86dbfef363c4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.76b3d307e3", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_bebfe3394a42223338bd86dbfef363c4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_bebfe3394a42223338bd86dbfef363c4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_bebfe3394a42223338bd86dbfef363c4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_bebfe3394a42223338bd86dbfef363c4"}, "created_at": 1642461352.6638324, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.ca5b5fa887": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b760d9667293658933f41e186140a069\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b760d9667293658933f41e186140a069", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.ca5b5fa887", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b760d9667293658933f41e186140a069.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_b760d9667293658933f41e186140a069", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b760d9667293658933f41e186140a069.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b760d9667293658933f41e186140a069"}, "created_at": 1642461352.6680877, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string.4761b6841d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b1c5480c2f3c21e00cea32ecc2066eba\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b1c5480c2f3c21e00cea32ecc2066eba", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string.4761b6841d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b1c5480c2f3c21e00cea32ecc2066eba.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_b1c5480c2f3c21e00cea32ecc2066eba", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b1c5480c2f3c21e00cea32ecc2066eba.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b1c5480c2f3c21e00cea32ecc2066eba"}, "created_at": 1642461352.6711152, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime.d540a96328": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_071269b53adba49da1e9758a6a52d8ef\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_071269b53adba49da1e9758a6a52d8ef", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime.d540a96328", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_071269b53adba49da1e9758a6a52d8ef.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_071269b53adba49da1e9758a6a52d8ef", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_071269b53adba49da1e9758a6a52d8ef.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_071269b53adba49da1e9758a6a52d8ef"}, "created_at": 1642461352.6761303, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime.0af2a2bf66": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_9e6ddead051903621bf20fedbecd6f17\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'ENCOUNTER_REASON')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_9e6ddead051903621bf20fedbecd6f17", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime.0af2a2bf66", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_9e6ddead051903621bf20fedbecd6f17.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_9e6ddead051903621bf20fedbecd6f17", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_9e6ddead051903621bf20fedbecd6f17.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_9e6ddead051903621bf20fedbecd6f17"}, "created_at": 1642461352.6813438, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VISIT_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_REASON_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.20e5c10167": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_2472e046617d5de0e9dec304302ed7da\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_2472e046617d5de0e9dec304302ed7da", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.20e5c10167", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_2472e046617d5de0e9dec304302ed7da.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID", "alias": "dbt_expectations_source_expect_2472e046617d5de0e9dec304302ed7da", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_2472e046617d5de0e9dec304302ed7da.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_2472e046617d5de0e9dec304302ed7da"}, "created_at": 1642461352.685353, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            30 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.0d930daa0c": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f9aa7e5734026d20f116cd2c87ff441c\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f9aa7e5734026d20f116cd2c87ff441c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.0d930daa0c", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f9aa7e5734026d20f116cd2c87ff441c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID", "alias": "dbt_expectations_source_expect_f9aa7e5734026d20f116cd2c87ff441c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f9aa7e5734026d20f116cd2c87ff441c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f9aa7e5734026d20f116cd2c87ff441c"}, "created_at": 1642461352.6893547, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string.7d5ae53e72": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_a682c9562c0938b1eec4eccb29885cc5\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_a682c9562c0938b1eec4eccb29885cc5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string.7d5ae53e72", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_a682c9562c0938b1eec4eccb29885cc5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string", "alias": "dbt_expectations_source_expect_a682c9562c0938b1eec4eccb29885cc5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_a682c9562c0938b1eec4eccb29885cc5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_a682c9562c0938b1eec4eccb29885cc5"}, "created_at": 1642461352.693357, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMMUNISATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_HERE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('BATCH_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SEQUENCE_NUMBER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_PROVIDER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_ROUTE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_PRINTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('AGE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_TRANSMITTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_AGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_IMM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRINTED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRUG_NO' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA_SENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1.a4a4ab82b7": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7daf5e950d6beaa5e4d94d05030d4518\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "IMMUNISATION_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7daf5e950d6beaa5e4d94d05030d4518", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1.a4a4ab82b7", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7daf5e950d6beaa5e4d94d05030d4518.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1", "alias": "dbt_expectations_source_expect_7daf5e950d6beaa5e4d94d05030d4518", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7daf5e950d6beaa5e4d94d05030d4518.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7daf5e950d6beaa5e4d94d05030d4518"}, "created_at": 1642461352.6973526, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        IMMUNISATION_ID\n    ) >= 1 and length(\n        IMMUNISATION_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "IMMUNISATION_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID.3b52e192b5": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_215ca18e6005651b0a42ae2506cdcce9\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "IMMUNISATION_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_215ca18e6005651b0a42ae2506cdcce9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID.3b52e192b5", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_215ca18e6005651b0a42ae2506cdcce9.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID", "alias": "dbt_utils_source_not_null_prop_215ca18e6005651b0a42ae2506cdcce9", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_215ca18e6005651b0a42ae2506cdcce9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_215ca18e6005651b0a42ae2506cdcce9"}, "created_at": 1642461352.701357, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when IMMUNISATION_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "IMMUNISATION_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.6f37d9a460": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_e1b16b0b6e0facdd2239be8eaf9a24e5\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_e1b16b0b6e0facdd2239be8eaf9a24e5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.6f37d9a460", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_e1b16b0b6e0facdd2239be8eaf9a24e5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_e1b16b0b6e0facdd2239be8eaf9a24e5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_e1b16b0b6e0facdd2239be8eaf9a24e5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_e1b16b0b6e0facdd2239be8eaf9a24e5"}, "created_at": 1642461352.7053528, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM.83a81824c7": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_d1068368ae8c7c9556463b1d7ad44301\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_d1068368ae8c7c9556463b1d7ad44301", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM.83a81824c7", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_d1068368ae8c7c9556463b1d7ad44301.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_d1068368ae8c7c9556463b1d7ad44301", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_d1068368ae8c7c9556463b1d7ad44301.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_d1068368ae8c7c9556463b1d7ad44301"}, "created_at": 1642461352.7114854, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM.b352c945c2": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_6cabdafd0227ad38b6a8e08e77da2e89\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_6cabdafd0227ad38b6a8e08e77da2e89", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM.b352c945c2", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_6cabdafd0227ad38b6a8e08e77da2e89.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_6cabdafd0227ad38b6a8e08e77da2e89", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_6cabdafd0227ad38b6a8e08e77da2e89.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_6cabdafd0227ad38b6a8e08e77da2e89"}, "created_at": 1642461352.715486, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c8f4795651": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7fedd502c3833a7ac2ee843418a7e681\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7fedd502c3833a7ac2ee843418a7e681", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c8f4795651", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7fedd502c3833a7ac2ee843418a7e681.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_7fedd502c3833a7ac2ee843418a7e681", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7fedd502c3833a7ac2ee843418a7e681.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7fedd502c3833a7ac2ee843418a7e681"}, "created_at": 1642461352.7196417, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.237196fdbb": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3e3e7ce6cf5a062b4348f0b364ad4538\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3e3e7ce6cf5a062b4348f0b364ad4538", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.237196fdbb", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3e3e7ce6cf5a062b4348f0b364ad4538.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_3e3e7ce6cf5a062b4348f0b364ad4538", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3e3e7ce6cf5a062b4348f0b364ad4538.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3e3e7ce6cf5a062b4348f0b364ad4538"}, "created_at": 1642461352.7246091, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c9a15fbf04": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_21793af3618d7c4f1c65e5412b8d0344\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_21793af3618d7c4f1c65e5412b8d0344", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c9a15fbf04", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_21793af3618d7c4f1c65e5412b8d0344.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_21793af3618d7c4f1c65e5412b8d0344", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_21793af3618d7c4f1c65e5412b8d0344.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_21793af3618d7c4f1c65e5412b8d0344"}, "created_at": 1642461352.7289407, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string.623fb18c42": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_452427252935d027d7baac45b2fd78a2\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_452427252935d027d7baac45b2fd78a2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string.623fb18c42", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_452427252935d027d7baac45b2fd78a2.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_452427252935d027d7baac45b2fd78a2", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_452427252935d027d7baac45b2fd78a2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_452427252935d027d7baac45b2fd78a2"}, "created_at": 1642461352.7329364, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMMUNISATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_HERE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('BATCH_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SEQUENCE_NUMBER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_PROVIDER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_ROUTE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_PRINTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('AGE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_TRANSMITTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_AGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_IMM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRINTED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRUG_NO' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA_SENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime.435ce410a1": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_77536d78a808f4b10703394735cdf548\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_77536d78a808f4b10703394735cdf548", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime.435ce410a1", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_77536d78a808f4b10703394735cdf548.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_77536d78a808f4b10703394735cdf548", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_77536d78a808f4b10703394735cdf548.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_77536d78a808f4b10703394735cdf548"}, "created_at": 1642461352.7379231, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMMUNISATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_HERE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('BATCH_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SEQUENCE_NUMBER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_PROVIDER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_ROUTE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_PRINTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('AGE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_TRANSMITTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_AGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_IMM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRINTED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRUG_NO' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA_SENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime.9031c53a57": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_1f705f2bb2facf366c1342b3cd2d3b72\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'IMMUNISATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_1f705f2bb2facf366c1342b3cd2d3b72", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime.9031c53a57", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_1f705f2bb2facf366c1342b3cd2d3b72.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_1f705f2bb2facf366c1342b3cd2d3b72", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_1f705f2bb2facf366c1342b3cd2d3b72.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_1f705f2bb2facf366c1342b3cd2d3b72"}, "created_at": 1642461352.7419255, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMMUNISATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_HERE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GIVEN_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VACCINE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('BATCH_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SEQUENCE_NUMBER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONSENT_PROVIDER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ADMINISTERED_ROUTE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('VIVAS_PRINTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('AGE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ACIR_TRANSMITTED_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_AGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INTERNAL_IMM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_BY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRINTED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DRUG_NO' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('INFLUENZA_SENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.e5d82452b4": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_50976459efbd733c2ae2647af188c469\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_50976459efbd733c2ae2647af188c469", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.e5d82452b4", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_50976459efbd733c2ae2647af188c469.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID", "alias": "dbt_expectations_source_expect_50976459efbd733c2ae2647af188c469", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_50976459efbd733c2ae2647af188c469.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_50976459efbd733c2ae2647af188c469"}, "created_at": 1642461352.746923, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.8fc68ba0ac": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_bde682cb05cac2310233ba449909ebaf\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_bde682cb05cac2310233ba449909ebaf", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.8fc68ba0ac", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_bde682cb05cac2310233ba449909ebaf.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID", "alias": "dbt_expectations_source_expect_bde682cb05cac2310233ba449909ebaf", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_bde682cb05cac2310233ba449909ebaf.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_bde682cb05cac2310233ba449909ebaf"}, "created_at": 1642461352.7508955, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string.9358535707": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7a3a511f39ed1d4158d1704424870de8\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7a3a511f39ed1d4158d1704424870de8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string.9358535707", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7a3a511f39ed1d4158d1704424870de8.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string", "alias": "dbt_expectations_source_expect_7a3a511f39ed1d4158d1704424870de8", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7a3a511f39ed1d4158d1704424870de8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7a3a511f39ed1d4158d1704424870de8"}, "created_at": 1642461352.7548978, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_MODIFIER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1.9efa18b1cc": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b2e00d3bddedcd7d2e2f7273516977e9\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "OBSERVATION_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b2e00d3bddedcd7d2e2f7273516977e9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1.9efa18b1cc", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b2e00d3bddedcd7d2e2f7273516977e9.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1", "alias": "dbt_expectations_source_expect_b2e00d3bddedcd7d2e2f7273516977e9", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b2e00d3bddedcd7d2e2f7273516977e9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b2e00d3bddedcd7d2e2f7273516977e9"}, "created_at": 1642461352.7599268, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        OBSERVATION_ID\n    ) >= 1 and length(\n        OBSERVATION_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "OBSERVATION_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID.b1ee3d1352": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_33724788caa42da67b7668fb6a44aeb0\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "OBSERVATION_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_33724788caa42da67b7668fb6a44aeb0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID.b1ee3d1352", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_33724788caa42da67b7668fb6a44aeb0.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID", "alias": "dbt_utils_source_not_null_prop_33724788caa42da67b7668fb6a44aeb0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_33724788caa42da67b7668fb6a44aeb0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_33724788caa42da67b7668fb6a44aeb0"}, "created_at": 1642461352.7648957, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when OBSERVATION_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "OBSERVATION_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.8e09d9bbb0": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f33f9285cef0b4f43d75bbc0b7ea74e8\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f33f9285cef0b4f43d75bbc0b7ea74e8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.8e09d9bbb0", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f33f9285cef0b4f43d75bbc0b7ea74e8.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_f33f9285cef0b4f43d75bbc0b7ea74e8", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f33f9285cef0b4f43d75bbc0b7ea74e8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f33f9285cef0b4f43d75bbc0b7ea74e8"}, "created_at": 1642461352.7718954, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM.4550056a41": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_e5fc55277c841cd4e94cfe790af69041\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_e5fc55277c841cd4e94cfe790af69041", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM.4550056a41", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_e5fc55277c841cd4e94cfe790af69041.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_e5fc55277c841cd4e94cfe790af69041", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_e5fc55277c841cd4e94cfe790af69041.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_e5fc55277c841cd4e94cfe790af69041"}, "created_at": 1642461352.7768967, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM.df285b185f": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_1b5d1c2d5f95c0f005620aecd6973ca6\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_1b5d1c2d5f95c0f005620aecd6973ca6", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM.df285b185f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_1b5d1c2d5f95c0f005620aecd6973ca6.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_1b5d1c2d5f95c0f005620aecd6973ca6", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_1b5d1c2d5f95c0f005620aecd6973ca6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_1b5d1c2d5f95c0f005620aecd6973ca6"}, "created_at": 1642461352.783895, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.efa9fcbdf5": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c17424641be6467c7987bdde9c500791\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c17424641be6467c7987bdde9c500791", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.efa9fcbdf5", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c17424641be6467c7987bdde9c500791.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_c17424641be6467c7987bdde9c500791", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c17424641be6467c7987bdde9c500791.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c17424641be6467c7987bdde9c500791"}, "created_at": 1642461352.7888985, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.6714a2cf69": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f420997c845cae4f09d6b084129fad2d\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f420997c845cae4f09d6b084129fad2d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.6714a2cf69", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f420997c845cae4f09d6b084129fad2d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_f420997c845cae4f09d6b084129fad2d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f420997c845cae4f09d6b084129fad2d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f420997c845cae4f09d6b084129fad2d"}, "created_at": 1642461352.7928953, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.47faefc17a": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_d6fe7eceeeaee5f95b1e6f30f9042c2a\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_d6fe7eceeeaee5f95b1e6f30f9042c2a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.47faefc17a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_d6fe7eceeeaee5f95b1e6f30f9042c2a.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_d6fe7eceeeaee5f95b1e6f30f9042c2a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_d6fe7eceeeaee5f95b1e6f30f9042c2a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_d6fe7eceeeaee5f95b1e6f30f9042c2a"}, "created_at": 1642461352.7979367, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string.701807bd76": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_994f3fe769b8db61cc9ea591f339667a\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_994f3fe769b8db61cc9ea591f339667a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string.701807bd76", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_994f3fe769b8db61cc9ea591f339667a.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_994f3fe769b8db61cc9ea591f339667a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_994f3fe769b8db61cc9ea591f339667a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_994f3fe769b8db61cc9ea591f339667a"}, "created_at": 1642461352.8028982, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_MODIFIER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime.b65e56b988": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_6cb1b8f1aced68f1b6b387fc304fc20d\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_6cb1b8f1aced68f1b6b387fc304fc20d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime.b65e56b988", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_6cb1b8f1aced68f1b6b387fc304fc20d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_6cb1b8f1aced68f1b6b387fc304fc20d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_6cb1b8f1aced68f1b6b387fc304fc20d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_6cb1b8f1aced68f1b6b387fc304fc20d"}, "created_at": 1642461352.8069363, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_MODIFIER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime.33498972fa": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_16c7d71a423f36f27e4757bde9950725\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_16c7d71a423f36f27e4757bde9950725", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime.33498972fa", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_16c7d71a423f36f27e4757bde9950725.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_16c7d71a423f36f27e4757bde9950725", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_16c7d71a423f36f27e4757bde9950725.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_16c7d71a423f36f27e4757bde9950725"}, "created_at": 1642461352.8119338, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_MODIFIER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime.dbea157205": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_a119ba02366b23e3eb71a5f719c3bdec\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "OBSERVATION_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'OBSERVATION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_a119ba02366b23e3eb71a5f719c3bdec", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime.dbea157205", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_a119ba02366b23e3eb71a5f719c3bdec.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime", "alias": "dbt_expectations_source_expect_a119ba02366b23e3eb71a5f719c3bdec", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_a119ba02366b23e3eb71a5f719c3bdec.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_a119ba02366b23e3eb71a5f719c3bdec"}, "created_at": 1642461352.8169339, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_MODIFIER' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'OBSERVATION_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "OBSERVATION_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.75f07a569f": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_1299c9e3acaad612c95dde375bf66355\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_CONTACT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_1299c9e3acaad612c95dde375bf66355", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.75f07a569f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_1299c9e3acaad612c95dde375bf66355.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID", "alias": "dbt_expectations_source_expect_1299c9e3acaad612c95dde375bf66355", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_CONTACT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_1299c9e3acaad612c95dde375bf66355.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_1299c9e3acaad612c95dde375bf66355"}, "created_at": 1642461352.821937, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.5554a5f286": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c12faa6b486e63ee06de65a3aa5e5ab2\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_CONTACT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c12faa6b486e63ee06de65a3aa5e5ab2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.5554a5f286", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c12faa6b486e63ee06de65a3aa5e5ab2.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID", "alias": "dbt_expectations_source_expect_c12faa6b486e63ee06de65a3aa5e5ab2", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_CONTACT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c12faa6b486e63ee06de65a3aa5e5ab2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c12faa6b486e63ee06de65a3aa5e5ab2"}, "created_at": 1642461352.8258958, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_CONTACT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string.d21d602399": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_748e51158778ba21f35c85a2dfc6b63d\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_CONTACT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_748e51158778ba21f35c85a2dfc6b63d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string.d21d602399", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_748e51158778ba21f35c85a2dfc6b63d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string", "alias": "dbt_expectations_source_expect_748e51158778ba21f35c85a2dfc6b63d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_CONTACT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_748e51158778ba21f35c85a2dfc6b63d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_748e51158778ba21f35c85a2dfc6b63d"}, "created_at": 1642461352.8309371, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRMID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRM_CONTACT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTACT_SALUTATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTACT_FIRSTNAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTACT_LASTNAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTACT_NPS_ROLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONTACT_MEDICINEINSIGHT_ROLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID.ccffdc9b09": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_47765c9a1194e7d5c2281b0a9ab0a0df\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_CONTACT')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_47765c9a1194e7d5c2281b0a9ab0a0df", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID.ccffdc9b09", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_47765c9a1194e7d5c2281b0a9ab0a0df.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID", "alias": "dbt_utils_source_not_null_prop_47765c9a1194e7d5c2281b0a9ab0a0df", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_CONTACT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_47765c9a1194e7d5c2281b0a9ab0a0df.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_47765c9a1194e7d5c2281b0a9ab0a0df"}, "created_at": 1642461352.834897, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SITE_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_CONTACT`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.761dde4cb8": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7c30915ac3db6888346a57654d801afb\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_RECRUITMENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7c30915ac3db6888346a57654d801afb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.761dde4cb8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7c30915ac3db6888346a57654d801afb.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID", "alias": "dbt_expectations_source_expect_7c30915ac3db6888346a57654d801afb", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_RECRUITMENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7c30915ac3db6888346a57654d801afb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7c30915ac3db6888346a57654d801afb"}, "created_at": 1642461352.8399377, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.2a6d8e9ede": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b52ea2e425cf72901a017c070fc682d7\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_RECRUITMENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b52ea2e425cf72901a017c070fc682d7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.2a6d8e9ede", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b52ea2e425cf72901a017c070fc682d7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID", "alias": "dbt_expectations_source_expect_b52ea2e425cf72901a017c070fc682d7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_RECRUITMENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b52ea2e425cf72901a017c070fc682d7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b52ea2e425cf72901a017c070fc682d7"}, "created_at": 1642461352.8438973, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_RECRUITMENT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string.b5b324c083": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_79f8f24424edf97ae136200d21836a2f\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_RECRUITMENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_79f8f24424edf97ae136200d21836a2f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string.b5b324c083", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_79f8f24424edf97ae136200d21836a2f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string", "alias": "dbt_expectations_source_expect_79f8f24424edf97ae136200d21836a2f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_RECRUITMENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_79f8f24424edf97ae136200d21836a2f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_79f8f24424edf97ae136200d21836a2f"}, "created_at": 1642461352.84793, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CRMID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_ADDRESS_STREET1' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_ADDRESS_STREET2' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_SUBURB' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_POSTCODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_STATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_NUMBER_OF_GP' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_CATEGORY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_FULLTIME_EMPLOYEES' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_RECRUITMENT_ONBOARDING_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_RECRUITMENT_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROGRAM_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECRUITMENT_CHANNEL' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECRUITMENT_AGREED_SIGNED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTICE_RECRUITMENT_WITHDRAWN_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID.f7540b2473": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_9911702ef74da094aeeb07e038bcca03\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRACTICE_RECRUITMENT')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_9911702ef74da094aeeb07e038bcca03", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID.f7540b2473", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_9911702ef74da094aeeb07e038bcca03.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID", "alias": "dbt_utils_source_not_null_prop_9911702ef74da094aeeb07e038bcca03", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_RECRUITMENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_9911702ef74da094aeeb07e038bcca03.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_9911702ef74da094aeeb07e038bcca03"}, "created_at": 1642461352.8518958, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SITE_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_RECRUITMENT`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.875495fdfd": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f437b728ce97af48c311be784522aa9f\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["PHC_BP", "PHC_MD", "BP", "MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'REFERRALS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REFERRALS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f437b728ce97af48c311be784522aa9f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.875495fdfd", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f437b728ce97af48c311be784522aa9f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD", "alias": "dbt_expectations_source_expect_f437b728ce97af48c311be784522aa9f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "REFERRALS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f437b728ce97af48c311be784522aa9f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f437b728ce97af48c311be784522aa9f"}, "created_at": 1642461352.8568962, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`REFERRALS`\n    \n\n),\nset_values as (\n\n    select\n        'PHC_BP' as value_field\n    union all\n    select\n        'PHC_MD' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.fd50271a42": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_16aa1c8ae1951045776a51c507dde20b\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "MD_PHC", "BP", "MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'REQUESTED_TEST')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REQUESTED_TEST"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_16aa1c8ae1951045776a51c507dde20b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.fd50271a42", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_16aa1c8ae1951045776a51c507dde20b.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD", "alias": "dbt_expectations_source_expect_16aa1c8ae1951045776a51c507dde20b", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "REQUESTED_TEST"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_16aa1c8ae1951045776a51c507dde20b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_16aa1c8ae1951045776a51c507dde20b"}, "created_at": 1642461352.8629339, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`REQUESTED_TEST`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.c5d35cc7e8": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_5b364b71888a92c3b34caa49d60ef13b\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_ALBUMIN')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_5b364b71888a92c3b34caa49d60ef13b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.c5d35cc7e8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_5b364b71888a92c3b34caa49d60ef13b.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_5b364b71888a92c3b34caa49d60ef13b", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_ALBUMIN"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_5b364b71888a92c3b34caa49d60ef13b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_5b364b71888a92c3b34caa49d60ef13b"}, "created_at": 1642461352.8679283, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.7091c71229": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3b045af64cb4b8816e2c5544b9ccca54\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_ALBUMIN')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3b045af64cb4b8816e2c5544b9ccca54", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.7091c71229", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3b045af64cb4b8816e2c5544b9ccca54.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_3b045af64cb4b8816e2c5544b9ccca54", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_ALBUMIN"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3b045af64cb4b8816e2c5544b9ccca54.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3b045af64cb4b8816e2c5544b9ccca54"}, "created_at": 1642461352.8729272, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATHOLOGY_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_ALBUMIN`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID.1add980c05": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_0095b35a052a5b3c3bb408f08ba14402\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_ALBUMIN')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_0095b35a052a5b3c3bb408f08ba14402", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID.1add980c05", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_0095b35a052a5b3c3bb408f08ba14402.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID", "alias": "dbt_utils_source_not_null_prop_0095b35a052a5b3c3bb408f08ba14402", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_ALBUMIN"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_0095b35a052a5b3c3bb408f08ba14402.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_0095b35a052a5b3c3bb408f08ba14402"}, "created_at": 1642461352.876939, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATHOLOGY_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_ALBUMIN`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.7aa4258877": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_de6acf5c351d7449c070e4e92d2a81ba\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_EGFR')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_de6acf5c351d7449c070e4e92d2a81ba", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.7aa4258877", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_de6acf5c351d7449c070e4e92d2a81ba.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_de6acf5c351d7449c070e4e92d2a81ba", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_EGFR"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_de6acf5c351d7449c070e4e92d2a81ba.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_de6acf5c351d7449c070e4e92d2a81ba"}, "created_at": 1642461352.8799384, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.e440c18fff": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_9788e98e732a895d6240368b9eac3ea4\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_EGFR')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_9788e98e732a895d6240368b9eac3ea4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.e440c18fff", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_9788e98e732a895d6240368b9eac3ea4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_9788e98e732a895d6240368b9eac3ea4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_EGFR"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_9788e98e732a895d6240368b9eac3ea4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_9788e98e732a895d6240368b9eac3ea4"}, "created_at": 1642461352.883938, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATHOLOGY_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_EGFR`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID.2259a8262b": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_2cf34df00b6724cf6b24c6f95a75f733\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_EGFR')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_2cf34df00b6724cf6b24c6f95a75f733", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID.2259a8262b", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_2cf34df00b6724cf6b24c6f95a75f733.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID", "alias": "dbt_utils_source_not_null_prop_2cf34df00b6724cf6b24c6f95a75f733", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_EGFR"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_2cf34df00b6724cf6b24c6f95a75f733.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_2cf34df00b6724cf6b24c6f95a75f733"}, "created_at": 1642461352.8889368, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATHOLOGY_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_EGFR`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.59f3f86a32": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_430d8ea37597e60908d9192f2521b33c\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_LIPIDS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_430d8ea37597e60908d9192f2521b33c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.59f3f86a32", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_430d8ea37597e60908d9192f2521b33c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_430d8ea37597e60908d9192f2521b33c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_LIPIDS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_430d8ea37597e60908d9192f2521b33c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_430d8ea37597e60908d9192f2521b33c"}, "created_at": 1642461352.892896, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.20650e611e": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_e8455a2c8c85f6218289f3e1838d8490\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_LIPIDS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_e8455a2c8c85f6218289f3e1838d8490", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.20650e611e", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_e8455a2c8c85f6218289f3e1838d8490.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_e8455a2c8c85f6218289f3e1838d8490", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_LIPIDS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_e8455a2c8c85f6218289f3e1838d8490.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_e8455a2c8c85f6218289f3e1838d8490"}, "created_at": 1642461352.896937, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATHOLOGY_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_LIPIDS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID.0ce3c5efb6": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_ef53bd4e3669495d4ab5a1a6a94f2149\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_LIPIDS')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_ef53bd4e3669495d4ab5a1a6a94f2149", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID.0ce3c5efb6", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_ef53bd4e3669495d4ab5a1a6a94f2149.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID", "alias": "dbt_utils_source_not_null_prop_ef53bd4e3669495d4ab5a1a6a94f2149", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_LIPIDS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_ef53bd4e3669495d4ab5a1a6a94f2149.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_ef53bd4e3669495d4ab5a1a6a94f2149"}, "created_at": 1642461352.9018962, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATHOLOGY_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_LIPIDS`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.9a3b36b73f": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_70b2dcff2b209c2a93ee7ccb35259b76\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_HBA1C')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_70b2dcff2b209c2a93ee7ccb35259b76", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.9a3b36b73f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_70b2dcff2b209c2a93ee7ccb35259b76.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_70b2dcff2b209c2a93ee7ccb35259b76", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_HBA1C"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_70b2dcff2b209c2a93ee7ccb35259b76.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_70b2dcff2b209c2a93ee7ccb35259b76"}, "created_at": 1642461352.9049413, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.c13c76b9bd": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7534454e0ccd005a9b9aff79008c30e8\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_HBA1C')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7534454e0ccd005a9b9aff79008c30e8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.c13c76b9bd", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7534454e0ccd005a9b9aff79008c30e8.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID", "alias": "dbt_expectations_source_expect_7534454e0ccd005a9b9aff79008c30e8", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_HBA1C"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7534454e0ccd005a9b9aff79008c30e8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7534454e0ccd005a9b9aff79008c30e8"}, "created_at": 1642461352.9089372, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATHOLOGY_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_HBA1C`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID.059598ccde": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_75a0282b2884bc13a275bc59aaa03889\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_HBA1C')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_75a0282b2884bc13a275bc59aaa03889", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID.059598ccde", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_75a0282b2884bc13a275bc59aaa03889.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID", "alias": "dbt_utils_source_not_null_prop_75a0282b2884bc13a275bc59aaa03889", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_HBA1C"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_75a0282b2884bc13a275bc59aaa03889.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_75a0282b2884bc13a275bc59aaa03889"}, "created_at": 1642461352.913896, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATHOLOGY_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_HBA1C`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.c5b3e3b412": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_82c658a589f5252a5b8280ccd74f4cff\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "MD_PHC", "BP", "MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'DIAGNOSIS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.DIAGNOSIS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_82c658a589f5252a5b8280ccd74f4cff", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.c5b3e3b412", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_82c658a589f5252a5b8280ccd74f4cff.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD", "alias": "dbt_expectations_source_expect_82c658a589f5252a5b8280ccd74f4cff", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "DIAGNOSIS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_82c658a589f5252a5b8280ccd74f4cff.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_82c658a589f5252a5b8280ccd74f4cff"}, "created_at": 1642461352.9178941, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`DIAGNOSIS`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.5c70331cfd": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_60f630559637c05276ad278f430a3bf4\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "MD_PHC", "BP", "MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PRESCRIPTION')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRESCRIPTION"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_60f630559637c05276ad278f430a3bf4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.5c70331cfd", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_60f630559637c05276ad278f430a3bf4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD", "alias": "dbt_expectations_source_expect_60f630559637c05276ad278f430a3bf4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRESCRIPTION"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_60f630559637c05276ad278f430a3bf4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_60f630559637c05276ad278f430a3bf4"}, "created_at": 1642461352.9239368, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRESCRIPTION`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.e1a2c03e02": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c9e21aa99c0b37a9eaa076608209851f\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "MD_PHC", "BP", "MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SCRIPT_ITEM')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SCRIPT_ITEM"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c9e21aa99c0b37a9eaa076608209851f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.e1a2c03e02", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c9e21aa99c0b37a9eaa076608209851f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD", "alias": "dbt_expectations_source_expect_c9e21aa99c0b37a9eaa076608209851f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SCRIPT_ITEM"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c9e21aa99c0b37a9eaa076608209851f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c9e21aa99c0b37a9eaa076608209851f"}, "created_at": 1642461352.9298954, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SCRIPT_ITEM`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.3a73ee7acc": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3caa8265fae9968a935184dc0c60fc70\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["PHC_BP", "PHC_MD", "BP", "MD"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'LONGITUDINAL_CIS_PATIENT_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.LONGITUDINAL_CIS_PATIENT_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3caa8265fae9968a935184dc0c60fc70", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.3a73ee7acc", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3caa8265fae9968a935184dc0c60fc70.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD", "alias": "dbt_expectations_source_expect_3caa8265fae9968a935184dc0c60fc70", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "LONGITUDINAL_CIS_PATIENT_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3caa8265fae9968a935184dc0c60fc70.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3caa8265fae9968a935184dc0c60fc70"}, "created_at": 1642461352.9378996, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`LONGITUDINAL_CIS_PATIENT_STATUS`\n    \n\n),\nset_values as (\n\n    select\n        'PHC_BP' as value_field\n    union all\n    select\n        'PHC_MD' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.199e825804": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_7b22336ffa6cacaf5fd7952f9540580f\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_7b22336ffa6cacaf5fd7952f9540580f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.199e825804", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_7b22336ffa6cacaf5fd7952f9540580f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID", "alias": "dbt_expectations_source_expect_7b22336ffa6cacaf5fd7952f9540580f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_7b22336ffa6cacaf5fd7952f9540580f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_7b22336ffa6cacaf5fd7952f9540580f"}, "created_at": 1642461352.9439387, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.af6aaac5c1": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_8ba2db001db32d22099c30060956c495\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_8ba2db001db32d22099c30060956c495", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.af6aaac5c1", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_8ba2db001db32d22099c30060956c495.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID", "alias": "dbt_expectations_source_expect_8ba2db001db32d22099c30060956c495", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_8ba2db001db32d22099c30060956c495.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_8ba2db001db32d22099c30060956c495"}, "created_at": 1642461352.9489365, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string.45cac7427f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f022180c7dcdb3f79aac5ad23c5954d0\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f022180c7dcdb3f79aac5ad23c5954d0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string.45cac7427f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f022180c7dcdb3f79aac5ad23c5954d0.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string", "alias": "dbt_expectations_source_expect_f022180c7dcdb3f79aac5ad23c5954d0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f022180c7dcdb3f79aac5ad23c5954d0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f022180c7dcdb3f79aac5ad23c5954d0"}, "created_at": 1642461352.953938, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1.38cc79f27a": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_08c74b2d10890ff2add0b30dd8781777\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_08c74b2d10890ff2add0b30dd8781777", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1.38cc79f27a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_08c74b2d10890ff2add0b30dd8781777.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1", "alias": "dbt_expectations_source_expect_08c74b2d10890ff2add0b30dd8781777", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_08c74b2d10890ff2add0b30dd8781777.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_08c74b2d10890ff2add0b30dd8781777"}, "created_at": 1642461352.9579382, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        PATHOLOGY_ID\n    ) >= 1 and length(\n        PATHOLOGY_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID.5ad07734a5": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_ef3183a1317e0de181c7adae595bcfa5\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATHOLOGY_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_ef3183a1317e0de181c7adae595bcfa5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID.5ad07734a5", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_ef3183a1317e0de181c7adae595bcfa5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID", "alias": "dbt_utils_source_not_null_prop_ef3183a1317e0de181c7adae595bcfa5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_ef3183a1317e0de181c7adae595bcfa5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_ef3183a1317e0de181c7adae595bcfa5"}, "created_at": 1642461352.9629335, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATHOLOGY_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.f7ee803ff4": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_1f5e3d7ac3ec0e20ecd68ac6e16ff9fb\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_1f5e3d7ac3ec0e20ecd68ac6e16ff9fb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.f7ee803ff4", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_1f5e3d7ac3ec0e20ecd68ac6e16ff9fb.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_1f5e3d7ac3ec0e20ecd68ac6e16ff9fb", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_1f5e3d7ac3ec0e20ecd68ac6e16ff9fb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_1f5e3d7ac3ec0e20ecd68ac6e16ff9fb"}, "created_at": 1642461352.9669306, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM.9bc33ced47": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_eb50934d070060dd4d825db137d0618d\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_eb50934d070060dd4d825db137d0618d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM.9bc33ced47", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_eb50934d070060dd4d825db137d0618d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_eb50934d070060dd4d825db137d0618d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_eb50934d070060dd4d825db137d0618d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_eb50934d070060dd4d825db137d0618d"}, "created_at": 1642461352.9728968, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM.d96cb0f782": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_a8f4a83869fdb9220ac7b9111b233a9a\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_a8f4a83869fdb9220ac7b9111b233a9a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM.d96cb0f782", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_a8f4a83869fdb9220ac7b9111b233a9a.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_a8f4a83869fdb9220ac7b9111b233a9a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_a8f4a83869fdb9220ac7b9111b233a9a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_a8f4a83869fdb9220ac7b9111b233a9a"}, "created_at": 1642461352.9779315, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.e6e95a9205": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_21328c03ca06f4b828a51cbfa5f52956\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_21328c03ca06f4b828a51cbfa5f52956", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.e6e95a9205", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_21328c03ca06f4b828a51cbfa5f52956.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_21328c03ca06f4b828a51cbfa5f52956", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_21328c03ca06f4b828a51cbfa5f52956.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_21328c03ca06f4b828a51cbfa5f52956"}, "created_at": 1642461352.9819272, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.6da019df1f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_49f52e8aebaf0685aaa61accac70db03\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_49f52e8aebaf0685aaa61accac70db03", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.6da019df1f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_49f52e8aebaf0685aaa61accac70db03.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_49f52e8aebaf0685aaa61accac70db03", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_49f52e8aebaf0685aaa61accac70db03.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_49f52e8aebaf0685aaa61accac70db03"}, "created_at": 1642461352.9879272, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.89fc247464": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_3dee14e37a8be952486459432f0afa89\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_3dee14e37a8be952486459432f0afa89", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.89fc247464", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_3dee14e37a8be952486459432f0afa89.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_3dee14e37a8be952486459432f0afa89", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_3dee14e37a8be952486459432f0afa89.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_3dee14e37a8be952486459432f0afa89"}, "created_at": 1642461352.9959047, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string.c514d1862f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_57b469a42bfb018e9e11a92329aae127\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_57b469a42bfb018e9e11a92329aae127", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string.c514d1862f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_57b469a42bfb018e9e11a92329aae127.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_57b469a42bfb018e9e11a92329aae127", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_57b469a42bfb018e9e11a92329aae127.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_57b469a42bfb018e9e11a92329aae127"}, "created_at": 1642461353.0018964, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime.ce0a647d0d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_67914c0845cd6543a8f64c2d45aa7188\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_67914c0845cd6543a8f64c2d45aa7188", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime.ce0a647d0d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_67914c0845cd6543a8f64c2d45aa7188.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_67914c0845cd6543a8f64c2d45aa7188", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_67914c0845cd6543a8f64c2d45aa7188.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_67914c0845cd6543a8f64c2d45aa7188"}, "created_at": 1642461353.009895, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime.ee61e9fe2f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0599b8c852bf6278272a152072442c4a\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0599b8c852bf6278272a152072442c4a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime.ee61e9fe2f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0599b8c852bf6278272a152072442c4a.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_0599b8c852bf6278272a152072442c4a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0599b8c852bf6278272a152072442c4a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0599b8c852bf6278272a152072442c4a"}, "created_at": 1642461353.0148962, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime.938e115f1e": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0125762620dacf6ee6ef4ac488ea33a0\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "REQUEST_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0125762620dacf6ee6ef4ac488ea33a0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime.938e115f1e", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0125762620dacf6ee6ef4ac488ea33a0.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime", "alias": "dbt_expectations_source_expect_0125762620dacf6ee6ef4ac488ea33a0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0125762620dacf6ee6ef4ac488ea33a0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0125762620dacf6ee6ef4ac488ea33a0"}, "created_at": 1642461353.0209346, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'REQUEST_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "REQUEST_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime.89b4b7788d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f7a74ac86f9873337d1ad4df12ab66e8\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "REPORT_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f7a74ac86f9873337d1ad4df12ab66e8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime.89b4b7788d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f7a74ac86f9873337d1ad4df12ab66e8.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime", "alias": "dbt_expectations_source_expect_f7a74ac86f9873337d1ad4df12ab66e8", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f7a74ac86f9873337d1ad4df12ab66e8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f7a74ac86f9873337d1ad4df12ab66e8"}, "created_at": 1642461353.0248983, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'REPORT_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "REPORT_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime.ba4a9eae36": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_1db8899d67c8c948cd7a342cc39beb37\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "COLLECTION_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_1db8899d67c8c948cd7a342cc39beb37", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime.ba4a9eae36", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_1db8899d67c8c948cd7a342cc39beb37.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime", "alias": "dbt_expectations_source_expect_1db8899d67c8c948cd7a342cc39beb37", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_1db8899d67c8c948cd7a342cc39beb37.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_1db8899d67c8c948cd7a342cc39beb37"}, "created_at": 1642461353.029923, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'COLLECTION_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "COLLECTION_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime.a2d3ec20bf": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_a3f8c90de6e01379287950a96c42e904\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "IMPORT_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_a3f8c90de6e01379287950a96c42e904", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime.a2d3ec20bf", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_a3f8c90de6e01379287950a96c42e904.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime", "alias": "dbt_expectations_source_expect_a3f8c90de6e01379287950a96c42e904", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_a3f8c90de6e01379287950a96c42e904.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_a3f8c90de6e01379287950a96c42e904"}, "created_at": 1642461353.0348957, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('COLLECTION_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('COMPLETION_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CONFIDENTIAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('IMPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LAB_REFERENCE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REPORT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('REQUEST_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'IMPORT_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "IMPORT_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH.9b8f0caad9": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ded520bea6d2d83587efa3607229a3cf\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["PHC", "GRH"], "column_name": "SITE_EXTRACTION_TYPE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SITE')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ded520bea6d2d83587efa3607229a3cf", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH.9b8f0caad9", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ded520bea6d2d83587efa3607229a3cf.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH", "alias": "dbt_expectations_source_expect_ded520bea6d2d83587efa3607229a3cf", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SITE"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ded520bea6d2d83587efa3607229a3cf.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ded520bea6d2d83587efa3607229a3cf"}, "created_at": 1642461353.0399344, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SITE_EXTRACTION_TYPE as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`\n    \n\n),\nset_values as (\n\n    select\n        'PHC' as value_field\n    union all\n    select\n        'GRH' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_EXTRACTION_TYPE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.3bc2bb7ac7": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c84621864b623c5b2cf18c6a060fede9\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c84621864b623c5b2cf18c6a060fede9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.3bc2bb7ac7", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c84621864b623c5b2cf18c6a060fede9.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID", "alias": "dbt_expectations_source_expect_c84621864b623c5b2cf18c6a060fede9", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c84621864b623c5b2cf18c6a060fede9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c84621864b623c5b2cf18c6a060fede9"}, "created_at": 1642461353.044936, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.ccc09c7626": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_cc51a79fafa6991ff5e6f1d7563f6873\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_cc51a79fafa6991ff5e6f1d7563f6873", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.ccc09c7626", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_cc51a79fafa6991ff5e6f1d7563f6873.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID", "alias": "dbt_expectations_source_expect_cc51a79fafa6991ff5e6f1d7563f6873", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_cc51a79fafa6991ff5e6f1d7563f6873.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_cc51a79fafa6991ff5e6f1d7563f6873"}, "created_at": 1642461353.0489376, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string.e4f994a08a": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_5465fcb341a44d1efc248f55faec82e7\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_5465fcb341a44d1efc248f55faec82e7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string.e4f994a08a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_5465fcb341a44d1efc248f55faec82e7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string", "alias": "dbt_expectations_source_expect_5465fcb341a44d1efc248f55faec82e7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_5465fcb341a44d1efc248f55faec82e7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_5465fcb341a44d1efc248f55faec82e7"}, "created_at": 1642461353.0539246, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ATOM_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOINC_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UNITS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_RANGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ABNORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1.1f48500f58": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_861ca3c24caab5f4dc08f0b5e99f291b\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "PATHOLOGY_RESULT_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_861ca3c24caab5f4dc08f0b5e99f291b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1.1f48500f58", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_861ca3c24caab5f4dc08f0b5e99f291b.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1", "alias": "dbt_expectations_source_expect_861ca3c24caab5f4dc08f0b5e99f291b", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_861ca3c24caab5f4dc08f0b5e99f291b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_861ca3c24caab5f4dc08f0b5e99f291b"}, "created_at": 1642461353.057927, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        PATHOLOGY_RESULT_ID\n    ) >= 1 and length(\n        PATHOLOGY_RESULT_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_RESULT_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID.95fe960b65": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_07f12856e832fc1fd65d7d00d83c3bf1\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATHOLOGY_RESULT_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_07f12856e832fc1fd65d7d00d83c3bf1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID.95fe960b65", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_07f12856e832fc1fd65d7d00d83c3bf1.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID", "alias": "dbt_utils_source_not_null_prop_07f12856e832fc1fd65d7d00d83c3bf1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_07f12856e832fc1fd65d7d00d83c3bf1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_07f12856e832fc1fd65d7d00d83c3bf1"}, "created_at": 1642461353.0629234, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATHOLOGY_RESULT_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATHOLOGY_RESULT_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.a9e3ed73d7": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c918fc32525da4ec78e45e0b0fb40afa\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["BP_PHC", "BP", "MD", "MD_PHC"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c918fc32525da4ec78e45e0b0fb40afa", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.a9e3ed73d7", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c918fc32525da4ec78e45e0b0fb40afa.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC", "alias": "dbt_expectations_source_expect_c918fc32525da4ec78e45e0b0fb40afa", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c918fc32525da4ec78e45e0b0fb40afa.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c918fc32525da4ec78e45e0b0fb40afa"}, "created_at": 1642461353.0679164, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n    \n\n),\nset_values as (\n\n    select\n        'BP_PHC' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'MD_PHC' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM.0bf54300f5": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0095393a98127c5e071ab8ccb8f2756f\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0095393a98127c5e071ab8ccb8f2756f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM.0bf54300f5", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0095393a98127c5e071ab8ccb8f2756f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_0095393a98127c5e071ab8ccb8f2756f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0095393a98127c5e071ab8ccb8f2756f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0095393a98127c5e071ab8ccb8f2756f"}, "created_at": 1642461353.073926, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM.97ed916dc1": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_20275a9c3c056ca287a67fe27e9f3aa5\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_20275a9c3c056ca287a67fe27e9f3aa5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM.97ed916dc1", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_20275a9c3c056ca287a67fe27e9f3aa5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_20275a9c3c056ca287a67fe27e9f3aa5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_20275a9c3c056ca287a67fe27e9f3aa5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_20275a9c3c056ca287a67fe27e9f3aa5"}, "created_at": 1642461353.0788965, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.5d67a221bb": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_64d50af6a426610767de686341acd228\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_64d50af6a426610767de686341acd228", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.5d67a221bb", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_64d50af6a426610767de686341acd228.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_64d50af6a426610767de686341acd228", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_64d50af6a426610767de686341acd228.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_64d50af6a426610767de686341acd228"}, "created_at": 1642461353.0879393, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.7629c151d8": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_33859c9ca36ab7ea21dd9585254a167e\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_33859c9ca36ab7ea21dd9585254a167e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.7629c151d8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_33859c9ca36ab7ea21dd9585254a167e.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_33859c9ca36ab7ea21dd9585254a167e", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_33859c9ca36ab7ea21dd9585254a167e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_33859c9ca36ab7ea21dd9585254a167e"}, "created_at": 1642461353.0949376, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.0a35c39b4d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_88fcbdeab5e4ec39841187c41bcd4b3c\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_88fcbdeab5e4ec39841187c41bcd4b3c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.0a35c39b4d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_88fcbdeab5e4ec39841187c41bcd4b3c.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_88fcbdeab5e4ec39841187c41bcd4b3c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_88fcbdeab5e4ec39841187c41bcd4b3c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_88fcbdeab5e4ec39841187c41bcd4b3c"}, "created_at": 1642461353.1039245, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string.1d3fd828d0": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_26535c2b2f2788290de87e58569549c5\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_26535c2b2f2788290de87e58569549c5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string.1d3fd828d0", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_26535c2b2f2788290de87e58569549c5.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_26535c2b2f2788290de87e58569549c5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_26535c2b2f2788290de87e58569549c5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_26535c2b2f2788290de87e58569549c5"}, "created_at": 1642461353.108923, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ATOM_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOINC_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UNITS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_RANGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ABNORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime.bfe72fc6d8": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_f0cb27933afa1db8fcc79978275d6874\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_f0cb27933afa1db8fcc79978275d6874", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime.bfe72fc6d8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_f0cb27933afa1db8fcc79978275d6874.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_f0cb27933afa1db8fcc79978275d6874", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_f0cb27933afa1db8fcc79978275d6874.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_f0cb27933afa1db8fcc79978275d6874"}, "created_at": 1642461353.113895, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ATOM_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOINC_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UNITS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_RANGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ABNORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime.117778f76d": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_be3ce232e862eb6681c03da1b4a37695\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_be3ce232e862eb6681c03da1b4a37695", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime.117778f76d", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_be3ce232e862eb6681c03da1b4a37695.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_be3ce232e862eb6681c03da1b4a37695", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_be3ce232e862eb6681c03da1b4a37695.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_be3ce232e862eb6681c03da1b4a37695"}, "created_at": 1642461353.1178951, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ATOM_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOINC_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UNITS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_RANGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ABNORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime.833336f00f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_2c0488114c98169715468f314afbb2da\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "RESULT_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATHOLOGY_RESULT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_2c0488114c98169715468f314afbb2da", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime.833336f00f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_2c0488114c98169715468f314afbb2da.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime", "alias": "dbt_expectations_source_expect_2c0488114c98169715468f314afbb2da", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_2c0488114c98169715468f314afbb2da.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_2c0488114c98169715468f314afbb2da"}, "created_at": 1642461353.1239357, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ATOM_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATHOLOGY_RESULT_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_TYPE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('LOINC_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_VALUE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UNITS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('NORMAL_RANGE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ABNORMAL_FLAG' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'RESULT_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "RESULT_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.ec20f9d54e": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_358845546ebbdd0c95fedcfd9c11a03f\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_358845546ebbdd0c95fedcfd9c11a03f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.ec20f9d54e", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_358845546ebbdd0c95fedcfd9c11a03f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID", "alias": "dbt_expectations_source_expect_358845546ebbdd0c95fedcfd9c11a03f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_358845546ebbdd0c95fedcfd9c11a03f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_358845546ebbdd0c95fedcfd9c11a03f"}, "created_at": 1642461353.1289375, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.dc524994bf": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_c31710d1ef5208e5f86a087db8fdfd1d\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_c31710d1ef5208e5f86a087db8fdfd1d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.dc524994bf", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_c31710d1ef5208e5f86a087db8fdfd1d.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID", "alias": "dbt_expectations_source_expect_c31710d1ef5208e5f86a087db8fdfd1d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_c31710d1ef5208e5f86a087db8fdfd1d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_c31710d1ef5208e5f86a087db8fdfd1d"}, "created_at": 1642461353.132896, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string.01a82207b7": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_788d4dc1492aa93da4bceac7d994ab66\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_788d4dc1492aa93da4bceac7d994ab66", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string.01a82207b7", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_788d4dc1492aa93da4bceac7d994ab66.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string", "alias": "dbt_expectations_source_expect_788d4dc1492aa93da4bceac7d994ab66", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_788d4dc1492aa93da4bceac7d994ab66.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_788d4dc1492aa93da4bceac7d994ab66"}, "created_at": 1642461353.1379275, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CITY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_POSTCODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_BIRTH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_DEATH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DECEASED_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RACGP_PATIENT_STATUS_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CREATED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_MODIFIED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHN_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_POSTCODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1.a0803660da": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_d6ae98a79325e0754bf823b189007c3a\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "PATIENT_POSTCODE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_d6ae98a79325e0754bf823b189007c3a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1.a0803660da", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_d6ae98a79325e0754bf823b189007c3a.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1", "alias": "dbt_expectations_source_expect_d6ae98a79325e0754bf823b189007c3a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_d6ae98a79325e0754bf823b189007c3a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_d6ae98a79325e0754bf823b189007c3a"}, "created_at": 1642461353.1418955, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        PATIENT_POSTCODE\n    ) >= 1 and length(\n        PATIENT_POSTCODE\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_POSTCODE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE.bcd558e979": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_0812464c130caba735b15948bec1cbc4\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "PATIENT_POSTCODE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_0812464c130caba735b15948bec1cbc4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE.bcd558e979", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_0812464c130caba735b15948bec1cbc4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE", "alias": "dbt_utils_source_not_null_prop_0812464c130caba735b15948bec1cbc4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_0812464c130caba735b15948bec1cbc4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_0812464c130caba735b15948bec1cbc4"}, "created_at": 1642461353.1469245, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when PATIENT_POSTCODE is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_POSTCODE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.dfd2426837": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b292dea15795bc78db6f9a3aa856720f\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b292dea15795bc78db6f9a3aa856720f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.dfd2426837", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b292dea15795bc78db6f9a3aa856720f.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_b292dea15795bc78db6f9a3aa856720f", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b292dea15795bc78db6f9a3aa856720f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b292dea15795bc78db6f9a3aa856720f"}, "created_at": 1642461353.1508963, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.7ab80d5240": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_def9b89a85d6f8fc3e8f9578384cc192\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_def9b89a85d6f8fc3e8f9578384cc192", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.7ab80d5240", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_def9b89a85d6f8fc3e8f9578384cc192.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_def9b89a85d6f8fc3e8f9578384cc192", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_def9b89a85d6f8fc3e8f9578384cc192.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_def9b89a85d6f8fc3e8f9578384cc192"}, "created_at": 1642461353.1559265, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.73b17b4635": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b591ae2d1f0f778b19bd150199245677\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b591ae2d1f0f778b19bd150199245677", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.73b17b4635", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b591ae2d1f0f778b19bd150199245677.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_b591ae2d1f0f778b19bd150199245677", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b591ae2d1f0f778b19bd150199245677.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b591ae2d1f0f778b19bd150199245677"}, "created_at": 1642461353.1598985, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string.82aa30da07": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_d6a49e051f8bb631bb1d9017c7184968\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_d6a49e051f8bb631bb1d9017c7184968", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string.82aa30da07", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_d6a49e051f8bb631bb1d9017c7184968.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_d6a49e051f8bb631bb1d9017c7184968", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_d6a49e051f8bb631bb1d9017c7184968.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_d6a49e051f8bb631bb1d9017c7184968"}, "created_at": 1642461353.1638982, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CITY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_POSTCODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_BIRTH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_DEATH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DECEASED_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RACGP_PATIENT_STATUS_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CREATED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_MODIFIED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHN_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_POSTCODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime.bb805e9a0b": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_2e4d742eea6bf4129b4214294af652f7\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "PATIENT_CREATED_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_2e4d742eea6bf4129b4214294af652f7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime.bb805e9a0b", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_2e4d742eea6bf4129b4214294af652f7.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime", "alias": "dbt_expectations_source_expect_2e4d742eea6bf4129b4214294af652f7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_2e4d742eea6bf4129b4214294af652f7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_2e4d742eea6bf4129b4214294af652f7"}, "created_at": 1642461353.1678982, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CITY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_POSTCODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_BIRTH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_DEATH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DECEASED_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RACGP_PATIENT_STATUS_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CREATED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_MODIFIED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHN_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_POSTCODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_CREATED_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_CREATED_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime.3a35359e09": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_974daccd73663f0207d2151cbbf15ceb\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "PATIENT_MODIFIED_DATE", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'PATIENT')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_974daccd73663f0207d2151cbbf15ceb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime.3a35359e09", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_974daccd73663f0207d2151cbbf15ceb.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime", "alias": "dbt_expectations_source_expect_974daccd73663f0207d2151cbbf15ceb", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_974daccd73663f0207d2151cbbf15ceb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_974daccd73663f0207d2151cbbf15ceb"}, "created_at": 1642461353.173898, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CITY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_POSTCODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_BIRTH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('YEAR_OF_DEATH' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('DECEASED_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('ATSI_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PENSION_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CIS_PATIENT_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RACGP_PATIENT_STATUS_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_CREATED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_MODIFIED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PHN_CODE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_POSTCODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_MODIFIED_DATE'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_MODIFIED_DATE", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.8f956873c3": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0c398610c231b4db4db331ac61829217\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0c398610c231b4db4db331ac61829217", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.8f956873c3", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0c398610c231b4db4db331ac61829217.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID", "alias": "dbt_expectations_source_expect_0c398610c231b4db4db331ac61829217", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0c398610c231b4db4db331ac61829217.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0c398610c231b4db4db331ac61829217"}, "created_at": 1642461353.177898, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('SITE_ID' as \n    string\n) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.47ab9662bd": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_062ca6d1c61ffec3a192703fb27934cc\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_062ca6d1c61ffec3a192703fb27934cc", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.47ab9662bd", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_062ca6d1c61ffec3a192703fb27934cc.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID", "alias": "dbt_expectations_source_expect_062ca6d1c61ffec3a192703fb27934cc", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_062ca6d1c61ffec3a192703fb27934cc.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_062ca6d1c61ffec3a192703fb27934cc"}, "created_at": 1642461353.1818979, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SITE_ID is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string.695a57764a": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_76209d50980d0ff7a61b307bd1fe4252\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "SITE_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_76209d50980d0ff7a61b307bd1fe4252", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string.695a57764a", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_76209d50980d0ff7a61b307bd1fe4252.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string", "alias": "dbt_expectations_source_expect_76209d50980d0ff7a61b307bd1fe4252", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_76209d50980d0ff7a61b307bd1fe4252.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_76209d50980d0ff7a61b307bd1fe4252"}, "created_at": 1642461353.185916, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_PRODUCT_TYPE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_FREQUENCY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKES_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CEASED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_STOPPED_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CHANGE_STAGE_ASSESSMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LAST_QUIT_ATTEMPT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LONGEST_ABSTINENCE_DURATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ABSTINENCE_UNIT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_COMMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SITE_ID'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SITE_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1.0d678885de": {"raw_sql": "{{ dbt_expectations.test_expect_column_value_lengths_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b6f92e6ed1598759d0ffc7186647b947\") }}", "test_metadata": {"name": "expect_column_value_lengths_to_be_between", "kwargs": {"min_value": 1, "max_value": 8, "column_name": "RECORD_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b6f92e6ed1598759d0ffc7186647b947", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1.0d678885de", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b6f92e6ed1598759d0ffc7186647b947.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1", "alias": "dbt_expectations_source_expect_b6f92e6ed1598759d0ffc7186647b947", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b6f92e6ed1598759d0ffc7186647b947.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b6f92e6ed1598759d0ffc7186647b947"}, "created_at": 1642461353.190898, "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        RECORD_ID\n    ) >= 1 and length(\n        RECORD_ID\n    ) <= 8\n)\n as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "RECORD_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID.335661aacc": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_cb738df5802d1cab17837f25f5046ec4\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "RECORD_ID", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_cb738df5802d1cab17837f25f5046ec4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID.335661aacc", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_cb738df5802d1cab17837f25f5046ec4.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID", "alias": "dbt_utils_source_not_null_prop_cb738df5802d1cab17837f25f5046ec4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_cb738df5802d1cab17837f25f5046ec4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_cb738df5802d1cab17837f25f5046ec4"}, "created_at": 1642461353.1958978, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when RECORD_ID is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "RECORD_ID", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_.fc9b914173": {"raw_sql": "{{ dbt_expectations.test_expect_column_distinct_values_to_contain_set(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_816c20490e5f07afd90186cc63255875\") }}", "test_metadata": {"name": "expect_column_distinct_values_to_contain_set", "kwargs": {"value_set": ["PHC_BP", "BP", "MD", "PHC_MD'"], "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_816c20490e5f07afd90186cc63255875", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_.fc9b914173", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_816c20490e5f07afd90186cc63255875.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_", "alias": "dbt_expectations_source_expect_816c20490e5f07afd90186cc63255875", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_816c20490e5f07afd90186cc63255875.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_816c20490e5f07afd90186cc63255875"}, "created_at": 1642461353.1998978, "compiled_sql": "\n\nwith all_values as (\n\n    select distinct\n        SOURCE_SYSTEM as value_field\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n    \n\n),\nset_values as (\n\n    select\n        'PHC_BP' as value_field\n    union all\n    select\n        'BP' as value_field\n    union all\n    select\n        'MD' as value_field\n    union all\n    select\n        'PHC_MD'' as value_field\n    \n    \n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM.0638fa2e69": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_b698a5b4b1a47a7ed334010c375f0368\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_b698a5b4b1a47a7ed334010c375f0368", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM.0638fa2e69", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_b698a5b4b1a47a7ed334010c375f0368.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM", "alias": "dbt_expectations_source_expect_b698a5b4b1a47a7ed334010c375f0368", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_b698a5b4b1a47a7ed334010c375f0368.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_b698a5b4b1a47a7ed334010c375f0368"}, "created_at": 1642461353.2048979, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  SOURCE_SYSTEM is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM.b2bac72ebb": {"raw_sql": "{{ dbt_utils.test_not_null_proportion(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_source_not_null_prop_4631a046fb2ccff3c5373e15065e5138\") }}", "test_metadata": {"name": "not_null_proportion", "kwargs": {"at_least": 0.95, "column_name": "SOURCE_SYSTEM", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.nps_mi_2021.test_not_null_proportion", "macro.dbt.get_where_subquery", "macro.dbt_utils.test_not_null_proportion"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_utils_source_not_null_prop_4631a046fb2ccff3c5373e15065e5138", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM"], "unique_id": "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM.b2bac72ebb", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_utils_source_not_null_prop_4631a046fb2ccff3c5373e15065e5138.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM", "alias": "dbt_utils_source_not_null_prop_4631a046fb2ccff3c5373e15065e5138", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_utils_source_not_null_prop_4631a046fb2ccff3c5373e15065e5138.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_source_not_null_prop_4631a046fb2ccff3c5373e15065e5138"}, "created_at": 1642461353.2088978, "compiled_sql": "\n\n\n\n\n\nwith validation as (\n  select\n    sum(case when SOURCE_SYSTEM is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < 0.95 or not_null_proportion > 1\n)\nselect\n  *\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "SOURCE_SYSTEM", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.a12d73eff8": {"raw_sql": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_77dd2b0fe6050281227db25a541154ac\") }}", "test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_77dd2b0fe6050281227db25a541154ac", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.a12d73eff8", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_77dd2b0fe6050281227db25a541154ac.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_77dd2b0fe6050281227db25a541154ac", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_77dd2b0fe6050281227db25a541154ac.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_77dd2b0fe6050281227db25a541154ac"}, "created_at": 1642461353.2128978, "compiled_sql": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.574f708515": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_0529caa1caa2866e8206d07c8929f3f0\") }}", "test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_0529caa1caa2866e8206d07c8929f3f0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.574f708515", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_0529caa1caa2866e8206d07c8929f3f0.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_0529caa1caa2866e8206d07c8929f3f0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_0529caa1caa2866e8206d07c8929f3f0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_0529caa1caa2866e8206d07c8929f3f0"}, "created_at": 1642461353.215898, "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  PATIENT_NUMBER is not null as expression\n\n\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.0dc3c8525f": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_4b28f39669f314e9cc71c72a573bdfcf\") }}", "test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_4b28f39669f314e9cc71c72a573bdfcf", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.0dc3c8525f", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_4b28f39669f314e9cc71c72a573bdfcf.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER", "alias": "dbt_expectations_source_expect_4b28f39669f314e9cc71c72a573bdfcf", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_4b28f39669f314e9cc71c72a573bdfcf.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_4b28f39669f314e9cc71c72a573bdfcf"}, "created_at": 1642461353.2208953, "compiled_sql": "\n\n\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        PATIENT_NUMBER\n    from `nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`\n    where 1=1\n    \n    group by\n        PATIENT_NUMBER\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string.5b93d24673": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_242248db63dfeaf4bb1067ac92b4e0a9\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "string", "column_name": "PATIENT_NUMBER", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_242248db63dfeaf4bb1067ac92b4e0a9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string.5b93d24673", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_242248db63dfeaf4bb1067ac92b4e0a9.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string", "alias": "dbt_expectations_source_expect_242248db63dfeaf4bb1067ac92b4e0a9", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_242248db63dfeaf4bb1067ac92b4e0a9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_242248db63dfeaf4bb1067ac92b4e0a9"}, "created_at": 1642461353.2259235, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_PRODUCT_TYPE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_FREQUENCY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKES_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CEASED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_STOPPED_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CHANGE_STAGE_ASSESSMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LAST_QUIT_ATTEMPT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LONGEST_ABSTINENCE_DURATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ABSTINENCE_UNIT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_COMMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PATIENT_NUMBER'\n            and\n            relation_column_type not in ('STRING')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "PATIENT_NUMBER", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime.92bf1d2ccc": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_ef1a2488178ff81c28ef3b2ff7934374\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "CREATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_ef1a2488178ff81c28ef3b2ff7934374", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime.92bf1d2ccc", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_ef1a2488178ff81c28ef3b2ff7934374.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_ef1a2488178ff81c28ef3b2ff7934374", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_ef1a2488178ff81c28ef3b2ff7934374.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_ef1a2488178ff81c28ef3b2ff7934374"}, "created_at": 1642461353.230091, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_PRODUCT_TYPE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_FREQUENCY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKES_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CEASED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_STOPPED_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CHANGE_STAGE_ASSESSMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LAST_QUIT_ATTEMPT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LONGEST_ABSTINENCE_DURATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ABSTINENCE_UNIT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_COMMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CREATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "CREATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}, "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime.22e11eeba4": {"raw_sql": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_source_expect_bc33c1babdd7d499ea506bf8196cd520\") }}", "test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "datetime", "column_name": "UPDATED_DATETIME", "model": "{{ get_where_subquery(source('C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021', 'SMOKING_STATUS')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery"], "nodes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"]}, "config": {"enabled": true, "alias": "dbt_expectations_source_expect_bc33c1babdd7d499ea506bf8196cd520", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "nps-omop-project", "schema": "dbt_test__audit", "fqn": ["nps_mi_2021", "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime"], "unique_id": "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime.22e11eeba4", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "dbt_expectations_source_expect_bc33c1babdd7d499ea506bf8196cd520.sql", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime", "alias": "dbt_expectations_source_expect_bc33c1babdd7d499ea506bf8196cd520", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target\\compiled\\nps_mi_2021\\models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml\\dbt_expectations_source_expect_bc33c1babdd7d499ea506bf8196cd520.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_source_expect_bc33c1babdd7d499ea506bf8196cd520"}, "created_at": 1642461353.236103, "compiled_sql": "with relation_columns as (\n\n        \n        select\n            cast('PATIENT_NUMBER' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SITE_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_SYSTEM' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_TABLE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_ID' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('RECORD_STATUS' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_STATUS_NAME' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_CODE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_PRODUCT_TYPE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_START_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_FREQUENCY' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKES_PER_DAY' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CEASED_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('PAST_SMOKING_STOPPED_DATE' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ASSESSMENT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_CHANGE_STAGE_ASSESSMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LAST_QUIT_ATTEMPT_DATE' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_LONGEST_ABSTINENCE_DURATION' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_ABSTINENCE_UNIT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('SMOKING_COMMENT' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EFFECTIVE_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_SOURCE_ROW_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_INSERT_MODULE_INSTANCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_EXPIRY_DATETIME' as \n    string\n) as relation_column,\n            cast('TIMESTAMP' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_CURRENT_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_DELETED_RECORD_INDICATOR' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_RECORD_SOURCE_ID' as \n    string\n) as relation_column,\n            cast('INT64' as \n    string\n) as relation_column_type\n        union all\n        \n        select\n            cast('OMD_HASH_FULL_RECORD' as \n    string\n) as relation_column,\n            cast('STRING' as \n    string\n) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UPDATED_DATETIME'\n            and\n            relation_column_type not in ('DATETIME')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "UPDATED_DATETIME", "file_key_name": "sources.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021"}}, "sources": {"source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_BDV_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_BDV_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_ENCOUNTER_OMOP`", "created_at": 1642459927.580183}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_SITE_RESULT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_SITE_RESULT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_SITE_RESULT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_PATHOLOGY_SITE_RESULT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_PATHOLOGY_SITE_RESULT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_SITE_RESULT_OMOP`", "created_at": 1642459927.580183}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_SITE_RESULT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_SITE_RESULT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_SITE_RESULT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_PATHOLOGY_SITE_RESULT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_PATHOLOGY_SITE_RESULT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_SITE_RESULT_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRACTITIONER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_PRACTITIONER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_PRACTITIONER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRACTITIONER_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_DIAGNOSIS_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_DIAGNOSIS_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_DIAGNOSIS_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_BDV_DIAGNOSIS_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_BDV_DIAGNOSIS_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_DIAGNOSIS_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_SITE_RESULT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_SITE_RESULT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_SITE_RESULT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_SITE_RESULT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_SITE_RESULT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_SITE_RESULT_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_DIAGNOSIS_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_DIAGNOSIS_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_DIAGNOSIS_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BDV_DIAGNOSIS_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BDV_DIAGNOSIS_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_DIAGNOSIS_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_DIAGNOSIS_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_DIAGNOSIS_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_DIAGNOSIS_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BDV_DIAGNOSIS_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BDV_DIAGNOSIS_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_DIAGNOSIS_OMOP`", "created_at": 1642459927.5811825}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SCRIPT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SCRIPT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SCRIPT_ITEM_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SCRIPT_ITEM_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SCRIPT_ITEM_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SCRIPT_ITEM_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SCRIPT_SCRIPT_ITEM_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SCRIPT_SCRIPT_ITEM_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SCRIPT_SCRIPT_ITEM_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SCRIPT_SCRIPT_ITEM_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SCRIPT_SCRIPT_ITEM_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_BP_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_ITEM_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_ITEM_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_BP_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_ITEM_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_ITEM_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_MD_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_ITEM_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_ITEM_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_PHC_BP_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_ITEM_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_ITEM_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_ITEM_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_ITEM_PHC_MD_OMOP`", "created_at": 1642459927.5821836}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_MD_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_PHC_BP_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SCRIPT_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SCRIPT_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SCRIPT_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SCRIPT_PHC_MD_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PRESCRIPTION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_PRESCRIPTION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_PRESCRIPTION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PRESCRIPTION_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PRESCRIPTION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_PRESCRIPTION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_PRESCRIPTION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PRESCRIPTION_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PRESCRIPTION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_PRESCRIPTION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_PRESCRIPTION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PRESCRIPTION_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PRESCRIPTION_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PRESCRIPTION_BP_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PRESCRIPTION_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PRESCRIPTION_MD_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_MEDICINE_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_MEDICINE_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PHC_BP_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_MEDICINE_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_MEDICINE_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_PHC_MD_OMOP`", "created_at": 1642459927.5831852}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_MEDICINE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_MEDICINE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_MEDICINE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_MEDICINE_OMOP`", "created_at": 1642459927.584171}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP`", "created_at": 1642459927.584171}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP`", "created_at": 1642459927.584171}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.584171}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.584171}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.584171}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_CLINICAL_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_CLINICAL_MD_OMOP`", "created_at": 1642459927.5851426}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_CLINICAL_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_CLINICAL_MD_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_CLINICAL_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_CLINICAL_MD_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_CLINICAL_MD_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_ALLERGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_SITE_PATIENT_ALLERGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_SITE_PATIENT_ALLERGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_ALLERGY_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_ALLERGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_PATIENT_ALLERGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_PATIENT_ALLERGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_ALLERGY_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_ALLERGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SITE_PATIENT_ALLERGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SITE_PATIENT_ALLERGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_ALLERGY_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALLERGY_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_ALLERGY_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_ALLERGY_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALLERGY_BP_OMOP`", "created_at": 1642459927.586185}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BILLING_SERVICE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BILLING_SERVICE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BILLING_SERVICE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BILLING_SERVICE_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BILLING_SERVICE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BILLING_SERVICE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BILLING_SERVICE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BILLING_SERVICE_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BILLING_SERVICE_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BILLING_SERVICE_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BILLING_SERVICE_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BILLING_SERVICE_PATIENT_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_BILLING_SERVICE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BDV_BILLING_SERVICE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BDV_BILLING_SERVICE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_BILLING_SERVICE_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BILLING_SERVICE_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BILLING_SERVICE_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BILLING_SERVICE_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BILLING_SERVICE_PATIENT_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_BILLING_SERVICE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BDV_BILLING_SERVICE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BDV_BILLING_SERVICE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_BILLING_SERVICE_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BILLING_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_BILLING_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_BILLING_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BILLING_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BILLING_SERVICE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_BILLING_SERVICE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_BILLING_SERVICE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BILLING_SERVICE_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BILLING_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BILLING_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BILLING_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BILLING_PATIENT_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BILLING_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BILLING_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BILLING_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BILLING_PATIENT_OMOP`", "created_at": 1642459927.5871446}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PROVIDER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_PROVIDER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_PROVIDER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PROVIDER_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_BP_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_LOGIN_SITE_PROVIDER_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_LOGIN_SITE_PROVIDER_MD_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PROVIDER_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_PROVIDER_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_PROVIDER_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PROVIDER_MD_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BDV_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BDV_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_ENCOUNTER_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BDV_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BDV_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_ENCOUNTER_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_ENCOUNTER_REASON_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_ENCOUNTER_REASON_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_ENCOUNTER_REASON_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_ENCOUNTER_REASON_BP_OMOP`", "created_at": 1642459927.5881844}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_TYPE_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_TYPE_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_TYPE_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_ENCOUNTER_TYPE_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_ENCOUNTER_TYPE_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_TYPE_MD_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_ENCOUNTER_REASON_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_ENCOUNTER_REASON_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_ENCOUNTER_REASON_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_ENCOUNTER_REASON_BP_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_REASON_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_ENCOUNTER_REASON_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_ENCOUNTER_REASON_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_REASON_BP_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_TYPE_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_ENCOUNTER_TYPE_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_TYPE_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_ENCOUNTER_TYPE_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_ENCOUNTER_TYPE_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_ENCOUNTER_TYPE_MD_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_IMMUNISATION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_IMMUNISATION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_IMMUNISATION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_IMMUNISATION_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_ENCOUNTER_SITE": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_ENCOUNTER_SITE"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_ENCOUNTER_SITE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_IMMUNISATION_ENCOUNTER_SITE", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_IMMUNISATION_ENCOUNTER_SITE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_ENCOUNTER_SITE`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_IMMUNISATION_SITE_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_IMMUNISATION_SITE_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_IMMUNISATION_SITE_PATIENT_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_IMMUNISATION_SITE_PATIENT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_IMMUNISATION_SITE_PATIENT_OMOP`", "created_at": 1642459927.5891817}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_OBSERVATION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_OBSERVATION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_OBSERVATION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_OBSERVATION_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_OBSERVATION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_OBSERVATION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_OBSERVATION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_OBSERVATION_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_PATHOLOGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_PATHOLOGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_PATHOLOGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_PATHOLOGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_PATHOLOGY_RESULT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_PATHOLOGY_RESULT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_PATHOLOGY_RESULT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_PATHOLOGY_RESULT_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_PATHOLOGY_RESULT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_PATHOLOGY_RESULT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_PATHOLOGY_RESULT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_PATHOLOGY_RESULT_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SITE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_SITE_PATIENT_SITE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_SITE_PATIENT_SITE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SITE_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_REQUESTED_TEST_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_REQUESTED_TEST_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_REQUESTED_TEST_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_REQUESTED_TEST_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_REQUESTED_TEST_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_REQUESTED_TEST_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_REQUESTED_TEST_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_REQUESTED_TEST_OMOP`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP1": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SITE_OMOP1"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP1", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SITE_PATIENT_SITE_OMOP1", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SITE_PATIENT_SITE_OMOP1", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SITE_OMOP1`", "created_at": 1642459927.5901835}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SITE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SITE_PATIENT_SITE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SITE_PATIENT_SITE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SITE_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LNK_BDV_PATHOLOGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LNK_BDV_PATHOLOGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LNK_BDV_PATHOLOGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LNK_BDV_PATHOLOGY_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "LSAT_BDV_PATHOLOGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "LSAT_BDV_PATHOLOGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "LSAT_BDV_PATHOLOGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`LSAT_BDV_PATHOLOGY_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_REQUESTED_TEST_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_REQUESTED_TEST_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_REQUESTED_TEST_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_REQUESTED_TEST_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_RESULT_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_PATHOLOGY_RESULT_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_PATHOLOGY_RESULT_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_RESULT_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_OBSERVATION_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_OBSERVATION_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_OBSERVATION_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_OBSERVATION_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_PATHOLOGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_PATHOLOGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_PATHOLOGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_PATHOLOGY_OMOP`", "created_at": 1642459927.5911846}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "HUB_BDV_PATHOLOGY_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "HUB_BDV_PATHOLOGY_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "HUB_BDV_PATHOLOGY_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`HUB_BDV_PATHOLOGY_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_ALBUMIN_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_ALBUMIN_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_ALBUMIN_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_PATHOLOGY_ALBUMIN_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_PATHOLOGY_ALBUMIN_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_ALBUMIN_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_GFR_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_GFR_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_GFR_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_PATHOLOGY_GFR_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_PATHOLOGY_GFR_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_GFR_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_HBA1C_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_HBA1C_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_HBA1C_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_PATHOLOGY_HBA1C_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_PATHOLOGY_HBA1C_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_HBA1C_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_LIPIDS_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_PATHOLOGY_LIPIDS_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_LIPIDS_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_PATHOLOGY_LIPIDS_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_PATHOLOGY_LIPIDS_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_PATHOLOGY_LIPIDS_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_BP_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_MD_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_BP_OMOP`", "created_at": 1642459927.5921822}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_GRH_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_REQUESTED_TEST_GRH_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_REQUESTED_TEST_GRH_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_GRH_BP_OMOP`", "created_at": 1642459927.593287}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_GRH_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_REQUESTED_TEST_GRH_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_REQUESTED_TEST_GRH_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_GRH_MD_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_REQUESTED_TEST_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_REQUESTED_TEST_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_PHC_BP_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_REQUESTED_TEST_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_REQUESTED_TEST_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_REQUESTED_TEST_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_REQUESTED_TEST_PHC_MD_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_GRH_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_GRH_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_GRH_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_GRH_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_SITE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_SITE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_SITE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_SITE_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PHC_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PHC_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PHC_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PHC_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PHC_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PHC_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_RESULT_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_RESULT_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_BP_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_RESULT_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_RESULT_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_PHC_BP_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_RESULT_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_RESULT_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_MD_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_RESULT_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_RESULT_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_RESULT_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_RESULT_PHC_MD_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_BP_OMOP`", "created_at": 1642459927.593415}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_PHC_BP_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_MD_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_PATHOLOGY_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_PATHOLOGY_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_PATHOLOGY_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_PATHOLOGY_PHC_MD_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_OBSERVATION_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_OBSERVATION_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_BP_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_OBSERVATION_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_OBSERVATION_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_PHC_BP_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_OBSERVATION_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_OBSERVATION_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_MD_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_OBSERVATION_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_OBSERVATION_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_OBSERVATION_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_OBSERVATION_PHC_MD_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_IMMUNISATION_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_IMMUNISATION_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_BP_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_IMMUNISATION_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_IMMUNISATION_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_MD_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_IMMUNISATION_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_IMMUNISATION_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_PHC_BP_OMOP`", "created_at": 1642459927.5944552}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_IMMUNISATION_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_IMMUNISATION_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_IMMUNISATION_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_IMMUNISATION_PHC_MD_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_TYPE_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_TYPE_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_TYPE_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTER_TYPE_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTER_TYPE_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_TYPE_MD_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_ENCOUNTER_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_ENCOUNTER_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_ENCOUNTER_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_ENCOUNTER_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTER_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTER_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_BP_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTER_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTER_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTER_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTER_PHC_BP_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PROVIDER_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PROVIDER_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_BP_OMOP`", "created_at": 1642459927.5954547}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PROVIDER_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PROVIDER_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PROVIDER_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PROVIDER_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_BP_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PROVIDER_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PROVIDER_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PROVIDER_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PROVIDER_PHC_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_PHC_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_PHC_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_SERVICE_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_SERVICE_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_BP_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_SERVICE_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_SERVICE_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_PHC_BP_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_SERVICE_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_SERVICE_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_SERVICE_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_SERVICE_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_SERVICE_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_SERVICE_PHC_MD_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BDV_BILLING_SERVICE_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BDV_BILLING_SERVICE_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BDV_BILLING_SERVICE_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BDV_BILLING_SERVICE_OMOP`", "created_at": 1642459927.5964541}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_BILLING_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_BILLING_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_BILLING_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_BILLING_PHC_BP_OMOP`", "created_at": 1642459927.5974555}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP`", "created_at": 1642459927.5974555}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_REACTION_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_REACTION_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_REACTION_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_REACTION_MD_OMOP`", "created_at": 1642459927.5974555}, "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP": {"fqn": ["nps_mi_2021", "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP"], "database": "nps-omop-project", "schema": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "unique_id": "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "original_file_path": "models\\src_B_SREDH_NPS_MI_SF_RDV_BDV_2021_2021.yml", "name": "SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP", "source_name": "B_SREDH_NPS_MI_SF_RDV_BDV_2021", "source_description": "", "loader": "", "identifier": "SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`B_SREDH_NPS_MI_SF_RDV_BDV_2021`.`SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP`", "created_at": 1642459927.5974555}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALCOHOL_STATUS"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "ALCOHOL_STATUS", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "ALCOHOL_STATUS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Alcohol status simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "RECORD_ID": {"name": "RECORD_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALCOHOL_STATUS`", "created_at": 1642461352.2118611}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ALLERGY_REACTION"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "ALLERGY_REACTION", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "ALLERGY_REACTION", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Allergy reaction simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "RECORD_ID": {"name": "RECORD_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ALLERGY_REACTION`", "created_at": 1642461352.2958581}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "BILLING_SERVICE"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "BILLING_SERVICE", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "BILLING_SERVICE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Billing service simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SERVICE_ID": {"name": "SERVICE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SERVICE_DATETIME": {"name": "SERVICE_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "VISIT_DATETIME": {"name": "VISIT_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`BILLING_SERVICE`", "created_at": 1642461352.4038618}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT_MATCHED_USUAL_PROVIDER"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATIENT_MATCHED_USUAL_PROVIDER", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATIENT_MATCHED_USUAL_PROVIDER", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Patient matched simplified table.", "columns": {"PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT_MATCHED_USUAL_PROVIDER`", "created_at": 1642461352.443899}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "CLINICAL_USER"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "CLINICAL_USER", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "CLINICAL_USER", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Clinical user simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SERVICE_ID": {"name": "SERVICE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PRESCRIBER_NUMBER": {"name": "PRESCRIBER_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PROVIDER_NUMBER": {"name": "PROVIDER_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PROVIDER_UPDATED_DATETIME": {"name": "PROVIDER_UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`CLINICAL_USER`", "created_at": 1642461352.5459352}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "ENCOUNTER", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "ENCOUNTER", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Encounter simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ENCOUNTER_ID": {"name": "ENCOUNTER_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "VISIT_DATETIME": {"name": "VISIT_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER`", "created_at": 1642461352.625974}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "ENCOUNTER_REASON"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "ENCOUNTER_REASON", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "ENCOUNTER_REASON", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Encounter reason simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ENCOUNTER_ID": {"name": "ENCOUNTER_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`ENCOUNTER_REASON`", "created_at": 1642461352.6843126}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "IMMUNISATION"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "IMMUNISATION", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "IMMUNISATION", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Immunization simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "IMMUNISATION_ID": {"name": "IMMUNISATION_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`IMMUNISATION`", "created_at": 1642461352.745923}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "OBSERVATION"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "OBSERVATION", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "OBSERVATION", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Observation simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "OBSERVATION_ID": {"name": "OBSERVATION_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "OBSERVATION_DATETIME": {"name": "OBSERVATION_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`OBSERVATION`", "created_at": 1642461352.820947}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_CONTACT"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PRACTICE_CONTACT", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PRACTICE_CONTACT", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PRACTICE CONTACT simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_CONTACT`", "created_at": 1642461352.838939}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRACTICE_RECRUITMENT"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PRACTICE_RECRUITMENT", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PRACTICE_RECRUITMENT", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PRACTICE RECRUITMENT simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRACTICE_RECRUITMENT`", "created_at": 1642461352.8559353}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REFERRALS": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "REFERRALS"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REFERRALS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "REFERRALS", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "REFERRALS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "REFERRALS simplified table.", "columns": {"SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`REFERRALS`", "created_at": 1642461352.8619273}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REQUESTED_TEST": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "REQUESTED_TEST"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REQUESTED_TEST", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "REQUESTED_TEST", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "REQUESTED_TEST", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "REQUESTED_TEST simplified table.", "columns": {"SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`REQUESTED_TEST`", "created_at": 1642461352.8669314}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_ALBUMIN"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATHOLOGY_ALBUMIN", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATHOLOGY_ALBUMIN", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PATHOLOGY_ALBUMIN simplified table.", "columns": {"PATHOLOGY_ID": {"name": "PATHOLOGY_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_ALBUMIN`", "created_at": 1642461352.8799384}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_EGFR"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATHOLOGY_EGFR", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATHOLOGY_EGFR", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PATHOLOGY_EGFR simplified table.", "columns": {"PATHOLOGY_ID": {"name": "PATHOLOGY_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_EGFR`", "created_at": 1642461352.8919404}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_LIPIDS"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATHOLOGY_LIPIDS", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATHOLOGY_LIPIDS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PATHOLOGY_LIPIDS simplified table.", "columns": {"PATHOLOGY_ID": {"name": "PATHOLOGY_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_LIPIDS`", "created_at": 1642461352.9049413}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_HBA1C"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATHOLOGY_HBA1C", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATHOLOGY_HBA1C", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PATHOLOGY_HBA1C simplified table.", "columns": {"PATHOLOGY_ID": {"name": "PATHOLOGY_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_HBA1C`", "created_at": 1642461352.9168944}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.DIAGNOSIS": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "DIAGNOSIS"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.DIAGNOSIS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "DIAGNOSIS", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "DIAGNOSIS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "DIAGNOSIS simplified table.", "columns": {"SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`DIAGNOSIS`", "created_at": 1642461352.9229376}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRESCRIPTION": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRESCRIPTION"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRESCRIPTION", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PRESCRIPTION", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PRESCRIPTION", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "PRESCRIPTION simplified table.", "columns": {"SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRESCRIPTION`", "created_at": 1642461352.9289021}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SCRIPT_ITEM": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SCRIPT_ITEM"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SCRIPT_ITEM", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "SCRIPT_ITEM", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "SCRIPT_ITEM", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SCRIPT_ITEM simplified table.", "columns": {"SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SCRIPT_ITEM`", "created_at": 1642461352.9348955}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.LONGITUDINAL_CIS_PATIENT_STATUS": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "LONGITUDINAL_CIS_PATIENT_STATUS"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.LONGITUDINAL_CIS_PATIENT_STATUS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "LONGITUDINAL_CIS_PATIENT_STATUS", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "LONGITUDINAL_CIS_PATIENT_STATUS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Longitudinal cis simplified table.", "columns": {"SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`LONGITUDINAL_CIS_PATIENT_STATUS`", "created_at": 1642461352.9429364}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATHOLOGY", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATHOLOGY", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Pathology simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATHOLOGY_ID": {"name": "PATHOLOGY_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "REQUEST_DATE": {"name": "REQUEST_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "REPORT_DATE": {"name": "REPORT_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "COLLECTION_DATE": {"name": "COLLECTION_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "IMPORT_DATE": {"name": "IMPORT_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY`", "created_at": 1642461353.0389338}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SITE"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "SITE", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "SITE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SITE simplified table.", "columns": {"SITE_EXTRACTION_TYPE": {"name": "SITE_EXTRACTION_TYPE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SITE`", "created_at": 1642461353.0439367}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATHOLOGY_RESULT"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATHOLOGY_RESULT", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATHOLOGY_RESULT", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Pathology result simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATHOLOGY_RESULT_ID": {"name": "PATHOLOGY_RESULT_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "RESULT_DATE": {"name": "RESULT_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATHOLOGY_RESULT`", "created_at": 1642461353.1279366}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PATIENT"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PATIENT", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PATIENT", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Patient simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_POSTCODE": {"name": "PATIENT_POSTCODE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_CREATED_DATE": {"name": "PATIENT_CREATED_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_MODIFIED_DATE": {"name": "PATIENT_MODIFIED_DATE", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PATIENT`", "created_at": 1642461353.176898}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "PRIMARY_HEALTH_NETWORK"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "PRIMARY_HEALTH_NETWORK", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "PRIMARY_HEALTH_NETWORK", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`PRIMARY_HEALTH_NETWORK`", "created_at": 1642461353.176898}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.POSTCODE": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "POSTCODE"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.POSTCODE", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "POSTCODE", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "POSTCODE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`POSTCODE`", "created_at": 1642461353.176898}, "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS": {"fqn": ["nps_mi_2021", "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "SMOKING_STATUS"], "database": "nps-omop-project", "schema": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "unique_id": "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "original_file_path": "models\\src_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.yml", "name": "SMOKING_STATUS", "source_name": "C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021", "source_description": "", "loader": "", "identifier": "SMOKING_STATUS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Smoking status simplified table.", "columns": {"SITE_ID": {"name": "SITE_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "RECORD_ID": {"name": "RECORD_ID", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SOURCE_SYSTEM": {"name": "SOURCE_SYSTEM", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PATIENT_NUMBER": {"name": "PATIENT_NUMBER", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "CREATED_DATETIME": {"name": "CREATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "UPDATED_DATETIME": {"name": "UPDATED_DATETIME", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`nps-omop-project`.`C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021`.`SMOKING_STATUS`", "created_at": 1642461353.2401035}}, "macros": {"macro.nps_mi_2021.generate_schema_name": {"unique_id": "macro.nps_mi_2021.generate_schema_name", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "macros\\generate_custom_schema_name.sql", "original_file_path": "macros\\generate_custom_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\r\n\r\n    {%- set default_schema = target.schema -%}\r\n    {%- if custom_schema_name is none -%}\r\n\r\n        {{ default_schema }}\r\n\r\n    {%- else -%}\r\n\r\n        {{ custom_schema_name }}\r\n\r\n    {%- endif -%}\r\n\r\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9056678}, "macro.nps_mi_2021.distinct_values": {"unique_id": "macro.nps_mi_2021.distinct_values", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "macros\\test_distinct_values.sql", "original_file_path": "macros\\test_distinct_values.sql", "name": "distinct_values", "macro_sql": "{% macro distinct_values(model, column_name) %}\r\n\r\nselect distinct {{column_name}} from {{model}} order by {{column_name}} \r\n\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9056678}, "macro.nps_mi_2021.phncodes": {"unique_id": "macro.nps_mi_2021.phncodes", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "macros\\test_get_column_values.sql", "original_file_path": "macros\\test_get_column_values.sql", "name": "phncodes", "macro_sql": "{% macro phncodes(table_name, column_name) %}\r\n{% set phn_unique = dbt_utils.get_column_values(table=ref('PRIMARY_HEALTH_NETWORK'), column='PHN_CODE_2017', order_by='PHNCODE_ID') %}\r\n\r\n{% for PHN_CODE_2017 in phn_unique %}\r\n\r\n{% endfor %}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9078183}, "macro.nps_mi_2021.test_not_null_proportion": {"unique_id": "macro.nps_mi_2021.test_not_null_proportion", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "macros\\test_not_null_proportion.sql", "original_file_path": "macros\\test_not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\r\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.nps_mi_2021.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9087877}, "macro.nps_mi_2021.default__test_not_null_proportion": {"unique_id": "macro.nps_mi_2021.default__test_not_null_proportion", "package_name": "nps_mi_2021", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main", "path": "macros\\test_not_null_proportion.sql", "original_file_path": "macros\\test_not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\r\n\r\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\r\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\r\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\r\n\r\nwith validation as (\r\n  select\r\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\r\n  from {{ model }}\r\n),\r\nvalidation_errors as (\r\n  select\r\n    not_null_proportion\r\n  from validation\r\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\r\n)\r\nselect\r\n  *\r\nfrom validation_errors\r\n\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.909824}, "macro.dbt_bigquery.partition_by": {"unique_id": "macro.dbt_bigquery.partition_by", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9179695}, "macro.dbt_bigquery.cluster_by": {"unique_id": "macro.dbt_bigquery.cluster_by", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9189634}, "macro.dbt_bigquery.bigquery_options": {"unique_id": "macro.dbt_bigquery.bigquery_options", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9199631}, "macro.dbt_bigquery.bigquery_table_options": {"unique_id": "macro.dbt_bigquery.bigquery_table_options", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9209619}, "macro.dbt_bigquery.bigquery__create_table_as": {"unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, sql) -%}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace table {{ relation }}\n  {{ partition_by(partition_config) }}\n  {{ cluster_by(raw_cluster_by) }}\n  {{ bigquery_table_options(config, model, temporary) }}\n  as (\n    {{ sql }}\n  );\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9219618}, "macro.dbt_bigquery.bigquery_view_options": {"unique_id": "macro.dbt_bigquery.bigquery_view_options", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9219618}, "macro.dbt_bigquery.bigquery__create_view_as": {"unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  as {{ sql }};\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9229639}, "macro.dbt_bigquery.bigquery__create_schema": {"unique_id": "macro.dbt_bigquery.bigquery__create_schema", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__create_schema", "macro_sql": "{% macro bigquery__create_schema(relation) -%}\n  {{ adapter.create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9229639}, "macro.dbt_bigquery.bigquery__drop_schema": {"unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9239624}, "macro.dbt_bigquery.bigquery__drop_relation": {"unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n  {% call statement('drop_relation') -%}\n    drop {{ relation.type }} if exists {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9239624}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9239624}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9249618}, "macro.dbt_bigquery.bigquery__current_timestamp": {"unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  CURRENT_TIMESTAMP()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9249618}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9249618}, "macro.dbt_bigquery.bigquery__list_schemas": {"unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9259613}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9260972}, "macro.dbt_bigquery.bigquery__persist_docs": {"unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9269626}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9269626}, "macro.dbt_bigquery.bigquery__rename_relation": {"unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9269626}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n  \n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9279652}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n  \n  {%- endset -%}\n  \n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9289646}, "macro.dbt_bigquery.bigquery__alter_column_type": {"unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#-- Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9309645}, "macro.dbt_bigquery.bigquery__test_unique": {"unique_id": "macro.dbt_bigquery.bigquery__test_unique", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "bigquery__test_unique", "macro_sql": "{% macro bigquery__test_unique(model, column_name) %}\n\nwith dbt_test__target as (\n  \n  select {{ column_name }} as unique_field\n  from {{ model }}\n  where {{ column_name }} is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9309645}, "macro.dbt_bigquery.bigquery__get_catalog": {"unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "name": "bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n  {%- if (schemas | length) == 0 -%}\n    {# Hopefully nothing cares about the columns we return when there are no rows #}\n    {%- set query  = \"select 1 as id limit 0\" -%}\n  {%- else -%}\n\n  {%- set query -%}\n    with tables as (\n        select\n            project_id as table_database,\n            dataset_id as table_schema,\n            table_id as original_table_name,\n\n            concat(project_id, '.', dataset_id, '.', table_id) as relation_id,\n\n            row_count,\n            size_bytes as size_bytes,\n            case\n                when type = 1 then 'table'\n                when type = 2 then 'view'\n                else 'external'\n            end as table_type,\n\n            REGEXP_CONTAINS(table_id, '^.+[0-9]{8}$') and coalesce(type, 0) = 1 as is_date_shard,\n            REGEXP_EXTRACT(table_id, '^(.+)[0-9]{8}$') as shard_base_name,\n            REGEXP_EXTRACT(table_id, '^.+([0-9]{8})$') as shard_name\n\n        from {{ information_schema.replace(information_schema_view='__TABLES__') }}\n        where (\n          {%- for schema in schemas -%}\n            upper(dataset_id) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n    ),\n\n    extracted as (\n\n        select *,\n            case\n                when is_date_shard then shard_base_name\n                else original_table_name\n            end as table_name\n\n        from tables\n\n    ),\n\n    unsharded_tables as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            coalesce(table_type, 'external') as table_type,\n            is_date_shard,\n\n            struct(\n                min(shard_name) as shard_min,\n                max(shard_name) as shard_max,\n                count(*) as shard_count\n            ) as table_shards,\n\n            sum(size_bytes) as size_bytes,\n            sum(row_count) as row_count,\n\n            max(relation_id) as relation_id\n\n        from extracted\n        group by 1,2,3,4,5\n\n    ),\n\n    info_schema_columns as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            table_catalog as table_database,\n            table_schema,\n            table_name,\n\n            -- use the \"real\" column name from the paths query below\n            column_name as base_column_name,\n            ordinal_position as column_index,\n\n            is_partitioning_column,\n            clustering_ordinal_position\n\n        from {{ information_schema.replace(information_schema_view='COLUMNS') }}\n        where ordinal_position is not null\n\n    ),\n\n    info_schema_column_paths as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            field_path as column_name,\n            data_type as column_type,\n            column_name as base_column_name,\n            description as column_comment\n\n        from {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }}\n\n    ),\n\n    columns as (\n\n        select * except (base_column_name)\n        from info_schema_columns\n        join info_schema_column_paths using (relation_id, base_column_name)\n\n    ),\n\n    column_stats as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            max(relation_id) as relation_id,\n            max(case when is_partitioning_column = 'YES' then 1 else 0 end) = 1 as is_partitioned,\n            max(case when is_partitioning_column = 'YES' then column_name else null end) as partition_column,\n            max(case when clustering_ordinal_position is not null then 1 else 0 end) = 1 as is_clustered,\n            array_to_string(\n                array_agg(\n                    case\n                        when clustering_ordinal_position is not null then column_name\n                        else null\n                    end ignore nulls\n                    order by clustering_ordinal_position\n                ), ', '\n            ) as clustering_columns\n\n        from columns\n        group by 1,2,3\n\n    )\n\n    select\n        unsharded_tables.table_database,\n        unsharded_tables.table_schema,\n        case\n            when is_date_shard then concat(unsharded_tables.table_name, '*')\n            else unsharded_tables.table_name\n        end as table_name,\n        unsharded_tables.table_type,\n\n        -- coalesce name and type for External tables - these columns are not\n        -- present in the COLUMN_FIELD_PATHS resultset\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields -- BQ does\n        -- not treat these nested properties as independent fields\n        row_number() over (\n            partition by relation_id\n            order by columns.column_index, columns.column_name\n        ) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        columns.column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_shards.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_shards.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_shards.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        is_clustered as `stats__clustering_fields__include`\n\n    -- join using relation_id (an actual relation, not a shard prefix) to make\n    -- sure that column metadata is picked up through the join. This will only\n    -- return the column information for the \"max\" table in a date-sharded table set\n    from unsharded_tables\n    left join columns using (relation_id)\n    left join column_stats using (relation_id)\n  {%- endset -%}\n\n  {%- endif -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.935963}, "macro.dbt_bigquery.date_sharded_table": {"unique_id": "macro.dbt_bigquery.date_sharded_table", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\etc.sql", "original_file_path": "macros\\etc.sql", "name": "date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9370751}, "macro.dbt_bigquery.grant_access_to": {"unique_id": "macro.dbt_bigquery.grant_access_to", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\etc.sql", "original_file_path": "macros\\etc.sql", "name": "grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.938116}, "macro.dbt_bigquery.get_partitions_metadata": {"unique_id": "macro.dbt_bigquery.get_partitions_metadata", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\etc.sql", "original_file_path": "macros\\etc.sql", "name": "get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.938116}, "macro.dbt_bigquery.materialization_copy_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\copy.sql", "original_file_path": "macros\\materializations\\copy.sql", "name": "materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(*ref_table)) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter's copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.941077}, "macro.dbt_bigquery.declare_dbt_max_partition": {"unique_id": "macro.dbt_bigquery.declare_dbt_max_partition", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "declare_dbt_max_partition", "macro_sql": "{% macro declare_dbt_max_partition(relation, partition_by, sql) %}\n\n  {% if '_dbt_max_partition' in sql %}\n\n    declare _dbt_max_partition {{ partition_by.data_type }} default (\n      select max({{ partition_by.field }}) from {{ this }}\n      where {{ partition_by.field }} is not null\n    );\n  \n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9441152}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\", default=\"merge\") -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.945117}, "macro.dbt_bigquery.bq_insert_overwrite": {"unique_id": "macro.dbt_bigquery.bq_insert_overwrite", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "bq_insert_overwrite", "macro_sql": "{% macro bq_insert_overwrite(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n) %}\n\n  {% if partitions is not none and partitions != [] %} {# static #}\n\n      {% set predicate -%}\n          {{ partition_by.render(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {{sql}}\n        )\n      {%- endset -%}\n\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header=true) }}\n\n  {% else %} {# dynamic #}\n\n      {% set predicate -%}\n          {{ partition_by.render(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type }}>;\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n        {{ declare_dbt_max_partition(this, partition_by, sql) }}\n        \n        -- 1. create a temp table\n        {{ create_table_as(True, tmp_relation, sql) }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              array_agg(distinct {{ partition_by.render() }})\n          from {{ tmp_relation }}\n      );\n\n      {#\n        TODO: include_sql_header is a hack; consider a better approach that includes\n              the sql_header at the materialization-level instead\n      #}\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header=false) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql", "macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.948105}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n    {%- endset %}\n    {% if partition_by is none %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, on_schema_change\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n    {%- set source_sql -%}\n      {%- if tmp_relation_exists -%}\n        (\n          select * from {{ tmp_relation }}\n        )\n      {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n          {{sql}}\n        )\n      {%- endif -%}\n    {%- endset -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.950075}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery' -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% else %}\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' %} {# Check first, since otherwise we may not build a temp table #}\n      {% do run_query(\n        declare_dbt_max_partition(this, partition_by, sql) + create_table_as(True, tmp_relation, sql)\n      ) %}\n      {% set tmp_relation_exists = true %}\n      {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n      {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n    ) %}\n\n  {% endif %}\n\n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {% endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.statement", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.955119}, "macro.dbt_bigquery.bigquery__create_csv_table": {"unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\seed.sql", "original_file_path": "macros\\materializations\\seed.sql", "name": "bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9561157}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\seed.sql", "original_file_path": "macros\\materializations\\seed.sql", "name": "bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9561157}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\seed.sql", "original_file_path": "macros\\materializations\\seed.sql", "name": "bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9573045}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot.sql", "name": "bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9583442}, "macro.dbt_bigquery.bigquery__create_columns": {"unique_id": "macro.dbt_bigquery.bigquery__create_columns", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot.sql", "name": "bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.959306}, "macro.dbt_bigquery.bigquery__post_snapshot": {"unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot.sql", "name": "bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.959306}, "macro.dbt_bigquery.materialization_table_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "name": "materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery' -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      We only need to drop this thing if it is not a table.\n      If it _is_ already a table, then we can overwrite it without downtime\n      Unlike table -> view, no need for `--full-refresh`: dropping a view is no big deal\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n  {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n    {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n    {% do adapter.drop_relation(old_relation) %}\n  {% endif %}\n  {% call statement('main') -%}\n    {{ create_table_as(False, target_relation, sql) }}\n  {% endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.963333}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\view.sql", "original_file_path": "macros\\materializations\\view.sql", "name": "bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9643333}, "macro.dbt_bigquery.materialization_view_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "package_name": "dbt_bigquery", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\bigquery", "path": "macros\\materializations\\view.sql", "original_file_path": "macros\\materializations\\view.sql", "name": "materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9653814}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9683456}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9693487}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9693487}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9703455}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9703455}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.971342}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9723456}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9733052}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9753485}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.976346}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.976346}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9773479}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.977457}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.978487}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9794967}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9794967}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.980458}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9824972}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9834967}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9834967}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9844987}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9844987}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9844987}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9854994}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9866192}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9866338}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9866338}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9884992}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9884992}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.989498}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.989498}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9904978}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.991497}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.993498}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9944859}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9944859}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9954972}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9954972}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.996458}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.996458}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9975004}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.997761}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9988043}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9988043}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359249.9997754}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0008018}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0008018}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0017612}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0017612}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0048018}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.007802}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0087621}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0098035}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0118003}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.012804}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0138016}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\accepted_values.sql", "original_file_path": "macros\\generic_test_sql\\accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0148008}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\not_null.sql", "original_file_path": "macros\\generic_test_sql\\not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.01579}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\relationships.sql", "original_file_path": "macros\\generic_test_sql\\relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.01579}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\unique.sql", "original_file_path": "macros\\generic_test_sql\\unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0169363}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0177734}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0188031}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0197616}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0197616}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0208027}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0218065}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0218065}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0228014}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.023803}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0248024}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.026915}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.026915}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.027801}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.027801}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.027801}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    \n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0298}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.030804}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0318055}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0418022}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.042802}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0478058}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0498002}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0508018}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0518022}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0518022}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0528004}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0608048}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.063805}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.065802}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0677893}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0687616}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0687616}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.069802}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  \n  {{ sql_header if sql_header is not none }}\n  \n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0708015}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\table.sql", "original_file_path": "macros\\materializations\\models\\table\\table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0769415}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_or_replace_view.sql", "original_file_path": "macros\\materializations\\models\\view\\create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0798054}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.080801}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.080801}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.080801}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.081802}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\helpers.sql", "original_file_path": "macros\\materializations\\models\\view\\helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0828292}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\helpers.sql", "original_file_path": "macros\\materializations\\models\\view\\helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0828292}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\view.sql", "original_file_path": "macros\\materializations\\models\\view\\view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0898187}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0958116}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0978014}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0987618}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0997891}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0997891}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.0997891}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.100802}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.100802}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1018016}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1018016}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1048024}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\seed.sql", "original_file_path": "macros\\materializations\\seeds\\seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1098015}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1158016}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1158016}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1168032}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.116967}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.116967}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1187894}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1187894}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1198282}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1207895}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.133764}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1357617}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1357617}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1417897}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1427608}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1427608}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1427608}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1437926}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1457996}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1474955}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1481426}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1541107}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1599767}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.160936}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1619754}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\test.sql", "original_file_path": "macros\\materializations\\tests\\test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.165978}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.167116}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1679783}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1689782}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1689782}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1699758}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1709747}, "macro.dbt_date.get_base_dates": {"unique_id": "macro.dbt_date.get_base_dates", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\get_base_dates.sql", "original_file_path": "macros\\get_base_dates.sql", "name": "get_base_dates", "macro_sql": "{% macro get_base_dates(start_date=None, end_date=None, n_dateparts=None, datepart=\"day\") %}\n    {{ adapter.dispatch('get_base_dates', 'dbt_date') (start_date, end_date, n_dateparts, datepart) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__get_base_dates"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1719851}, "macro.dbt_date.default__get_base_dates": {"unique_id": "macro.dbt_date.default__get_base_dates", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\get_base_dates.sql", "original_file_path": "macros\\get_base_dates.sql", "name": "default__get_base_dates", "macro_sql": "{% macro default__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as \" ~ dbt_utils.type_timestamp() ~ \")\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as \" ~ dbt_utils.type_timestamp() ~ \")\"  -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt_utils.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_utils.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt_utils.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_utils.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1739373}, "macro.dbt_date.bigquery__get_base_dates": {"unique_id": "macro.dbt_date.bigquery__get_base_dates", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\get_base_dates.sql", "original_file_path": "macros\\get_base_dates.sql", "name": "bigquery__get_base_dates", "macro_sql": "{% macro bigquery__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as date )\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as date )\" -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt_utils.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_utils.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt_utils.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_utils.date_spine", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1749802}, "macro.dbt_date.get_date_dimension": {"unique_id": "macro.dbt_date.get_date_dimension", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\get_date_dimension.sql", "original_file_path": "macros\\get_date_dimension.sql", "name": "get_date_dimension", "macro_sql": "{% macro get_date_dimension(start_date, end_date) %}\n    {{ adapter.dispatch('get_date_dimension', 'dbt_date') (start_date, end_date) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.default__get_date_dimension"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1879795}, "macro.dbt_date.default__get_date_dimension": {"unique_id": "macro.dbt_date.default__get_date_dimension", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\get_date_dimension.sql", "original_file_path": "macros\\get_date_dimension.sql", "name": "default__get_date_dimension", "macro_sql": "{% macro default__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt_utils.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt_utils.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=false) }} as day_of_week,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week_iso,\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt_utils.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ dbt_utils.last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt_utils.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ dbt_utils.last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as quarter_of_year,\n    cast({{ dbt_utils.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    cast({{ dbt_utils.last_day('d.date_day', 'quarter') }} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as year_number,\n    cast({{ dbt_utils.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ dbt_utils.last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt_utils.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt_utils.type_int", "macro.dbt_date.month_name", "macro.dbt_utils.date_trunc", "macro.dbt_utils.last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.192936}, "macro.dbt_date.postgres__get_date_dimension": {"unique_id": "macro.dbt_date.postgres__get_date_dimension", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\get_date_dimension.sql", "original_file_path": "macros\\get_date_dimension.sql", "name": "postgres__get_date_dimension", "macro_sql": "{% macro postgres__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt_utils.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt_utils.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week,\n\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt_utils.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ dbt_utils.last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt_utils.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ dbt_utils.last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as quarter_of_year,\n    cast({{ dbt_utils.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    {# dbt_utils.last_day does not support quarter because postgresql does not support quarter interval. #}\n    cast({{dbt_utils.dateadd('day', '-1', dbt_utils.dateadd('month', '3', dbt_utils.date_trunc('quarter', 'd.date_day')))}} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt_utils.type_int() }}) as year_number,\n    cast({{ dbt_utils.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ dbt_utils.last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt_utils.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt_utils.type_int", "macro.dbt_date.month_name", "macro.dbt_utils.date_trunc", "macro.dbt_utils.last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1979773}, "macro.dbt_date.convert_timezone": {"unique_id": "macro.dbt_date.convert_timezone", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\convert_timezone.sql", "original_file_path": "macros\\calendar_date\\convert_timezone.sql", "name": "convert_timezone", "macro_sql": "{%- macro convert_timezone(column, target_tz=None, source_tz=None) -%}\n{%- set source_tz = \"UTC\" if not source_tz else source_tz -%}\n{%- set target_tz = var(\"dbt_date:time_zone\") if not target_tz else target_tz -%}\n{{ adapter.dispatch('convert_timezone', 'dbt_date') (column, target_tz, source_tz) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.1999784}, "macro.dbt_date.default__convert_timezone": {"unique_id": "macro.dbt_date.default__convert_timezone", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\convert_timezone.sql", "original_file_path": "macros\\calendar_date\\convert_timezone.sql", "name": "default__convert_timezone", "macro_sql": "{% macro default__convert_timezone(column, target_tz, source_tz) -%}\n{%- if not source_tz -%}\ncast(convert_timezone('{{ target_tz }}', {{ column }}) as {{ dbt_utils.type_timestamp() }})\n{%- else -%}\ncast(convert_timezone('{{ source_tz }}', '{{ target_tz }}', {{ column }}) as {{ dbt_utils.type_timestamp() }})\n{%- endif -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2009368}, "macro.dbt_date.bigquery__convert_timezone": {"unique_id": "macro.dbt_date.bigquery__convert_timezone", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\convert_timezone.sql", "original_file_path": "macros\\calendar_date\\convert_timezone.sql", "name": "bigquery__convert_timezone", "macro_sql": "{%- macro bigquery__convert_timezone(column, target_tz, source_tz=None) -%}\ntimestamp(datetime({{ column }}, '{{ target_tz}}'))\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2009368}, "macro.dbt_date.spark__convert_timezone": {"unique_id": "macro.dbt_date.spark__convert_timezone", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\convert_timezone.sql", "original_file_path": "macros\\calendar_date\\convert_timezone.sql", "name": "spark__convert_timezone", "macro_sql": "{%- macro spark__convert_timezone(column, target_tz, source_tz) -%}\nfrom_utc_timestamp(\n        to_utc_timestamp({{ column }}, '{{ source_tz }}'),\n        '{{ target_tz }}'\n        )\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2019358}, "macro.dbt_date.postgres__convert_timezone": {"unique_id": "macro.dbt_date.postgres__convert_timezone", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\convert_timezone.sql", "original_file_path": "macros\\calendar_date\\convert_timezone.sql", "name": "postgres__convert_timezone", "macro_sql": "{% macro postgres__convert_timezone(column, target_tz, source_tz) -%}\n{%- if source_tz -%}\ncast({{ column }} at time zone '{{ source_tz }}' at time zone '{{ target_tz }}' as {{ dbt_utils.type_timestamp() }})\n{%- else -%}\ncast({{ column }} at time zone '{{ target_tz }}' as {{ dbt_utils.type_timestamp() }})\n{%- endif -%}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2029731}, "macro.dbt_date.date_part": {"unique_id": "macro.dbt_date.date_part", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\date_part.sql", "original_file_path": "macros\\calendar_date\\date_part.sql", "name": "date_part", "macro_sql": "{% macro date_part(datepart, date) -%}\n    {{ adapter.dispatch('date_part', 'dbt_date') (datepart, date) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2029731}, "macro.dbt_date.default__date_part": {"unique_id": "macro.dbt_date.default__date_part", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\date_part.sql", "original_file_path": "macros\\calendar_date\\date_part.sql", "name": "default__date_part", "macro_sql": "{% macro default__date_part(datepart, date) -%}\n    date_part('{{ datepart }}', {{  date }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2039766}, "macro.dbt_date.bigquery__date_part": {"unique_id": "macro.dbt_date.bigquery__date_part", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\date_part.sql", "original_file_path": "macros\\calendar_date\\date_part.sql", "name": "bigquery__date_part", "macro_sql": "{% macro bigquery__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2039766}, "macro.dbt_date.day_name": {"unique_id": "macro.dbt_date.day_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_name.sql", "original_file_path": "macros\\calendar_date\\day_name.sql", "name": "day_name", "macro_sql": "{%- macro day_name(date, short=True) -%}\n    {{ adapter.dispatch('day_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__day_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2049637}, "macro.dbt_date.default__day_name": {"unique_id": "macro.dbt_date.default__day_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_name.sql", "original_file_path": "macros\\calendar_date\\day_name.sql", "name": "default__day_name", "macro_sql": "\n\n{%- macro default__day_name(date, short) -%}\n{%- set f = 'Dy' if short else 'Day' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2059753}, "macro.dbt_date.snowflake__day_name": {"unique_id": "macro.dbt_date.snowflake__day_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_name.sql", "original_file_path": "macros\\calendar_date\\day_name.sql", "name": "snowflake__day_name", "macro_sql": "\n\n{%- macro snowflake__day_name(date, short) -%}\n    {%- if short -%}\n    dayname({{ date }})\n    {%- else -%}\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname({{ date }})\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2059753}, "macro.dbt_date.bigquery__day_name": {"unique_id": "macro.dbt_date.bigquery__day_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_name.sql", "original_file_path": "macros\\calendar_date\\day_name.sql", "name": "bigquery__day_name", "macro_sql": "\n\n{%- macro bigquery__day_name(date, short) -%}\n{%- set f = '%a' if short else '%A' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2069643}, "macro.dbt_date.postgres__day_name": {"unique_id": "macro.dbt_date.postgres__day_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_name.sql", "original_file_path": "macros\\calendar_date\\day_name.sql", "name": "postgres__day_name", "macro_sql": "\n\n{%- macro postgres__day_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMDy' if short else 'FMDay' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2071476}, "macro.dbt_date.day_of_month": {"unique_id": "macro.dbt_date.day_of_month", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_month.sql", "original_file_path": "macros\\calendar_date\\day_of_month.sql", "name": "day_of_month", "macro_sql": "{%- macro day_of_month(date) -%}\n{{ dbt_date.date_part('day', date) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.207977}, "macro.dbt_date.redshift__day_of_month": {"unique_id": "macro.dbt_date.redshift__day_of_month", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_month.sql", "original_file_path": "macros\\calendar_date\\day_of_month.sql", "name": "redshift__day_of_month", "macro_sql": "\n\n{%- macro redshift__day_of_month(date) -%}\ncast({{ dbt_date.date_part('day', date) }} as {{ dbt_utils.type_bigint() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_utils.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.207977}, "macro.dbt_date.day_of_week": {"unique_id": "macro.dbt_date.day_of_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_week.sql", "original_file_path": "macros\\calendar_date\\day_of_week.sql", "name": "day_of_week", "macro_sql": "{%- macro day_of_week(date, isoweek=true) -%}\n{{ adapter.dispatch('day_of_week', 'dbt_date') (date, isoweek) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.210975}, "macro.dbt_date.default__day_of_week": {"unique_id": "macro.dbt_date.default__day_of_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_week.sql", "original_file_path": "macros\\calendar_date\\day_of_week.sql", "name": "default__day_of_week", "macro_sql": "\n\n{%- macro default__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else {{ dow }}\n    end\n    {%- else -%}\n    {{ dow }} + 1\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2119365}, "macro.dbt_date.snowflake__day_of_week": {"unique_id": "macro.dbt_date.snowflake__day_of_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_week.sql", "original_file_path": "macros\\calendar_date\\day_of_week.sql", "name": "snowflake__day_of_week", "macro_sql": "\n\n{%- macro snowflake__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'dayofweekiso' -%}\n        {{ dbt_date.date_part(dow_part, date) }}\n    {%- else -%}\n        {%- set dow_part = 'dayofweek' -%}\n        case\n            when {{ dbt_date.date_part(dow_part, date) }} = 7 then 1\n            else {{ dbt_date.date_part(dow_part, date) }} + 1\n        end\n    {%- endif -%}\n\n\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2129762}, "macro.dbt_date.bigquery__day_of_week": {"unique_id": "macro.dbt_date.bigquery__day_of_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_week.sql", "original_file_path": "macros\\calendar_date\\day_of_week.sql", "name": "bigquery__day_of_week", "macro_sql": "\n\n{%- macro bigquery__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (1) to Monday (2)\n        when {{ dow }} = 1 then 7\n        else {{ dow }} - 1\n    end\n    {%- else -%}\n    {{ dow }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2129762}, "macro.dbt_date.postgres__day_of_week": {"unique_id": "macro.dbt_date.postgres__day_of_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_week.sql", "original_file_path": "macros\\calendar_date\\day_of_week.sql", "name": "postgres__day_of_week", "macro_sql": "\n\n\n{%- macro postgres__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'isodow' -%}\n        -- Monday(1) to Sunday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} as {{ dbt_utils.type_int() }})\n    {%- else -%}\n        {%- set dow_part = 'dow' -%}\n        -- Sunday(1) to Saturday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} + 1 as {{ dbt_utils.type_int() }})\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2139773}, "macro.dbt_date.redshift__day_of_week": {"unique_id": "macro.dbt_date.redshift__day_of_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_week.sql", "original_file_path": "macros\\calendar_date\\day_of_week.sql", "name": "redshift__day_of_week", "macro_sql": "\n\n\n{%- macro redshift__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else cast({{ dow }} as {{ dbt_utils.type_bigint() }})\n    end\n    {%- else -%}\n    cast({{ dow }} + 1 as {{ dbt_utils.type_bigint() }})\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_utils.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2149773}, "macro.dbt_date.day_of_year": {"unique_id": "macro.dbt_date.day_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_year.sql", "original_file_path": "macros\\calendar_date\\day_of_year.sql", "name": "day_of_year", "macro_sql": "{%- macro day_of_year(date) -%}\n{{ adapter.dispatch('day_of_year', 'dbt_date') (date) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.default__day_of_year"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.215978}, "macro.dbt_date.default__day_of_year": {"unique_id": "macro.dbt_date.default__day_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_year.sql", "original_file_path": "macros\\calendar_date\\day_of_year.sql", "name": "default__day_of_year", "macro_sql": "\n\n{%- macro default__day_of_year(date) -%}\n    {{ dbt_date.date_part('dayofyear', date) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.215978}, "macro.dbt_date.postgres__day_of_year": {"unique_id": "macro.dbt_date.postgres__day_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_year.sql", "original_file_path": "macros\\calendar_date\\day_of_year.sql", "name": "postgres__day_of_year", "macro_sql": "\n\n{%- macro postgres__day_of_year(date) -%}\n    {{ dbt_date.date_part('doy', date) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.215978}, "macro.dbt_date.redshift__day_of_year": {"unique_id": "macro.dbt_date.redshift__day_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\day_of_year.sql", "original_file_path": "macros\\calendar_date\\day_of_year.sql", "name": "redshift__day_of_year", "macro_sql": "\n\n{%- macro redshift__day_of_year(date) -%}\n    cast({{ dbt_date.date_part('dayofyear', date) }} as {{ dbt_utils.type_bigint() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_utils.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.216978}, "macro.dbt_date.from_unixtimestamp": {"unique_id": "macro.dbt_date.from_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\from_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\from_unixtimestamp.sql", "name": "from_unixtimestamp", "macro_sql": "{%- macro from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {{ adapter.dispatch('from_unixtimestamp', 'dbt_date') (epochs, format) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__from_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.218943}, "macro.dbt_date.default__from_unixtimestamp": {"unique_id": "macro.dbt_date.default__from_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\from_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\from_unixtimestamp.sql", "name": "default__from_unixtimestamp", "macro_sql": "\n\n{%- macro default__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp({{ epochs }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.218943}, "macro.dbt_date.postgres__from_unixtimestamp": {"unique_id": "macro.dbt_date.postgres__from_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\from_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\from_unixtimestamp.sql", "name": "postgres__from_unixtimestamp", "macro_sql": "\n\n{%- macro postgres__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2199104}, "macro.dbt_date.snowflake__from_unixtimestamp": {"unique_id": "macro.dbt_date.snowflake__from_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\from_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\from_unixtimestamp.sql", "name": "snowflake__from_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n    {%- set scale = 0 -%}\n    {%- elif format == \"milliseconds\" -%}\n    {%- set scale = 3 -%}\n    {%- elif format == \"microseconds\" -%}\n    {%- set scale = 6 -%}\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp_ntz({{ epochs }}, {{ scale }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2208705}, "macro.dbt_date.bigquery__from_unixtimestamp": {"unique_id": "macro.dbt_date.bigquery__from_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\from_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\from_unixtimestamp.sql", "name": "bigquery__from_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n        timestamp_seconds({{ epochs }})\n    {%- elif format == \"milliseconds\" -%}\n        timestamp_millis({{ epochs }})\n    {%- elif format == \"microseconds\" -%}\n        timestamp_micros({{ epochs }})\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.221914}, "macro.dbt_date.iso_week_end": {"unique_id": "macro.dbt_date.iso_week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_end.sql", "original_file_path": "macros\\calendar_date\\iso_week_end.sql", "name": "iso_week_end", "macro_sql": "{%- macro iso_week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2229106}, "macro.dbt_date._iso_week_end": {"unique_id": "macro.dbt_date._iso_week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_end.sql", "original_file_path": "macros\\calendar_date\\iso_week_end.sql", "name": "_iso_week_end", "macro_sql": "{%- macro _iso_week_end(date, week_type) -%}\n{%- set dt = dbt_date.iso_week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.iso_week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2229106}, "macro.dbt_date.default__iso_week_end": {"unique_id": "macro.dbt_date.default__iso_week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_end.sql", "original_file_path": "macros\\calendar_date\\iso_week_end.sql", "name": "default__iso_week_end", "macro_sql": "\n\n{%- macro default__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'isoweek') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.22391}, "macro.dbt_date.snowflake__iso_week_end": {"unique_id": "macro.dbt_date.snowflake__iso_week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_end.sql", "original_file_path": "macros\\calendar_date\\iso_week_end.sql", "name": "snowflake__iso_week_end", "macro_sql": "\n\n{%- macro snowflake__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'weekiso') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.22391}, "macro.dbt_date.iso_week_of_year": {"unique_id": "macro.dbt_date.iso_week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_of_year.sql", "original_file_path": "macros\\calendar_date\\iso_week_of_year.sql", "name": "iso_week_of_year", "macro_sql": "{%- macro iso_week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2249098}, "macro.dbt_date._iso_week_of_year": {"unique_id": "macro.dbt_date._iso_week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_of_year.sql", "original_file_path": "macros\\calendar_date\\iso_week_of_year.sql", "name": "_iso_week_of_year", "macro_sql": "{%- macro _iso_week_of_year(date, week_type) -%}\ncast({{ dbt_date.date_part(week_type, date) }} as {{ dbt_utils.type_int() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.225898}, "macro.dbt_date.default__iso_week_of_year": {"unique_id": "macro.dbt_date.default__iso_week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_of_year.sql", "original_file_path": "macros\\calendar_date\\iso_week_of_year.sql", "name": "default__iso_week_of_year", "macro_sql": "\n\n{%- macro default__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'isoweek') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.225898}, "macro.dbt_date.snowflake__iso_week_of_year": {"unique_id": "macro.dbt_date.snowflake__iso_week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_of_year.sql", "original_file_path": "macros\\calendar_date\\iso_week_of_year.sql", "name": "snowflake__iso_week_of_year", "macro_sql": "\n\n{%- macro snowflake__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'weekiso') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.225898}, "macro.dbt_date.postgres__iso_week_of_year": {"unique_id": "macro.dbt_date.postgres__iso_week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_of_year.sql", "original_file_path": "macros\\calendar_date\\iso_week_of_year.sql", "name": "postgres__iso_week_of_year", "macro_sql": "\n\n{%- macro postgres__iso_week_of_year(date) -%}\n-- postgresql week is isoweek, the first week of a year containing January 4 of that year.\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.226911}, "macro.dbt_date.iso_week_start": {"unique_id": "macro.dbt_date.iso_week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_start.sql", "original_file_path": "macros\\calendar_date\\iso_week_start.sql", "name": "iso_week_start", "macro_sql": "{%- macro iso_week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2278705}, "macro.dbt_date._iso_week_start": {"unique_id": "macro.dbt_date._iso_week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_start.sql", "original_file_path": "macros\\calendar_date\\iso_week_start.sql", "name": "_iso_week_start", "macro_sql": "{%- macro _iso_week_start(date, week_type) -%}\ncast({{ dbt_utils.date_trunc(week_type, date) }} as date)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2278705}, "macro.dbt_date.default__iso_week_start": {"unique_id": "macro.dbt_date.default__iso_week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_start.sql", "original_file_path": "macros\\calendar_date\\iso_week_start.sql", "name": "default__iso_week_start", "macro_sql": "\n\n{%- macro default__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'isoweek') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.228912}, "macro.dbt_date.snowflake__iso_week_start": {"unique_id": "macro.dbt_date.snowflake__iso_week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_start.sql", "original_file_path": "macros\\calendar_date\\iso_week_start.sql", "name": "snowflake__iso_week_start", "macro_sql": "\n\n{%- macro snowflake__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.228912}, "macro.dbt_date.postgres__iso_week_start": {"unique_id": "macro.dbt_date.postgres__iso_week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\iso_week_start.sql", "original_file_path": "macros\\calendar_date\\iso_week_start.sql", "name": "postgres__iso_week_start", "macro_sql": "\n\n{%- macro postgres__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.228912}, "macro.dbt_date.last_month": {"unique_id": "macro.dbt_date.last_month", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\last_month.sql", "original_file_path": "macros\\calendar_date\\last_month.sql", "name": "last_month", "macro_sql": "{%- macro last_month(tz=None) -%}\n{{ dbt_date.n_months_ago(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_months_ago"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2299094}, "macro.dbt_date.last_month_name": {"unique_id": "macro.dbt_date.last_month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\last_month_name.sql", "original_file_path": "macros\\calendar_date\\last_month_name.sql", "name": "last_month_name", "macro_sql": "{%- macro last_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.lastnext_month(1, tz), short=short) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.month_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2309372}, "macro.dbt_date.last_month_number": {"unique_id": "macro.dbt_date.last_month_number", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\last_month_number.sql", "original_file_path": "macros\\calendar_date\\last_month_number.sql", "name": "last_month_number", "macro_sql": "{%- macro last_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.last_month(1, tz)) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2309372}, "macro.dbt_date.last_month_start_date": {"unique_id": "macro.dbt_date.last_month_start_date", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\last_month_start_date.sql", "original_file_path": "macros\\calendar_date\\last_month_start_date.sql", "name": "last_month_start_date", "macro_sql": "{%- macro last_month_start_date(tz=None) -%}\n{{ dbt_date.last_month(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2319124}, "macro.dbt_date.last_week": {"unique_id": "macro.dbt_date.last_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\last_week.sql", "original_file_path": "macros\\calendar_date\\last_week.sql", "name": "last_week", "macro_sql": "{%- macro last_week(tz=None) -%}\n{{ dbt_date.n_weeks_ago(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_weeks_ago"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2319124}, "macro.dbt_date.month_name": {"unique_id": "macro.dbt_date.month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\month_name.sql", "original_file_path": "macros\\calendar_date\\month_name.sql", "name": "month_name", "macro_sql": "{%- macro month_name(date, short=True) -%}\n    {{ adapter.dispatch('month_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__month_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.23291}, "macro.dbt_date.default__month_name": {"unique_id": "macro.dbt_date.default__month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\month_name.sql", "original_file_path": "macros\\calendar_date\\month_name.sql", "name": "default__month_name", "macro_sql": "\n\n{%- macro default__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MONTH' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2339096}, "macro.dbt_date.bigquery__month_name": {"unique_id": "macro.dbt_date.bigquery__month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\month_name.sql", "original_file_path": "macros\\calendar_date\\month_name.sql", "name": "bigquery__month_name", "macro_sql": "\n\n{%- macro bigquery__month_name(date, short) -%}\n{%- set f = '%b' if short else '%B' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2339096}, "macro.dbt_date.snowflake__month_name": {"unique_id": "macro.dbt_date.snowflake__month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\month_name.sql", "original_file_path": "macros\\calendar_date\\month_name.sql", "name": "snowflake__month_name", "macro_sql": "\n\n{%- macro snowflake__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MMMM' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2348754}, "macro.dbt_date.postgres__month_name": {"unique_id": "macro.dbt_date.postgres__month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\month_name.sql", "original_file_path": "macros\\calendar_date\\month_name.sql", "name": "postgres__month_name", "macro_sql": "\n\n{%- macro postgres__month_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMMon' if short else 'FMMonth' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2348754}, "macro.dbt_date.next_month": {"unique_id": "macro.dbt_date.next_month", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\next_month.sql", "original_file_path": "macros\\calendar_date\\next_month.sql", "name": "next_month", "macro_sql": "{%- macro next_month(tz=None) -%}\n{{ dbt_date.n_months_away(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_months_away"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.235911}, "macro.dbt_date.next_month_name": {"unique_id": "macro.dbt_date.next_month_name", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\next_month_name.sql", "original_file_path": "macros\\calendar_date\\next_month_name.sql", "name": "next_month_name", "macro_sql": "{%- macro next_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.next_month(1, tz), short=short) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2369099}, "macro.dbt_date.next_month_number": {"unique_id": "macro.dbt_date.next_month_number", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\next_month_number.sql", "original_file_path": "macros\\calendar_date\\next_month_number.sql", "name": "next_month_number", "macro_sql": "{%- macro next_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.next_month(1, tz)) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2370548}, "macro.dbt_date.next_month_start_date": {"unique_id": "macro.dbt_date.next_month_start_date", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\next_month_start_date.sql", "original_file_path": "macros\\calendar_date\\next_month_start_date.sql", "name": "next_month_start_date", "macro_sql": "{%- macro next_month_start_date(tz=None) -%}\n{{ dbt_date.next_month(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2379138}, "macro.dbt_date.next_week": {"unique_id": "macro.dbt_date.next_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\next_week.sql", "original_file_path": "macros\\calendar_date\\next_week.sql", "name": "next_week", "macro_sql": "{%- macro next_week(tz=None) -%}\n{{ dbt_date.n_weeks_away(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_weeks_away"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.238909}, "macro.dbt_date.next_week_start_date": {"unique_id": "macro.dbt_date.next_week_start_date", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\next_week_start_date.sql", "original_file_path": "macros\\calendar_date\\next_week_start_date.sql", "name": "next_week_start_date", "macro_sql": "{%- macro next_week_start_date(tz=None) -%}\n{{ dbt_date.next_week(1, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.next_week"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.238909}, "macro.dbt_date.now": {"unique_id": "macro.dbt_date.now", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\now.sql", "original_file_path": "macros\\calendar_date\\now.sql", "name": "now", "macro_sql": "{%- macro now(tz=None) -%}\n{{ dbt_date.convert_timezone(dbt_utils.current_timestamp(), tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.convert_timezone", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2399106}, "macro.dbt_date.n_days_ago": {"unique_id": "macro.dbt_date.n_days_ago", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\n_days_ago.sql", "original_file_path": "macros\\calendar_date\\n_days_ago.sql", "name": "n_days_ago", "macro_sql": "{%- macro n_days_ago(n, date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{%- set n = n|int -%}\ncast({{ dbt_utils.dateadd('day', -1 * n, dt) }} as date)\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.240914}, "macro.dbt_date.n_days_away": {"unique_id": "macro.dbt_date.n_days_away", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\n_days_away.sql", "original_file_path": "macros\\calendar_date\\n_days_away.sql", "name": "n_days_away", "macro_sql": "{%- macro n_days_away(n, date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(-1 * n, date, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2419076}, "macro.dbt_date.n_months_ago": {"unique_id": "macro.dbt_date.n_months_ago", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\n_months_ago.sql", "original_file_path": "macros\\calendar_date\\n_months_ago.sql", "name": "n_months_ago", "macro_sql": "{%- macro n_months_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt_utils.date_trunc('month', \n    dbt_utils.dateadd('month', -1 * n, \n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc", "macro.dbt_utils.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2429113}, "macro.dbt_date.n_months_away": {"unique_id": "macro.dbt_date.n_months_away", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\n_months_away.sql", "original_file_path": "macros\\calendar_date\\n_months_away.sql", "name": "n_months_away", "macro_sql": "{%- macro n_months_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt_utils.date_trunc('month', \n    dbt_utils.dateadd('month', n, \n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc", "macro.dbt_utils.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2429113}, "macro.dbt_date.n_weeks_ago": {"unique_id": "macro.dbt_date.n_weeks_ago", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\n_weeks_ago.sql", "original_file_path": "macros\\calendar_date\\n_weeks_ago.sql", "name": "n_weeks_ago", "macro_sql": "{%- macro n_weeks_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt_utils.date_trunc('week', \n    dbt_utils.dateadd('week', -1 * n, \n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc", "macro.dbt_utils.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2439103}, "macro.dbt_date.n_weeks_away": {"unique_id": "macro.dbt_date.n_weeks_away", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\n_weeks_away.sql", "original_file_path": "macros\\calendar_date\\n_weeks_away.sql", "name": "n_weeks_away", "macro_sql": "{%- macro n_weeks_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt_utils.date_trunc('week', \n    dbt_utils.dateadd('week', n, \n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc", "macro.dbt_utils.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.244911}, "macro.dbt_date.periods_since": {"unique_id": "macro.dbt_date.periods_since", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\periods_since.sql", "original_file_path": "macros\\calendar_date\\periods_since.sql", "name": "periods_since", "macro_sql": "{%- macro periods_since(date_col, period_name='day', tz=None) -%}\n{{ dbt_utils.datediff(date_col, dbt_date.today(tz), period_name) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2459095}, "macro.dbt_date.this_week": {"unique_id": "macro.dbt_date.this_week", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\this_week.sql", "original_file_path": "macros\\calendar_date\\this_week.sql", "name": "this_week", "macro_sql": "{%- macro this_week(date=None, tz=None) -%}\n{{ dbt_utils.this_week_start(date, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2469113}, "macro.dbt_date.today": {"unique_id": "macro.dbt_date.today", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\today.sql", "original_file_path": "macros\\calendar_date\\today.sql", "name": "today", "macro_sql": "{%- macro today(tz=None) -%}\ncast({{ dbt_date.now(tz) }} as date)\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2471383}, "macro.dbt_date.tomorrow": {"unique_id": "macro.dbt_date.tomorrow", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\tomorrow.sql", "original_file_path": "macros\\calendar_date\\tomorrow.sql", "name": "tomorrow", "macro_sql": "{%- macro tomorrow(date=None, tz=None) -%}\n{{ dbt_date.n_days_away(1, date, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2479107}, "macro.dbt_date.to_unixtimestamp": {"unique_id": "macro.dbt_date.to_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\to_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\to_unixtimestamp.sql", "name": "to_unixtimestamp", "macro_sql": "{%- macro to_unixtimestamp(timestamp) -%}\n    {{ adapter.dispatch('to_unixtimestamp', 'dbt_date') (timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.bigquery__to_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.248886}, "macro.dbt_date.default__to_unixtimestamp": {"unique_id": "macro.dbt_date.default__to_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\to_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\to_unixtimestamp.sql", "name": "default__to_unixtimestamp", "macro_sql": "\n\n{%- macro default__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch', timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.248886}, "macro.dbt_date.snowflake__to_unixtimestamp": {"unique_id": "macro.dbt_date.snowflake__to_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\to_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\to_unixtimestamp.sql", "name": "snowflake__to_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch_seconds', timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.248886}, "macro.dbt_date.bigquery__to_unixtimestamp": {"unique_id": "macro.dbt_date.bigquery__to_unixtimestamp", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\to_unixtimestamp.sql", "original_file_path": "macros\\calendar_date\\to_unixtimestamp.sql", "name": "bigquery__to_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__to_unixtimestamp(timestamp) -%}\n    unix_seconds({{ timestamp }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.248886}, "macro.dbt_date.week_end": {"unique_id": "macro.dbt_date.week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_end.sql", "original_file_path": "macros\\calendar_date\\week_end.sql", "name": "week_end", "macro_sql": "{%- macro week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_end"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2509093}, "macro.dbt_date.default__week_end": {"unique_id": "macro.dbt_date.default__week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_end.sql", "original_file_path": "macros\\calendar_date\\week_end.sql", "name": "default__week_end", "macro_sql": "{%- macro default__week_end(date) -%}\n{{ dbt_utils.last_day(date, 'week') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2509093}, "macro.dbt_date.snowflake__week_end": {"unique_id": "macro.dbt_date.snowflake__week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_end.sql", "original_file_path": "macros\\calendar_date\\week_end.sql", "name": "snowflake__week_end", "macro_sql": "\n\n{%- macro snowflake__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2509093}, "macro.dbt_date.postgres__week_end": {"unique_id": "macro.dbt_date.postgres__week_end", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_end.sql", "original_file_path": "macros\\calendar_date\\week_end.sql", "name": "postgres__week_end", "macro_sql": "\n\n{%- macro postgres__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.251911}, "macro.dbt_date.week_of_year": {"unique_id": "macro.dbt_date.week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_of_year.sql", "original_file_path": "macros\\calendar_date\\week_of_year.sql", "name": "week_of_year", "macro_sql": "{%- macro week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2529101}, "macro.dbt_date.default__week_of_year": {"unique_id": "macro.dbt_date.default__week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_of_year.sql", "original_file_path": "macros\\calendar_date\\week_of_year.sql", "name": "default__week_of_year", "macro_sql": "{%- macro default__week_of_year(date) -%}\ncast({{ dbt_date.date_part('week', date) }} as {{ dbt_utils.type_int() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2529101}, "macro.dbt_date.postgres__week_of_year": {"unique_id": "macro.dbt_date.postgres__week_of_year", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_of_year.sql", "original_file_path": "macros\\calendar_date\\week_of_year.sql", "name": "postgres__week_of_year", "macro_sql": "\n\n{%- macro postgres__week_of_year(date) -%}\n{# postgresql 'week' returns isoweek. Use to_char instead.\n   WW = the first week starts on the first day of the year #}\ncast(to_char({{ date }}, 'WW') as {{ dbt_utils.type_int() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2539136}, "macro.dbt_date.week_start": {"unique_id": "macro.dbt_date.week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_start.sql", "original_file_path": "macros\\calendar_date\\week_start.sql", "name": "week_start", "macro_sql": "{%- macro week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_start"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.254911}, "macro.dbt_date.default__week_start": {"unique_id": "macro.dbt_date.default__week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_start.sql", "original_file_path": "macros\\calendar_date\\week_start.sql", "name": "default__week_start", "macro_sql": "{%- macro default__week_start(date) -%}\ncast({{ dbt_utils.date_trunc('week', date) }} as date)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.254911}, "macro.dbt_date.snowflake__week_start": {"unique_id": "macro.dbt_date.snowflake__week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_start.sql", "original_file_path": "macros\\calendar_date\\week_start.sql", "name": "snowflake__week_start", "macro_sql": "\n\n{%- macro snowflake__week_start(date) -%}\n    {#\n        Get the day of week offset: e.g. if the date is a Sunday,\n        dbt_date.day_of_week returns 1, so we subtract 1 to get a 0 offset\n    #}\n    {% set off_set = dbt_date.day_of_week(date, isoweek=False) ~ \" - 1\" %}\n    cast({{ dbt_utils.dateadd(\"day\", \"-1 * (\" ~ off_set ~ \")\", date) }} as date)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.day_of_week", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2558708}, "macro.dbt_date.postgres__week_start": {"unique_id": "macro.dbt_date.postgres__week_start", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\week_start.sql", "original_file_path": "macros\\calendar_date\\week_start.sql", "name": "postgres__week_start", "macro_sql": "\n\n{%- macro postgres__week_start(date) -%}\n-- Sunday as week start date\ncast({{ dbt_utils.dateadd('day', -1, dbt_utils.date_trunc('week', dbt_utils.dateadd('day', 1, date))) }} as date)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2558708}, "macro.dbt_date.yesterday": {"unique_id": "macro.dbt_date.yesterday", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\calendar_date\\yesterday.sql", "original_file_path": "macros\\calendar_date\\yesterday.sql", "name": "yesterday", "macro_sql": "{%- macro yesterday(date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(1, date, tz) }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.25707}, "macro.dbt_date.get_fiscal_periods": {"unique_id": "macro.dbt_date.get_fiscal_periods", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\fiscal_date\\get_fiscal_periods.sql", "original_file_path": "macros\\fiscal_date\\get_fiscal_periods.sql", "name": "get_fiscal_periods", "macro_sql": "{% macro get_fiscal_periods(dates, year_end_month, week_start_day, shift_year=1) %}\n{# \nThis macro requires you to pass in a ref to a date dimension, created via\ndbt_date.get_date_dimension()s\n#}\nwith fscl_year_dates_for_periods as (\n    {{ dbt_date.get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) }}\n),\nfscl_year_w13 as (\n\n    select\n        f.*,\n        -- We count the weeks in a 13 week period\n        -- and separate the 4-5-4 week sequences\n        mod(cast(\n            (f.fiscal_week_of_year-1) as {{ dbt_utils.type_int() }}\n            ), 13) as w13_number,\n        -- Chop weeks into 13 week merch quarters\n        cast(\n            least(\n                floor((f.fiscal_week_of_year-1)/13.0)\n                , 3)\n            as {{ dbt_utils.type_int() }}) as quarter_number\n    from\n        fscl_year_dates_for_periods f\n\n),\nfscl_periods as (\n\n    select\n        f.date_day,\n        f.fiscal_year_number,\n        f.week_start_date,\n        f.week_end_date,\n        f.fiscal_week_of_year,\n        case \n            -- we move week 53 into the 3rd period of the quarter\n            when f.fiscal_week_of_year = 53 then 3\n            when f.w13_number between 0 and 3 then 1\n            when f.w13_number between 4 and 8 then 2\n            when f.w13_number between 9 and 12 then 3\n        end as period_of_quarter,\n        f.quarter_number\n    from\n        fscl_year_w13 f\n\n),\nfscl_periods_quarters as (\n\n    select\n        f.*,\n        cast((\n            (f.quarter_number * 3) + f.period_of_quarter\n         ) as {{ dbt_utils.type_int() }}) as fiscal_period_number\n    from\n        fscl_periods f\n\n)\nselect\n    date_day,\n    fiscal_year_number,\n    week_start_date,\n    week_end_date,\n    fiscal_week_of_year, \n    dense_rank() over(partition by fiscal_period_number order by fiscal_week_of_year) as fiscal_week_of_period,\n    fiscal_period_number,\n    quarter_number+1 as fiscal_quarter_number,\n    period_of_quarter as fiscal_period_of_quarter\nfrom \n    fscl_periods_quarters \norder by 1,2\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.get_fiscal_year_dates", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.257916}, "macro.dbt_date.get_fiscal_year_dates": {"unique_id": "macro.dbt_date.get_fiscal_year_dates", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\fiscal_date\\get_fiscal_year_dates.sql", "original_file_path": "macros\\fiscal_date\\get_fiscal_year_dates.sql", "name": "get_fiscal_year_dates", "macro_sql": "{% macro get_fiscal_year_dates(dates, year_end_month=12, week_start_day=1, shift_year=1) %}\n{{ adapter.dispatch('get_fiscal_year_dates', 'dbt_date') (dates, year_end_month, week_start_day, shift_year) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.default__get_fiscal_year_dates"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2609117}, "macro.dbt_date.default__get_fiscal_year_dates": {"unique_id": "macro.dbt_date.default__get_fiscal_year_dates", "package_name": "dbt_date", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_date", "path": "macros\\fiscal_date\\get_fiscal_year_dates.sql", "original_file_path": "macros\\fiscal_date\\get_fiscal_year_dates.sql", "name": "default__get_fiscal_year_dates", "macro_sql": "{% macro default__get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) %}\n-- this gets all the dates within a fiscal year\n-- determined by the given year-end-month\n-- ending on the saturday closest to that month's end date\nwith date_dimension as (\n    select * from {{ dates }}\n),\nyear_month_end as (\n\n    select\n       d.year_number-{{ shift_year }} as fiscal_year_number,\n       d.month_end_date\n    from\n        date_dimension d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by 1,2\n\n),\nweeks as (\n\n    select\n        d.year_number,\n        d.month_of_year,\n        d.date_day as week_start_date,\n        cast({{ dbt_utils.dateadd('day', 6, 'd.date_day') }} as date) as week_end_date\n    from\n        date_dimension d\n    where\n        d.day_of_week = {{ week_start_day }}\n\n),\n-- get all the weeks that start in the month the year ends\nyear_week_ends as (\n\n    select\n        d.year_number-{{ shift_year }} as fiscal_year_number,\n        d.week_end_date\n    from\n        weeks d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by\n        1,2\n\n),\n-- then calculate which Saturday is closest to month end\nweeks_at_month_end as (\n\n    select\n        d.fiscal_year_number,\n        d.week_end_date,\n        m.month_end_date,\n        rank() over\n            (partition by d.fiscal_year_number\n                order by\n                abs({{ dbt_utils.datediff('d.week_end_date', 'm.month_end_date', 'day') }})\n\n            ) as closest_to_month_end\n    from\n        year_week_ends d\n        join\n        year_month_end m on d.fiscal_year_number = m.fiscal_year_number\n),\nfiscal_year_range as (\n\n    select\n        w.fiscal_year_number,\n        cast(\n            {{ dbt_utils.dateadd('day', 1,\n            'lag(w.week_end_date) over(order by w.week_end_date)') }}\n            as date) as fiscal_year_start_date,\n        w.week_end_date as fiscal_year_end_date\n    from\n        weeks_at_month_end w\n    where\n        w.closest_to_month_end = 1\n\n),\nfiscal_year_dates as (\n\n    select\n        d.date_day,\n        m.fiscal_year_number,\n        m.fiscal_year_start_date,\n        m.fiscal_year_end_date,\n        w.week_start_date,\n        w.week_end_date,\n        -- we reset the weeks of the year starting with the merch year start date\n        dense_rank()\n            over(\n                partition by m.fiscal_year_number\n                order by w.week_start_date\n                ) as fiscal_week_of_year\n    from\n        date_dimension d\n        join\n        fiscal_year_range m on d.date_day between m.fiscal_year_start_date and m.fiscal_year_end_date\n        join\n        weeks w on d.date_day between w.week_start_date and w.week_end_date\n\n)\nselect * from fiscal_year_dates order by 1\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.261901}, "macro.dbt_expectations.log_natural": {"unique_id": "macro.dbt_expectations.log_natural", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\log_natural.sql", "original_file_path": "macros\\math\\log_natural.sql", "name": "log_natural", "macro_sql": "{% macro log_natural(x) -%}\n    {{ adapter.dispatch('log_natural', 'dbt_expectations') (x) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.bigquery__log_natural"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2629125}, "macro.dbt_expectations.default__log_natural": {"unique_id": "macro.dbt_expectations.default__log_natural", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\log_natural.sql", "original_file_path": "macros\\math\\log_natural.sql", "name": "default__log_natural", "macro_sql": "{% macro default__log_natural(x) %}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2629125}, "macro.dbt_expectations.bigquery__log_natural": {"unique_id": "macro.dbt_expectations.bigquery__log_natural", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\log_natural.sql", "original_file_path": "macros\\math\\log_natural.sql", "name": "bigquery__log_natural", "macro_sql": "{% macro bigquery__log_natural(x) %}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2638986}, "macro.dbt_expectations.snowflake__log_natural": {"unique_id": "macro.dbt_expectations.snowflake__log_natural", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\log_natural.sql", "original_file_path": "macros\\math\\log_natural.sql", "name": "snowflake__log_natural", "macro_sql": "{% macro snowflake__log_natural(x) %}\n\n    ln({{ x }})\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2638986}, "macro.dbt_expectations.median": {"unique_id": "macro.dbt_expectations.median", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\median.sql", "original_file_path": "macros\\math\\median.sql", "name": "median", "macro_sql": "{% macro median(field) %}\n{{ dbt_expectations.percentile_cont(field, 0.5) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2638986}, "macro.dbt_expectations.percentile_cont": {"unique_id": "macro.dbt_expectations.percentile_cont", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\percentile_cont.sql", "original_file_path": "macros\\math\\percentile_cont.sql", "name": "percentile_cont", "macro_sql": "{% macro percentile_cont(field, quantile, partition=None) %}\n  {{ adapter.dispatch('quantile', 'dbt_expectations') (field, quantile, partition) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.bigquery__quantile"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2649107}, "macro.dbt_expectations.default__quantile": {"unique_id": "macro.dbt_expectations.default__quantile", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\percentile_cont.sql", "original_file_path": "macros\\math\\percentile_cont.sql", "name": "default__quantile", "macro_sql": "{% macro default__quantile(field, quantile, partition)  -%}\n    percentile_cont({{ quantile }}) within group (order by {{ field }})\n    {%- if partition %}over(partition by {{ partition }}){% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.265898}, "macro.dbt_expectations.bigquery__quantile": {"unique_id": "macro.dbt_expectations.bigquery__quantile", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\percentile_cont.sql", "original_file_path": "macros\\math\\percentile_cont.sql", "name": "bigquery__quantile", "macro_sql": "{% macro bigquery__quantile(field, quantile, partition) %}\n    percentile_cont({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.265898}, "macro.dbt_expectations.rand": {"unique_id": "macro.dbt_expectations.rand", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\rand.sql", "original_file_path": "macros\\math\\rand.sql", "name": "rand", "macro_sql": "{% macro rand() -%}\n    {{ adapter.dispatch('rand', 'dbt_expectations') () }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.bigquery__rand"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2670405}, "macro.dbt_expectations.default__rand": {"unique_id": "macro.dbt_expectations.default__rand", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\rand.sql", "original_file_path": "macros\\math\\rand.sql", "name": "default__rand", "macro_sql": "{% macro default__rand() %}\n\n    rand()\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2670405}, "macro.dbt_expectations.bigquery__rand": {"unique_id": "macro.dbt_expectations.bigquery__rand", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\rand.sql", "original_file_path": "macros\\math\\rand.sql", "name": "bigquery__rand", "macro_sql": "{% macro bigquery__rand() %}\n\n    rand()\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2670405}, "macro.dbt_expectations.snowflake__rand": {"unique_id": "macro.dbt_expectations.snowflake__rand", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\rand.sql", "original_file_path": "macros\\math\\rand.sql", "name": "snowflake__rand", "macro_sql": "{% macro snowflake__rand(seed) %}\n\n    uniform(0::float, 1::float, random())\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2679107}, "macro.dbt_expectations.postgres__rand": {"unique_id": "macro.dbt_expectations.postgres__rand", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\rand.sql", "original_file_path": "macros\\math\\rand.sql", "name": "postgres__rand", "macro_sql": "{% macro postgres__rand() %}\n\n    random()\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2679107}, "macro.dbt_expectations.redshift__rand": {"unique_id": "macro.dbt_expectations.redshift__rand", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\math\\rand.sql", "original_file_path": "macros\\math\\rand.sql", "name": "redshift__rand", "macro_sql": "{% macro redshift__rand() %}\n\n    random()\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2679107}, "macro.dbt_expectations.regexp_instr": {"unique_id": "macro.dbt_expectations.regexp_instr", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\regex\\regexp_instr.sql", "original_file_path": "macros\\regex\\regexp_instr.sql", "name": "regexp_instr", "macro_sql": "{% macro regexp_instr(source_value, regexp, position=1, occurrence=1) %}\n\n    {{ adapter.dispatch('regexp_instr', 'dbt_expectations')(\n        source_value, regexp, position, occurrence\n    ) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__regexp_instr"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2699106}, "macro.dbt_expectations.default__regexp_instr": {"unique_id": "macro.dbt_expectations.default__regexp_instr", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\regex\\regexp_instr.sql", "original_file_path": "macros\\regex\\regexp_instr.sql", "name": "default__regexp_instr", "macro_sql": "{% macro default__regexp_instr(source_value, regexp, position, occurrence) %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2699106}, "macro.dbt_expectations.redshift__regexp_instr": {"unique_id": "macro.dbt_expectations.redshift__regexp_instr", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\regex\\regexp_instr.sql", "original_file_path": "macros\\regex\\regexp_instr.sql", "name": "redshift__regexp_instr", "macro_sql": "{% macro redshift__regexp_instr(source_value, regexp, position, occurrence) %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2699106}, "macro.dbt_expectations.postgres__regexp_instr": {"unique_id": "macro.dbt_expectations.postgres__regexp_instr", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\regex\\regexp_instr.sql", "original_file_path": "macros\\regex\\regexp_instr.sql", "name": "postgres__regexp_instr", "macro_sql": "{% macro postgres__regexp_instr(source_value, regexp, position, occurrence) %}\narray_length((select regexp_matches({{ source_value }}, '{{ regexp }}')), 1)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.270898}, "macro.dbt_expectations.spark__regexp_instr": {"unique_id": "macro.dbt_expectations.spark__regexp_instr", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\regex\\regexp_instr.sql", "original_file_path": "macros\\regex\\regexp_instr.sql", "name": "spark__regexp_instr", "macro_sql": "{% macro spark__regexp_instr(source_value, regexp, position, occurrence) %}\ncase when {{ source_value }} rlike '{{ regexp }}' then 1 else 0 end\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.270898}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than": {"unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_count_to_be_greater_than.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_count_to_be_greater_than.sql", "name": "test_expect_column_distinct_count_to_be_greater_than", "macro_sql": "{% test expect_column_distinct_count_to_be_greater_than(model,\n                                                                column_name,\n                                                                value,\n                                                                quote_values=False,\n                                                                group_by=None,\n                                                                row_condition=None\n                                                                ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) > {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2719133}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal": {"unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_count_to_equal.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_count_to_equal.sql", "name": "test_expect_column_distinct_count_to_equal", "macro_sql": "{% test expect_column_distinct_count_to_equal(model,\n                                                    column_name,\n                                                    value,\n                                                    quote_values=False,\n                                                    group_by=None,\n                                                    row_condition=None\n                                                    ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2739098}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table": {"unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_count_to_equal_other_table.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_count_to_equal_other_table.sql", "name": "test_expect_column_distinct_count_to_equal_other_table", "macro_sql": "{% test expect_column_distinct_count_to_equal_other_table(model,\n                                                                compare_model,\n                                                                column_name,\n                                                                compare_column_name,\n                                                                row_condition=None,\n                                                                compare_row_condition=None\n                                                                ) %}\n{%- set expression -%}\ncount(distinct {{ column_name }})\n{%- endset -%}\n{%- set compare_expression -%}\n{%- if compare_column_name -%}\ncount(distinct {{ compare_column_name }})\n{%- else -%}\n{{ expression }}\n{%- endif -%}\n{%- endset -%}\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition,\n    return_difference=True\n) }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2749095}, "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set": {"unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_values_to_be_in_set.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_values_to_be_in_set.sql", "name": "test_expect_column_distinct_values_to_be_in_set", "macro_sql": "{% test expect_column_distinct_values_to_be_in_set(model, column_name,\n                                                    value_set,\n                                                    quote_values=False,\n                                                    row_condition=None\n                                                    ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        unique_set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2770848}, "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set": {"unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_values_to_contain_set.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_values_to_contain_set.sql", "name": "test_expect_column_distinct_values_to_contain_set", "macro_sql": "{% test expect_column_distinct_values_to_contain_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.278871}, "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set": {"unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_values_to_equal_set.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_distinct_values_to_equal_set.sql", "name": "test_expect_column_distinct_values_to_equal_set", "macro_sql": "{% test expect_column_distinct_values_to_equal_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as column_value\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        all_values v\n        full outer join\n        unique_set_values s on v.column_value = s.value_field\n    where\n        v.column_value is null or\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2809105}, "macro.dbt_expectations.test_expect_column_max_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_max_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_max_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_max_to_be_between.sql", "name": "test_expect_column_max_to_be_between", "macro_sql": "{% test expect_column_max_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nmax({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.28191}, "macro.dbt_expectations.test_expect_column_mean_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_mean_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_mean_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_mean_to_be_between.sql", "name": "test_expect_column_mean_to_be_between", "macro_sql": "{% test expect_column_mean_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\navg({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2838979}, "macro.dbt_expectations.test_expect_column_median_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_median_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_median_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_median_to_be_between.sql", "name": "test_expect_column_median_to_be_between", "macro_sql": "{% test expect_column_median_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.median(column_name) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.median", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2849107}, "macro.dbt_expectations.test_expect_column_min_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_min_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_min_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_min_to_be_between.sql", "name": "test_expect_column_min_to_be_between", "macro_sql": "{% test expect_column_min_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\nmin({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2871583}, "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set": {"unique_id": "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_most_common_value_to_be_in_set.sql", "name": "test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% test expect_column_most_common_value_to_be_in_set(model, column_name,\n                                                            value_set,\n                                                            top_n,\n                                                            quote_values=False,\n                                                            data_type=\"decimal\",\n                                                            row_condition=None\n                                                            ) -%}\n    {{ adapter.dispatch('test_expect_column_most_common_value_to_be_in_set', 'dbt_expectations') (model, column_name, value_set, top_n, quote_values, data_type, row_condition) }}\n{%- endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2899122}, "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set": {"unique_id": "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_most_common_value_to_be_in_set.sql", "name": "default__test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% macro default__test_expect_column_most_common_value_to_be_in_set(model, column_name,\n                                                            value_set,\n                                                            top_n,\n                                                            quote_values,\n                                                            data_type,\n                                                            row_condition\n                                                            ) %}\n\nwith value_counts as (\n\n    select\n        {% if quote_values -%}\n        {{ column_name }}\n        {%- else -%}\n        cast({{ column_name }} as {{ data_type }})\n        {%- endif %} as value_field,\n        count(*) as value_count\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n    group by {% if quote_values -%}\n                {{ column_name }}\n            {%- else -%}\n                cast({{ column_name }} as {{ data_type }})\n            {%- endif %}\n\n),\nvalue_counts_ranked as (\n\n    select\n        *,\n        row_number() over(order by value_count desc) as value_count_rank\n    from\n        value_counts\n\n),\nvalue_count_top_n as (\n\n    select\n        value_field\n    from\n        value_counts_ranked\n    where\n        value_count_rank = {{ top_n }}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        cast({{ value }} as {{ data_type }})\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        value_field\n    from\n        value_count_top_n\n    where\n        value_field not in (select value_field from unique_set_values)\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.290912}, "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_proportion_of_unique_values_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_proportion_of_unique_values_to_be_between.sql", "name": "test_expect_column_proportion_of_unique_values_to_be_between", "macro_sql": "{% test expect_column_proportion_of_unique_values_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})/count({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2928796}, "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_quantile_values_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_quantile_values_to_be_between.sql", "name": "test_expect_column_quantile_values_to_be_between", "macro_sql": "{% test expect_column_quantile_values_to_be_between(model, column_name,\n                                                            quantile,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n\n{% set expression %}\n{{ dbt_expectations.percentile_cont(column_name, quantile) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2948716}, "macro.dbt_expectations.test_expect_column_stdev_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_stdev_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_stdev_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_stdev_to_be_between.sql", "name": "test_expect_column_stdev_to_be_between", "macro_sql": "{% test expect_column_stdev_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) -%}\n    {{ adapter.dispatch('test_expect_column_stdev_to_be_between', 'dbt_expectations') (\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) }}\n{%- endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_stdev_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2970479}, "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between": {"unique_id": "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_stdev_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_stdev_to_be_between.sql", "name": "default__test_expect_column_stdev_to_be_between", "macro_sql": "{% macro default__test_expect_column_stdev_to_be_between(\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) %}\n\n{% set expression %}\nstddev({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2970479}, "macro.dbt_expectations.test_expect_column_sum_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_sum_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_sum_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_sum_to_be_between.sql", "name": "test_expect_column_sum_to_be_between", "macro_sql": "{% test expect_column_sum_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nsum({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.2989142}, "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\aggregate_functions\\expect_column_unique_value_count_to_be_between.sql", "original_file_path": "macros\\schema_tests\\aggregate_functions\\expect_column_unique_value_count_to_be_between.sql", "name": "test_expect_column_unique_value_count_to_be_between", "macro_sql": "{% test expect_column_unique_value_count_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.300898}, "macro.dbt_expectations.test_expect_column_values_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_between.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_between.sql", "name": "test_expect_column_values_to_be_between", "macro_sql": "{% test expect_column_values_to_be_between(model, column_name,\n                                                   min_value=None,\n                                                   max_value=None,\n                                                   row_condition=None,\n                                                   strictly=False\n                                                   ) %}\n\n{% set expression %}\n{{ column_name }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3019137}, "macro.dbt_expectations.test_expect_column_values_to_be_decreasing": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_decreasing", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_decreasing.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_decreasing.sql", "name": "test_expect_column_values_to_be_decreasing", "macro_sql": "{% test expect_column_values_to_be_decreasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \"<\" if strictly else \"<=\" %}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over(order by sort_column) as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field {{ operator }} value_field_lag)\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3039145}, "macro.dbt_expectations.test_expect_column_values_to_be_increasing": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_increasing", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_increasing.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_increasing.sql", "name": "test_expect_column_values_to_be_increasing", "macro_sql": "{% test expect_column_values_to_be_increasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \">\" if strictly else \">=\" %}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over(order by sort_column) as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field {{ operator }} value_field_lag)\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.304917}, "macro.dbt_expectations.test_expect_column_values_to_be_in_set": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_in_set.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_in_set.sql", "name": "test_expect_column_values_to_be_in_set", "macro_sql": "{% test expect_column_values_to_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt_utils.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.307134}, "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_in_type_list.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_in_type_list.sql", "name": "test_expect_column_values_to_be_in_type_list", "macro_sql": "{%- test expect_column_values_to_be_in_type_list(model, column_name, column_type_list) -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | upper -%}\n    {%- set columns_in_relation = adapter.get_columns_in_relation(model) -%}\n    {%- set column_type_list = column_type_list| map(\"upper\") | list -%}\n    with relation_columns as (\n\n        {% for column in columns_in_relation %}\n        select\n            cast('{{ column.name | upper }}' as {{ dbt_utils.type_string() }}) as relation_column,\n            cast('{{ column.dtype | upper }}' as {{ dbt_utils.type_string() }}) as relation_column_type\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = '{{ column_name }}'\n            and\n            relation_column_type not in ('{{ column_type_list | join(\"', '\") }}')\n\n    )\n    select *\n    from test_data\n\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3088706}, "macro.dbt_expectations.test_expect_column_values_to_be_null": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_null", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_null.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_null.sql", "name": "test_expect_column_values_to_be_null", "macro_sql": "{% test expect_column_values_to_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3099117}, "macro.dbt_expectations.test_expect_column_values_to_be_of_type": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_of_type", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_of_type.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_of_type.sql", "name": "test_expect_column_values_to_be_of_type", "macro_sql": "{%- test expect_column_values_to_be_of_type(model, column_name, column_type) -%}\n{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(model, column_name, [column_type]) }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3108993}, "macro.dbt_expectations.test_expect_column_values_to_be_unique": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_unique", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_unique.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_be_unique.sql", "name": "test_expect_column_values_to_be_unique", "macro_sql": "{% test expect_column_values_to_be_unique(model, column_name, row_condition=None) %}\n{{ dbt_expectations.test_expect_compound_columns_to_be_unique(model, [column_name], row_condition=row_condition) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expect_compound_columns_to_be_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3119133}, "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_not_be_in_set.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_not_be_in_set.sql", "name": "test_expect_column_values_to_not_be_in_set", "macro_sql": "{% test expect_column_values_to_not_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt_utils.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that match the set\n    select\n        v.value_field\n    from\n        all_values v\n        join\n        set_values s on v.value_field = s.value_field\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3139143}, "macro.dbt_expectations.test_expect_column_values_to_not_be_null": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_null", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_not_be_null.sql", "original_file_path": "macros\\schema_tests\\column_values_basic\\expect_column_values_to_not_be_null.sql", "name": "test_expect_column_values_to_not_be_null", "macro_sql": "{% test expect_column_values_to_not_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is not null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3149118}, "macro.dbt_expectations._get_metric_expression": {"unique_id": "macro.dbt_expectations._get_metric_expression", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_moving_stdevs.sql", "name": "_get_metric_expression", "macro_sql": "{%- macro _get_metric_expression(metric_column, take_logs) -%}\n\n{%- if take_logs %}\n{%- set expr = \"nullif(\" ~ metric_column ~ \", 0)\" -%}\ncoalesce({{ dbt_expectations.log_natural(expr) }}, 0)\n{%- else -%}\ncoalesce({{ metric_column }}, 0)\n{%- endif %}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.log_natural"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.318918}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_moving_stdevs.sql", "name": "test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  period='day',\n                                  lookback_periods=1,\n                                  trend_periods=7,\n                                  test_periods=14,\n                                  sigma_threshold=3,\n                                  sigma_threshold_upper=None,\n                                  sigma_threshold_lower=None,\n                                  take_diffs=true,\n                                  take_logs=true\n                                ) -%}\n    {{ adapter.dispatch('test_expect_column_values_to_be_within_n_moving_stdevs', 'dbt_expectations') (model,\n                                  column_name,\n                                  date_column_name,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) }}\n{%- endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.320917}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs": {"unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_moving_stdevs.sql", "name": "default__test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) %}\n\n{%- set sigma_threshold_upper = sigma_threshold_upper if sigma_threshold_upper else sigma_threshold -%}\n{%- set sigma_threshold_lower = sigma_threshold_lower if sigma_threshold_lower else -1 * sigma_threshold -%}\n\nwith metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            {{ dbt_utils.date_trunc(period, date_column_name) }} as metric_period,\n            sum({{ column_name }}) as agg_metric_value\n        from\n            {{ model }}\n        group by\n            1\n\n    ),\n    {%- if take_diffs %}\n    grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, {{ lookback_periods }}) over(order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        -\n        {{ dbt_expectations._get_metric_expression(\"prior_agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n    {%- else %}\n\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n    from\n        grouped_metric_values\n\n    {%- endif %}\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over(order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over(order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            {{ dbt_utils.dateadd(period, -test_periods, dbt_utils.date_trunc(period, dbt_date.now())) }}\n            as {{ dbt_utils.type_timestamp() }})\n    and\n    metric_period < {{ dbt_utils.date_trunc(period, dbt_date.now()) }}\n    and\n\n    not (\n        metric_test_sigma >= {{ sigma_threshold_lower }} and\n        metric_test_sigma <= {{ sigma_threshold_upper }}\n    )\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.date_trunc", "macro.dbt_expectations._get_metric_expression", "macro.dbt_utils.dateadd", "macro.dbt_date.now", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3229115}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_stdevs.sql", "name": "test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by=None,\n                                  sigma_threshold=3\n                                ) -%}\n    {{ adapter.dispatch('test_expect_column_values_to_be_within_n_stdevs', 'dbt_expectations') (model, column_name, group_by, sigma_threshold) }}\n{%- endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3249302}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs": {"unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros\\schema_tests\\distributional\\expect_column_values_to_be_within_n_stdevs.sql", "name": "default__test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by,\n                                  sigma_threshold\n                                ) %}\nwith metric_values as (\n\n    {% if group_by -%}\n    select\n        {{ group_by }} as metric_date,\n        sum({{ column_name }}) as {{ column_name }}\n    from\n        {{ model }}\n    group by\n        1\n    {%- else -%}\n    select\n        {{ column_name }} as {{ column_name }}\n    from\n        {{ model }}\n    {%- endif %}\n\n),\nmetric_values_with_statistics as (\n\n    select\n        *,\n        avg({{ column_name }}) over() as {{ column_name }}_average,\n        stddev({{ column_name }}) over() as {{ column_name }}_stddev\n    from\n        metric_values\n\n),\nmetric_values_z_scores as (\n\n    select\n        *,\n        ({{ column_name }} - {{ column_name }}_average)/{{ column_name }}_stddev as {{ column_name }}_sigma\n    from\n        metric_values_with_statistics\n\n)\nselect\n    *\nfrom\n    metric_values_z_scores\nwhere\n    abs({{ column_name }}_sigma) > {{ sigma_threshold }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3259122}, "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart": {"unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\distributional\\expect_row_values_to_have_data_for_every_n_datepart.sql", "original_file_path": "macros\\schema_tests\\distributional\\expect_row_values_to_have_data_for_every_n_datepart.sql", "name": "test_expect_row_values_to_have_data_for_every_n_datepart", "macro_sql": "{%- test expect_row_values_to_have_data_for_every_n_datepart(model,\n                                                                    date_col,\n                                                                    date_part=\"day\",\n                                                                    interval=None,\n                                                                    row_condition=None,\n                                                                    test_start_date=None,\n                                                                    test_end_date=None) -%}\n{% if not execute %}\n    {{ return('') }}\n{% endif %}\n\n{% if not test_start_date or not test_end_date %}\n    {% set sql %}\n\n        select\n            min({{ date_col }}) as start_{{ date_part }},\n            max({{ date_col }}) as end_{{ date_part }}\n        from {{ model }}\n        {% if row_condition %}\n        where {{ row_condition }}\n        {% endif %}\n\n    {% endset %}\n\n    {%- set dr = run_query(sql) -%}\n    {%- set db_start_date = dr.columns[0].values()[0].strftime('%Y-%m-%d') -%}\n    {%- set db_end_date = dr.columns[1].values()[0].strftime('%Y-%m-%d') -%}\n\n{% endif %}\n\n{% if not test_start_date %}\n{% set start_date = db_start_date %}\n{% else %}\n{% set start_date = test_start_date %}\n{% endif %}\n\n\n{% if not test_end_date %}\n{% set end_date = db_end_date %}\n{% else %}\n{% set end_date = test_end_date %}\n{% endif %}\nwith base_dates as (\n\n    {{ dbt_date.get_base_dates(start_date=start_date, end_date=end_date, datepart=date_part) }}\n    {% if interval %}\n    {# \n        Filter the date spine created above down to the interval granularity using a modulo operation.\n        The number of date_parts after the start_date divided by the integer interval will produce no remainder for the desired intervals, \n        e.g. for 2-day interval from a starting Jan 1, 2020:\n            params: start_date = '2020-01-01', date_part = 'day', interval = 2\n            date spine created above: [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-04, 2020-01-05, ...]\n            The first parameter to the `mod` function would be the number of days between the start_date and the spine date, i.e. [0, 1, 2, 3, 4 ...]\n            The second parameter to the `mod` function would be the integer interval, i.e. 2\n            This modulo operation produces the following remainders: [0, 1, 0, 1, 0, ...]\n            Filtering the spine only where this remainder == 0 will return a spine with every other day as desired, i.e. [2020-01-01, 2020-01-03, 2020-01-05, ...]\n    #}\n    where mod(\n            cast({{ dbt_utils.datediff(\"'\" ~ start_date ~ \"'\", 'date_' ~ date_part, date_part) }} as {{ dbt_utils.type_int() }}),\n            cast({{interval}} as {{ dbt_utils.type_int() }})\n        ) = 0\n    {% endif %}\n\n),\nmodel_data as (\n\n    select\n    {% if not interval %}\n\n        cast({{ dbt_utils.date_trunc(date_part, date_col) }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n\n    {% else %}\n        {# \n            Use a modulo operator to determine the number of intervals that a date_col is away from the interval-date spine \n            and subtracts that amount to effectively slice each date_col record into its corresponding spine bucket,\n            e.g. given a date_col of with records [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-11, 2020-01-12]\n                if we want to slice these dates into their 2-day buckets starting Jan 1, 2020 (start_date = '2020-01-01', date_part='day', interval=2),\n                the modulo operation described above will produce these remainders: [0, 1, 0, 0, 1]\n                subtracting that number of days from the observations will produce records [2020-01-01, 2020-01-01, 2020-01-03, 2020-01-11, 2020-01-11],\n                all of which align with records from the interval-date spine\n        #}\n        {{dbt_utils.dateadd(\n            date_part, \n            \"mod(\n                cast(\" ~ dbt_utils.datediff(\"'\" ~ start_date ~ \"'\", date_col, date_part) ~ \" as \" ~ dbt_utils.type_int() ~ \" ),\n                cast(\" ~ interval ~ \" as  \" ~ dbt_utils.type_int() ~ \" )\n            ) * (-1)\", \n            \"cast( \" ~ dbt_utils.date_trunc(date_part, date_col) ~ \" as  \" ~ dbt_expectations.type_datetime() ~ \")\"\n        )}} as date_{{ date_part }},\n            \n    {% endif %}\n    \n        count(*) as row_cnt\n    from\n        {{ model }} f\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n    group by\n        date_{{date_part}}\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n        case when f.date_{{ date_part }} is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) = f.date_{{ date_part }}\n\n)\nselect\n    *\nfrom final\nwhere\n    row_cnt = 0\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_date.get_base_dates", "macro.dbt_utils.datediff", "macro.dbt_utils.type_int", "macro.dbt_utils.date_trunc", "macro.dbt_expectations.type_datetime", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3329127}, "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B": {"unique_id": "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_column_pair_values_A_to_be_greater_than_B.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_column_pair_values_A_to_be_greater_than_B.sql", "name": "test_expect_column_pair_values_A_to_be_greater_than_B", "macro_sql": "{% test expect_column_pair_values_A_to_be_greater_than_B(model,\n                                                                column_A,\n                                                                column_B,\n                                                                or_equal=False,\n                                                                row_condition=None\n                                                                ) %}\n\n{% set operator = \">=\" if or_equal else \">\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3339095}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal": {"unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_column_pair_values_to_be_equal.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_column_pair_values_to_be_equal.sql", "name": "test_expect_column_pair_values_to_be_equal", "macro_sql": "{% test expect_column_pair_values_to_be_equal(model,\n                                                        column_A,\n                                                        column_B,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set operator = \"=\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3358707}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set": {"unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_column_pair_values_to_be_in_set.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_column_pair_values_to_be_in_set.sql", "name": "test_expect_column_pair_values_to_be_in_set", "macro_sql": "{% test expect_column_pair_values_to_be_in_set(model,\n                                                        column_A,\n                                                        column_B,\n                                                        value_pairs_set,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set expression %}\n{% for pair in value_pairs_set %}\n{%- if (pair | length) == 2 %}\n({{ column_A }} = {{ pair[0] }} and {{ column_B }} = {{ pair[1] }}){% if not loop.last %} or {% endif %}\n{% else %}\n{{ exceptions.raise_compiler_error(\n        \"`value_pairs_set` argument for expect_column_pair_values_to_be_in_set test cannot have more than 2 item per element.\n        Got: '\" ~ pair ~ \"'.'\"\n    ) }}\n{% endif %}\n{% endfor %}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.337912}, "macro.dbt_expectations.test_expect_compound_columns_to_be_unique": {"unique_id": "macro.dbt_expectations.test_expect_compound_columns_to_be_unique", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_compound_columns_to_be_unique.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_compound_columns_to_be_unique.sql", "name": "test_expect_compound_columns_to_be_unique", "macro_sql": "{% test expect_compound_columns_to_be_unique(model,\n                                                    column_list,\n                                                    quote_columns=False,\n                                                    ignore_row_if=\"all_values_are_missing\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for expect_compound_columns_to_be_unique test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set row_condition_ext %}\n\n{% if row_condition  %}\n    {{ row_condition }} and\n{% endif %}\n\n{% if ignore_row_if == \"all_values_are_missing\" %}\n    (\n        {% for column in columns -%}\n        {{ column }} is not null{% if not loop.last %} and {% endif %}\n        {%- endfor %}\n    )\n{% elif ignore_row_if == \"any_value_is_missing\" %}\n    (\n        {% for column in columns -%}\n        {{ column }} is not null{% if not loop.last %} or {% endif %}\n        {%- endfor %}\n    )\n{% endif %}\n{% endset %}\n\nwith validation_errors as (\n\n    select\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    from {{ model }}\n    where 1=1\n    {% if row_condition %}\n        and {{ row_condition }}\n    {% endif %}\n    group by\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    having count(*) > 1\n\n)\nselect * from validation_errors\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3429117}, "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal": {"unique_id": "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_multicolumn_sum_to_equal.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_multicolumn_sum_to_equal.sql", "name": "test_expect_multicolumn_sum_to_equal", "macro_sql": "{% test expect_multicolumn_sum_to_equal(model,\n                                                column_list,\n                                                sum_total,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n\n{% set operator = \"=\" %}\n{% set expression %}\n{% for column in column_list %}\nsum({{ column }}){% if not loop.last %} + {% endif %}\n{% endfor %} = {{ sum_total }}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3439422}, "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record": {"unique_id": "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_select_column_values_to_be_unique_within_record.sql", "name": "test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% test expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns=False,\n                                                    ignore_row_if=\"all_values_are_missing\",\n                                                    row_condition=None\n                                                    )  -%}\n    {{ adapter.dispatch('test_expect_select_column_values_to_be_unique_within_record', 'dbt_expectations') (model, column_list, quote_columns, ignore_row_if, row_condition) }}\n{%- endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3471437}, "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record": {"unique_id": "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\multi-column\\expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros\\schema_tests\\multi-column\\expect_select_column_values_to_be_unique_within_record.sql", "name": "default__test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% macro default__test_expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns,\n                                                    ignore_row_if,\n                                                    row_condition\n                                                    ) %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\nwith column_values as (\n\n    select\n        row_number() over(order by 1) as row_index,\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    from {{ model }}\n    where 1=1\n    {% if row_condition %}\n        and {{ row_condition }}\n    {% endif %}\n    {% if ignore_row_if == \"all_values_are_missing\" %}\n        and\n        (\n            {% for column in columns -%}\n            {{ column }} is not null{% if not loop.last %} and {% endif %}\n            {%- endfor %}\n        )\n    {% elif ignore_row_if == \"any_value_is_missing\" %}\n        and\n        (\n            {% for column in columns -%}\n            {{ column }} is not null{% if not loop.last %} or {% endif %}\n            {%- endfor %}\n        )\n    {% endif %}\n\n),\nunpivot_columns as (\n\n    {% for column in columns %}\n    select row_index, '{{ column }}' as column_name, {{ column }} as column_value from column_values\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n\n    select\n        row_index,\n        count(distinct column_value) as column_values\n    from unpivot_columns\n    group by 1\n    having count(distinct column_value) < {{ columns | length }}\n\n)\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3510787}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_like_pattern.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_like_pattern.sql", "name": "test_expect_column_values_to_match_like_pattern", "macro_sql": "{% test expect_column_values_to_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.352129}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_like_pattern_list.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_like_pattern_list.sql", "name": "test_expect_column_values_to_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3542533}, "macro.dbt_expectations.test_expect_column_values_to_match_regex": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_regex.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_regex.sql", "name": "test_expect_column_values_to_match_regex", "macro_sql": "{% test expect_column_values_to_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex) }} > 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3553267}, "macro.dbt_expectations.test_expect_column_values_to_match_regex_list": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_regex_list.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_match_regex_list.sql", "name": "test_expect_column_values_to_match_regex_list", "macro_sql": "{% test expect_column_values_to_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for regex in regex_list %}\n    {{ dbt_expectations.regexp_instr(column_name, regex) }} > 0\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.357572}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_like_pattern.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_like_pattern.sql", "name": "test_expect_column_values_to_not_match_like_pattern", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3586273}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_like_pattern_list.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_like_pattern_list.sql", "name": "test_expect_column_values_to_not_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3606899}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_regex.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_regex.sql", "name": "test_expect_column_values_to_not_match_regex", "macro_sql": "{% test expect_column_values_to_not_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex) }} = 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3617322}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list": {"unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_regex_list.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_values_to_not_match_regex_list.sql", "name": "test_expect_column_values_to_not_match_regex_list", "macro_sql": "{% test expect_column_values_to_not_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n{% for regex in regex_list %}\n{{ dbt_expectations.regexp_instr(column_name, regex) }} = 0\n{%- if not loop.last %}\n{{ \" and \" if match_on == \"all\" else \" or \"}}\n{% endif -%}\n{% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3637292}, "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_value_lengths_to_be_between.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_value_lengths_to_be_between.sql", "name": "test_expect_column_value_lengths_to_be_between", "macro_sql": "{% test expect_column_value_lengths_to_be_between(model, column_name,\n                                                         min_value=None,\n                                                         max_value=None,\n                                                         row_condition=None,\n                                                         strictly=False\n                                                      ) %}\n{% set expression %}\n{{ dbt_utils.length(column_name) }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.length", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.365734}, "macro.dbt_expectations.test_expect_column_value_lengths_to_equal": {"unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\expect_column_value_lengths_to_equal.sql", "original_file_path": "macros\\schema_tests\\string_matching\\expect_column_value_lengths_to_equal.sql", "name": "test_expect_column_value_lengths_to_equal", "macro_sql": "{% test expect_column_value_lengths_to_equal(model, column_name,\n                                                    value,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_utils.length(column_name) ~ \" = \" ~ value %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.length", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3669763}, "macro.dbt_expectations._get_like_pattern_expression": {"unique_id": "macro.dbt_expectations._get_like_pattern_expression", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\string_matching\\_get_like_pattern_expression.sql", "original_file_path": "macros\\schema_tests\\string_matching\\_get_like_pattern_expression.sql", "name": "_get_like_pattern_expression", "macro_sql": "{% macro _get_like_pattern_expression(column_name, like_pattern, positive) %}\n{{ column_name }} {{ \"not\" if not positive else \"\" }} like '{{ like_pattern }}'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3669763}, "macro.dbt_expectations.test_expect_column_to_exist": {"unique_id": "macro.dbt_expectations.test_expect_column_to_exist", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_column_to_exist.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_column_to_exist.sql", "name": "test_expect_column_to_exist", "macro_sql": "{%- test expect_column_to_exist(model, column_name, column_index=None, transform=\"upper\") -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | map(transform) | join -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n\n    {%- set matching_column_index = relation_column_names.index(column_name) if column_name in relation_column_names else -1 %}\n\n    {%- if column_index -%}\n\n        {%- set column_index_0 = column_index - 1 if column_index > 0 else 0 -%}\n\n        {%- set column_index_matches = true if matching_column_index == column_index_0 else false %}\n\n    {%- else -%}\n\n        {%- set column_index_matches = true -%}\n\n    {%- endif %}\n\n    with test_data as (\n\n        select\n            cast('{{ column_name }}' as {{ dbt_utils.type_string() }}) as column_name,\n            {{ matching_column_index }} as matching_column_index,\n            {{ column_index_matches }} as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)\n\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3700197}, "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data": {"unique_id": "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_grouped_row_values_to_have_recent_data.sql", "name": "test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% test expect_grouped_row_values_to_have_recent_data(model,\n                                                        group_by,\n                                                        timestamp_column,\n                                                        datepart,\n                                                        interval,\n                                                        row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_grouped_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                                group_by,\n                                                                                                timestamp_column,\n                                                                                                datepart,\n                                                                                                interval,\n                                                                                                row_condition) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3720179}, "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data": {"unique_id": "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_grouped_row_values_to_have_recent_data.sql", "name": "default__test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_grouped_row_values_to_have_recent_data(model,\n                                                                        group_by,\n                                                                        timestamp_column,\n                                                                        datepart,\n                                                                        interval,\n                                                                        row_condition) %}\nwith latest_grouped_timestamps as (\n\n    select\n        {%- for g in group_by %}\n        {{ g }},\n        {%- endfor %}\n        max(1) as join_key,\n        max({{ timestamp_column }}) as latest_timestamp_column\n    from\n        {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n    {{ dbt_utils.group_by(group_by | length )}}\n\n),\ntotal_row_counts as (\n\n    select\n        max(1) as join_key,\n        count(*) as row_count\n    from\n        latest_grouped_timestamps\n\n),\noutdated_grouped_timestamps as (\n\n    select *\n    from\n        latest_grouped_timestamps\n    where\n        latest_timestamp_column < {{ dbt_utils.dateadd(datepart, interval * -1, dbt_date.now()) }}\n\n),\nvalidation_errors as (\n\n    select\n        r.row_count,\n        t.*\n    from\n        total_row_counts r\n        left join\n        outdated_grouped_timestamps t\n        on r.join_key = t.join_key\n    where\n        -- fail if either no rows were returned due to row_condition,\n        -- or the recency test returned failed rows\n        r.row_count = 0\n        or\n        t.join_key is not null\n\n)\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.group_by", "macro.dbt_utils.dateadd", "macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3730202}, "macro.dbt_expectations.test_expect_row_values_to_have_recent_data": {"unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_row_values_to_have_recent_data.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_row_values_to_have_recent_data.sql", "name": "test_expect_row_values_to_have_recent_data", "macro_sql": "{% test expect_row_values_to_have_recent_data(model,\n                                                column_name,\n                                                datepart,\n                                                interval,\n                                                row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                        column_name,\n                                                                                        datepart,\n                                                                                        interval,\n                                                                                        row_condition) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3750184}, "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data": {"unique_id": "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_row_values_to_have_recent_data.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_row_values_to_have_recent_data.sql", "name": "default__test_expect_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_row_values_to_have_recent_data(model, column_name, datepart, interval, row_condition) %}\n{%- set default_start_date = '1970-01-01' -%}\nwith max_recency as (\n\n    select max({{ column_name }} ) as max_date\n    from\n        {{ model }}\n    where\n        {{ column_name }} <= {{ dbt_date.today() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all row, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_date, '{{ default_start_date }}')\n        < {{ dbt_utils.dateadd(datepart, interval * -1, dbt_date.now()) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_utils.dateadd", "macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3762095}, "macro.dbt_expectations.test_expect_table_columns_to_contain_set": {"unique_id": "macro.dbt_expectations.test_expect_table_columns_to_contain_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_columns_to_contain_set.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_columns_to_contain_set.sql", "name": "test_expect_table_columns_to_contain_set", "macro_sql": "{%- test expect_table_columns_to_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt_utils.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt_utils.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3782375}, "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list": {"unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_columns_to_match_ordered_list.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_columns_to_match_ordered_list.sql", "name": "test_expect_table_columns_to_match_ordered_list", "macro_sql": "{%- test expect_table_columns_to_match_ordered_list(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select\n            {{ loop.index }} as relation_column_idx,\n            cast('{{ col_name }}' as {{ dbt_utils.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select\n            {{ loop.index }} as input_column_idx,\n            cast('{{ col_name }}' as {{ dbt_utils.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column and r.relation_column_idx = i.input_column_idx\n    where\n        -- catch any column in input list that is not in the sequence of table columns\n        -- or any table column that is not in the input sequence\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.381239}, "macro.dbt_expectations.test_expect_table_columns_to_match_set": {"unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_set", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_columns_to_match_set.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_columns_to_match_set.sql", "name": "test_expect_table_columns_to_match_set", "macro_sql": "{%- test expect_table_columns_to_match_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt_utils.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt_utils.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        -- or any table column that is not in the input list\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3832526}, "macro.dbt_expectations.test_expect_table_column_count_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_column_count_to_be_between.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_column_count_to_be_between.sql", "name": "test_expect_table_column_count_to_be_between", "macro_sql": "{%- test expect_table_column_count_to_be_between(model,\n                                                        min_value=None,\n                                                        max_value=None\n                                                        ) -%}\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\n\n{%- set expression %}\n( 1=1\n{%- if min_value %} and number_actual_columns >= min_value{% endif %}\n{%- if max_value %} and number_actual_columns <= max_value{% endif %}\n)\n{% endset -%}\n\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ min_value if min_value else 0 }} as min_value,\n        {{ max_value if max_value else 0 }} as max_value\n\n)\nselect *\nfrom test_data\nwhere\n    not {{ expression }}\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3852537}, "macro.dbt_expectations.test_expect_table_column_count_to_equal": {"unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_column_count_to_equal.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_column_count_to_equal.sql", "name": "test_expect_table_column_count_to_equal", "macro_sql": "{%- test expect_table_column_count_to_equal(model, value) -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ value }} as value\n\n)\nselect *\nfrom test_data\nwhere\n    number_actual_columns != value\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3864048}, "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table": {"unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_column_count_to_equal_other_table.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_column_count_to_equal_other_table.sql", "name": "test_expect_table_column_count_to_equal_other_table", "macro_sql": "{%- test expect_table_column_count_to_equal_other_table(model, compare_model) -%}\n{%- if execute -%}\n{%- set number_columns = (adapter.get_columns_in_relation(model) | length) -%}\n{%- set compare_number_columns = (adapter.get_columns_in_relation(compare_model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_columns }} as number_columns,\n        {{ compare_number_columns }} as compare_number_columns\n\n)\nselect *\nfrom test_data\nwhere\n    number_columns != compare_number_columns\n{%- endif -%}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3874495}, "macro.dbt_expectations.test_expect_table_row_count_to_be_between": {"unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_be_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_be_between.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_be_between.sql", "name": "test_expect_table_row_count_to_be_between", "macro_sql": "{%- test expect_table_row_count_to_be_between(model,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) -%}\n{% set expression %}\ncount(*)\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.389447}, "macro.dbt_expectations.test_expect_table_row_count_to_equal": {"unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal.sql", "name": "test_expect_table_row_count_to_equal", "macro_sql": "{%- test expect_table_row_count_to_equal(model,\n                                                value,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal',\n                        'dbt_expectations') (model,\n                                                                        value,\n                                                                        group_by,\n                                                                        row_condition\n                                                                        ) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3904474}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal": {"unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal.sql", "name": "default__test_expect_table_row_count_to_equal", "macro_sql": "\n\n\n\n{%- macro default__test_expect_table_row_count_to_equal(model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) -%}\n{% set expression %}\ncount(*) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3914478}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table": {"unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal_other_table.sql", "name": "test_expect_table_row_count_to_equal_other_table", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table(model, compare_model, factor=1, row_condition=None, compare_row_condition=None) -%}\n{{ dbt_expectations.test_equal_expression(model, \"count(*)\",\n    compare_model=compare_model,\n    compare_expression=\"count(*) * \" + factor|string,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition,\n    return_difference=True\n) }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3924527}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor": {"unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros\\schema_tests\\table_shape\\expect_table_row_count_to_equal_other_table_times_factor.sql", "name": "test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table_times_factor(model, compare_model, factor, row_condition=None, compare_row_condition=None) -%}\n{{ dbt_expectations.test_expect_table_row_count_to_equal_other_table(model, compare_model,\n    factor=factor,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endtest -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.393451}, "macro.dbt_expectations._get_column_list": {"unique_id": "macro.dbt_expectations._get_column_list", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\_get_column_list.sql", "original_file_path": "macros\\schema_tests\\table_shape\\_get_column_list.sql", "name": "_get_column_list", "macro_sql": "{%- macro _get_column_list(model, transform=\"upper\") -%}\n{%- set relation_columns = adapter.get_columns_in_relation(model) -%}\n{%- set relation_column_names = relation_columns | map(attribute=\"name\") | map(transform) | list -%}\n{%- do return(relation_column_names) -%}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3944483}, "macro.dbt_expectations._list_intersect": {"unique_id": "macro.dbt_expectations._list_intersect", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\table_shape\\_list_intersect.sql", "original_file_path": "macros\\schema_tests\\table_shape\\_list_intersect.sql", "name": "_list_intersect", "macro_sql": "{%- macro _list_intersect(list1, list2) -%}\n{%- set matching_items = [] -%}\n{%- for itm in list1 -%}\n    {%- if itm in list2 -%}\n        {%- do matching_items.append(itm) -%}\n    {%- endif -%}\n{%- endfor -%}\n{%- do return(matching_items) -%}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.3954477}, "macro.dbt_expectations.get_select": {"unique_id": "macro.dbt_expectations.get_select", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "original_file_path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "name": "get_select", "macro_sql": "{% macro get_select(model, expression, row_condition, group_by) -%}\n    {{ adapter.dispatch('get_select', 'dbt_expectations') (model, expression, row_condition, group_by) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__get_select"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4026477}, "macro.dbt_expectations.default__get_select": {"unique_id": "macro.dbt_expectations.default__get_select", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "original_file_path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "name": "default__get_select", "macro_sql": "\n\n{%- macro default__get_select(model, expression, row_condition, group_by) %}\n    select\n        {% if group_by %}\n        {% for g in group_by -%}\n            {{ g }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ expression }} as expression\n    from\n        {{ model }}\n    {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by %}\n    group by\n        {% for g in group_by -%}\n            {{ loop.index }}{% if not loop.last %},{% endif %}\n        {% endfor %}\n    {% endif %}\n{% endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4036362}, "macro.dbt_expectations.test_equal_expression": {"unique_id": "macro.dbt_expectations.test_equal_expression", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "original_file_path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "name": "test_equal_expression", "macro_sql": "{% test equal_expression(model, expression,\n                                compare_model=None,\n                                compare_expression=None,\n                                group_by=None,\n                                compare_group_by=None,\n                                row_condition=None,\n                                compare_row_condition=None,\n                                tolerance=0.0,\n                                tolerance_percent=None,\n                                return_difference=False\n                                ) -%}\n\n    {{ adapter.dispatch('test_equal_expression', 'dbt_expectations') (\n                                model, expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent,\n                                return_difference) }}\n{%- endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4046335}, "macro.dbt_expectations.default__test_equal_expression": {"unique_id": "macro.dbt_expectations.default__test_equal_expression", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "original_file_path": "macros\\schema_tests\\_generalized\\equal_expression.sql", "name": "default__test_equal_expression", "macro_sql": "\n\n{%- macro default__test_equal_expression(\n                                model, expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent,\n                                return_difference) -%}\n\n    {%- set compare_model = model if not compare_model else compare_model -%}\n    {%- set compare_expression = expression if not compare_expression else compare_expression -%}\n    {%- set compare_row_condition = row_condition if not compare_row_condition else compare_row_condition -%}\n    {%- set compare_group_by = group_by if not compare_group_by else compare_group_by -%}\n\n    {%- set n_cols = (group_by|length) if group_by else 0 %}\n    with a as (\n        {{ dbt_expectations.get_select(model, expression, row_condition, group_by) }}\n    ),\n    b as (\n        {{ dbt_expectations.get_select(compare_model, compare_expression, compare_row_condition, compare_group_by) }}\n    ),\n    final as (\n\n        select\n            {% for i in range(1, n_cols + 1) -%}\n            coalesce(a.col_{{ i }}, b.col_{{ i }}) as col_{{ i }},\n            {% endfor %}\n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        {% if n_cols > 0 %}\n            a\n            full outer join\n            b on\n            {% for i in range(1, n_cols + 1) -%}\n                a.col_{{ i }} = b.col_{{ i }} {% if not loop.last %}and{% endif %}\n            {% endfor -%}\n        {% else %}\n            a cross join b\n        {% endif %}\n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        {% if tolerance_percent %}\n        expression_difference_percent > {{ tolerance_percent }}\n        {% else %}\n        expression_difference > {{ tolerance }}\n        {% endif %}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.get_select"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4067702}, "macro.dbt_expectations.test_expression_between": {"unique_id": "macro.dbt_expectations.test_expression_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\expression_between.sql", "original_file_path": "macros\\schema_tests\\_generalized\\expression_between.sql", "name": "test_expression_between", "macro_sql": "{% test expression_between(model,\n                                 expression,\n                                 min_value=None,\n                                 max_value=None,\n                                 group_by_columns=None,\n                                 row_condition=None,\n                                 strictly=False\n                                 ) %}\n\n    {{ dbt_expectations.expression_between(model, expression, min_value, max_value, group_by_columns, row_condition, strictly) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4088137}, "macro.dbt_expectations.expression_between": {"unique_id": "macro.dbt_expectations.expression_between", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\expression_between.sql", "original_file_path": "macros\\schema_tests\\_generalized\\expression_between.sql", "name": "expression_between", "macro_sql": "{% macro expression_between(model,\n                            expression,\n                            min_value,\n                            max_value,\n                            group_by_columns,\n                            row_condition,\n                            strictly\n                            ) %}\n\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n\n{%- set strict_operator = \"\" if strictly else \"=\" -%}\n\n{% set expression_min_max %}\n( 1=1\n{%- if min_value is not none %} and {{ expression | trim }} >{{ strict_operator }} {{ min_value }}{% endif %}\n{%- if max_value is not none %} and {{ expression | trim }} <{{ strict_operator }} {{ max_value }}{% endif %}\n)\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression_min_max,\n                                        group_by_columns=group_by_columns,\n                                        row_condition=row_condition)\n                                        }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.409813}, "macro.dbt_expectations.test_expression_is_true": {"unique_id": "macro.dbt_expectations.test_expression_is_true", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\expression_is_true.sql", "original_file_path": "macros\\schema_tests\\_generalized\\expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n\n    {{ dbt_expectations.expression_is_true(model, expression, test_condition, group_by_columns, row_condition) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4118116}, "macro.dbt_expectations.expression_is_true": {"unique_id": "macro.dbt_expectations.expression_is_true", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\expression_is_true.sql", "original_file_path": "macros\\schema_tests\\_generalized\\expression_is_true.sql", "name": "expression_is_true", "macro_sql": "{% macro expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n    {{ adapter.dispatch('expression_is_true', 'dbt_expectations') (model, expression, test_condition, group_by_columns, row_condition) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4128156}, "macro.dbt_expectations.default__expression_is_true": {"unique_id": "macro.dbt_expectations.default__expression_is_true", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\expression_is_true.sql", "original_file_path": "macros\\schema_tests\\_generalized\\expression_is_true.sql", "name": "default__expression_is_true", "macro_sql": "{% macro default__expression_is_true(model, expression, test_condition, group_by_columns, row_condition) -%}\nwith grouped_expression as (\n    select\n        {% if group_by_columns %}\n        {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ dbt_expectations.truth_expression(expression) }}\n    from {{ model }}\n     {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by_columns %}\n    group by\n    {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }}{% if not loop.last %},{% endif %}\n    {% endfor %}\n    {% endif %}\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression {{ test_condition }})\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4138153}, "macro.dbt_expectations.truth_expression": {"unique_id": "macro.dbt_expectations.truth_expression", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\_truth_expression.sql", "original_file_path": "macros\\schema_tests\\_generalized\\_truth_expression.sql", "name": "truth_expression", "macro_sql": "{% macro truth_expression(expression) %}\n    {{ adapter.dispatch('truth_expression', 'dbt_expectations') (expression) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.41483}, "macro.dbt_expectations.default__truth_expression": {"unique_id": "macro.dbt_expectations.default__truth_expression", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\schema_tests\\_generalized\\_truth_expression.sql", "original_file_path": "macros\\schema_tests\\_generalized\\_truth_expression.sql", "name": "default__truth_expression", "macro_sql": "{% macro default__truth_expression(expression) %}\n  {{ expression }} as expression\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.41483}, "macro.dbt_expectations.postgres__type_timestamp": {"unique_id": "macro.dbt_expectations.postgres__type_timestamp", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\utils\\datatypes.sql", "original_file_path": "macros\\utils\\datatypes.sql", "name": "postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() -%}\n    timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4158123}, "macro.dbt_expectations.type_datetime": {"unique_id": "macro.dbt_expectations.type_datetime", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\utils\\datatypes.sql", "original_file_path": "macros\\utils\\datatypes.sql", "name": "type_datetime", "macro_sql": "\n\n\n\n{%- macro type_datetime() -%}\n  {{ return(adapter.dispatch('type_datetime', 'dbt_expectations')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_expectations.default__type_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4158123}, "macro.dbt_expectations.default__type_datetime": {"unique_id": "macro.dbt_expectations.default__type_datetime", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\utils\\datatypes.sql", "original_file_path": "macros\\utils\\datatypes.sql", "name": "default__type_datetime", "macro_sql": "{% macro default__type_datetime() -%}\n    datetime\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4158123}, "macro.dbt_expectations.snowflake__type_datetime": {"unique_id": "macro.dbt_expectations.snowflake__type_datetime", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\utils\\datatypes.sql", "original_file_path": "macros\\utils\\datatypes.sql", "name": "snowflake__type_datetime", "macro_sql": "{% macro snowflake__type_datetime() -%}\n    timestamp_ntz\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4158123}, "macro.dbt_expectations.postgres__type_datetime": {"unique_id": "macro.dbt_expectations.postgres__type_datetime", "package_name": "dbt_expectations", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_expectations", "path": "macros\\utils\\datatypes.sql", "original_file_path": "macros\\utils\\datatypes.sql", "name": "postgres__type_datetime", "macro_sql": "{% macro postgres__type_datetime() -%}\n    timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4158123}, "macro.dbt_utils.cast_bool_to_text": {"unique_id": "macro.dbt_utils.cast_bool_to_text", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\cast_bool_to_text.sql", "original_file_path": "macros\\cross_db_utils\\cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt_utils') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.416962}, "macro.dbt_utils.default__cast_bool_to_text": {"unique_id": "macro.dbt_utils.default__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\cast_bool_to_text.sql", "original_file_path": "macros\\cross_db_utils\\cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.416962}, "macro.dbt_utils.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_utils.redshift__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\cast_bool_to_text.sql", "original_file_path": "macros\\cross_db_utils\\cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.418005}, "macro.dbt_utils.concat": {"unique_id": "macro.dbt_utils.concat", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\concat.sql", "original_file_path": "macros\\cross_db_utils\\concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt_utils')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4190083}, "macro.dbt_utils.default__concat": {"unique_id": "macro.dbt_utils.default__concat", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\concat.sql", "original_file_path": "macros\\cross_db_utils\\concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4190083}, "macro.dbt_utils.current_timestamp": {"unique_id": "macro.dbt_utils.current_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ return(adapter.dispatch('current_timestamp', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4200053}, "macro.dbt_utils.default__current_timestamp": {"unique_id": "macro.dbt_utils.default__current_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() %}\n    current_timestamp::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4200053}, "macro.dbt_utils.redshift__current_timestamp": {"unique_id": "macro.dbt_utils.redshift__current_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() %}\n    getdate()\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4200053}, "macro.dbt_utils.bigquery__current_timestamp": {"unique_id": "macro.dbt_utils.bigquery__current_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() %}\n    current_timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4210048}, "macro.dbt_utils.current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "current_timestamp_in_utc", "macro_sql": "{% macro current_timestamp_in_utc() -%}\n  {{ return(adapter.dispatch('current_timestamp_in_utc', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4210048}, "macro.dbt_utils.default__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.default__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "default__current_timestamp_in_utc", "macro_sql": "{% macro default__current_timestamp_in_utc() %}\n    {{dbt_utils.current_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4210048}, "macro.dbt_utils.snowflake__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.snowflake__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "snowflake__current_timestamp_in_utc", "macro_sql": "{% macro snowflake__current_timestamp_in_utc() %}\n    convert_timezone('UTC', {{dbt_utils.current_timestamp()}})::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4210048}, "macro.dbt_utils.postgres__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.postgres__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "postgres__current_timestamp_in_utc", "macro_sql": "{% macro postgres__current_timestamp_in_utc() %}\n    (current_timestamp at time zone 'utc')::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4220028}, "macro.dbt_utils.redshift__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.redshift__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\current_timestamp.sql", "original_file_path": "macros\\cross_db_utils\\current_timestamp.sql", "name": "redshift__current_timestamp_in_utc", "macro_sql": "{% macro redshift__current_timestamp_in_utc() %}\n    {{ return(dbt_utils.default__current_timestamp_in_utc()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4220028}, "macro.dbt_utils.type_string": {"unique_id": "macro.dbt_utils.type_string", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.423006}, "macro.dbt_utils.default__type_string": {"unique_id": "macro.dbt_utils.default__type_string", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4239628}, "macro.dbt_utils.redshift__type_string": {"unique_id": "macro.dbt_utils.redshift__type_string", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "redshift__type_string", "macro_sql": "\n\n{%- macro redshift__type_string() -%}\n    varchar\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4239628}, "macro.dbt_utils.postgres__type_string": {"unique_id": "macro.dbt_utils.postgres__type_string", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "postgres__type_string", "macro_sql": "{% macro postgres__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4239628}, "macro.dbt_utils.snowflake__type_string": {"unique_id": "macro.dbt_utils.snowflake__type_string", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "snowflake__type_string", "macro_sql": "{% macro snowflake__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4239628}, "macro.dbt_utils.type_timestamp": {"unique_id": "macro.dbt_utils.type_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4239628}, "macro.dbt_utils.default__type_timestamp": {"unique_id": "macro.dbt_utils.default__type_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4250069}, "macro.dbt_utils.snowflake__type_timestamp": {"unique_id": "macro.dbt_utils.snowflake__type_timestamp", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() %}\n    timestamp_ntz\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4250069}, "macro.dbt_utils.type_float": {"unique_id": "macro.dbt_utils.type_float", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4250069}, "macro.dbt_utils.default__type_float": {"unique_id": "macro.dbt_utils.default__type_float", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4250069}, "macro.dbt_utils.bigquery__type_float": {"unique_id": "macro.dbt_utils.bigquery__type_float", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "bigquery__type_float", "macro_sql": "{% macro bigquery__type_float() %}\n    float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4259968}, "macro.dbt_utils.type_numeric": {"unique_id": "macro.dbt_utils.type_numeric", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4261463}, "macro.dbt_utils.default__type_numeric": {"unique_id": "macro.dbt_utils.default__type_numeric", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    numeric(28, 6)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4261463}, "macro.dbt_utils.bigquery__type_numeric": {"unique_id": "macro.dbt_utils.bigquery__type_numeric", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "bigquery__type_numeric", "macro_sql": "{% macro bigquery__type_numeric() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4261463}, "macro.dbt_utils.type_bigint": {"unique_id": "macro.dbt_utils.type_bigint", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4261463}, "macro.dbt_utils.default__type_bigint": {"unique_id": "macro.dbt_utils.default__type_bigint", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    bigint\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4271836}, "macro.dbt_utils.bigquery__type_bigint": {"unique_id": "macro.dbt_utils.bigquery__type_bigint", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "bigquery__type_bigint", "macro_sql": "{% macro bigquery__type_bigint() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4271836}, "macro.dbt_utils.type_int": {"unique_id": "macro.dbt_utils.type_int", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4271836}, "macro.dbt_utils.default__type_int": {"unique_id": "macro.dbt_utils.default__type_int", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4271836}, "macro.dbt_utils.bigquery__type_int": {"unique_id": "macro.dbt_utils.bigquery__type_int", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datatypes.sql", "original_file_path": "macros\\cross_db_utils\\datatypes.sql", "name": "bigquery__type_int", "macro_sql": "{% macro bigquery__type_int() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.428148}, "macro.dbt_utils.dateadd": {"unique_id": "macro.dbt_utils.dateadd", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\dateadd.sql", "original_file_path": "macros\\cross_db_utils\\dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt_utils')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4291472}, "macro.dbt_utils.default__dateadd": {"unique_id": "macro.dbt_utils.default__dateadd", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\dateadd.sql", "original_file_path": "macros\\cross_db_utils\\dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4291472}, "macro.dbt_utils.bigquery__dateadd": {"unique_id": "macro.dbt_utils.bigquery__dateadd", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\dateadd.sql", "original_file_path": "macros\\cross_db_utils\\dateadd.sql", "name": "bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4301476}, "macro.dbt_utils.postgres__dateadd": {"unique_id": "macro.dbt_utils.postgres__dateadd", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\dateadd.sql", "original_file_path": "macros\\cross_db_utils\\dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4301476}, "macro.dbt_utils.redshift__dateadd": {"unique_id": "macro.dbt_utils.redshift__dateadd", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\dateadd.sql", "original_file_path": "macros\\cross_db_utils\\dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ return(dbt_utils.default__dateadd(datepart, interval, from_date_or_timestamp)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4301476}, "macro.dbt_utils.datediff": {"unique_id": "macro.dbt_utils.datediff", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datediff.sql", "original_file_path": "macros\\cross_db_utils\\datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt_utils')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4342058}, "macro.dbt_utils.default__datediff": {"unique_id": "macro.dbt_utils.default__datediff", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datediff.sql", "original_file_path": "macros\\cross_db_utils\\datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.43519}, "macro.dbt_utils.bigquery__datediff": {"unique_id": "macro.dbt_utils.bigquery__datediff", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datediff.sql", "original_file_path": "macros\\cross_db_utils\\datediff.sql", "name": "bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.43519}, "macro.dbt_utils.postgres__datediff": {"unique_id": "macro.dbt_utils.postgres__datediff", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datediff.sql", "original_file_path": "macros\\cross_db_utils\\datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) %}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4394178}, "macro.dbt_utils.redshift__datediff": {"unique_id": "macro.dbt_utils.redshift__datediff", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\datediff.sql", "original_file_path": "macros\\cross_db_utils\\datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) %}\n\n    {{ return(dbt_utils.default__datediff(first_date, second_date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4394178}, "macro.dbt_utils.date_trunc": {"unique_id": "macro.dbt_utils.date_trunc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\date_trunc.sql", "original_file_path": "macros\\cross_db_utils\\date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt_utils') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4404163}, "macro.dbt_utils.default__date_trunc": {"unique_id": "macro.dbt_utils.default__date_trunc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\date_trunc.sql", "original_file_path": "macros\\cross_db_utils\\date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) %}\n    date_trunc('{{datepart}}', {{date}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4404163}, "macro.dbt_utils.bigquery__date_trunc": {"unique_id": "macro.dbt_utils.bigquery__date_trunc", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\date_trunc.sql", "original_file_path": "macros\\cross_db_utils\\date_trunc.sql", "name": "bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) %}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4414241}, "macro.dbt_utils.except": {"unique_id": "macro.dbt_utils.except", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\except.sql", "original_file_path": "macros\\cross_db_utils\\except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4414241}, "macro.dbt_utils.default__except": {"unique_id": "macro.dbt_utils.default__except", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\except.sql", "original_file_path": "macros\\cross_db_utils\\except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.442445}, "macro.dbt_utils.bigquery__except": {"unique_id": "macro.dbt_utils.bigquery__except", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\except.sql", "original_file_path": "macros\\cross_db_utils\\except.sql", "name": "bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.442445}, "macro.dbt_utils.hash": {"unique_id": "macro.dbt_utils.hash", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\hash.sql", "original_file_path": "macros\\cross_db_utils\\hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt_utils') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.443458}, "macro.dbt_utils.default__hash": {"unique_id": "macro.dbt_utils.default__hash", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\hash.sql", "original_file_path": "macros\\cross_db_utils\\hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{field}} as {{dbt_utils.type_string()}}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.443458}, "macro.dbt_utils.bigquery__hash": {"unique_id": "macro.dbt_utils.bigquery__hash", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\hash.sql", "original_file_path": "macros\\cross_db_utils\\hash.sql", "name": "bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt_utils.default__hash(field)}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.443458}, "macro.dbt_utils.identifier": {"unique_id": "macro.dbt_utils.identifier", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\identifier.sql", "original_file_path": "macros\\cross_db_utils\\identifier.sql", "name": "identifier", "macro_sql": "{% macro identifier(value) %}\t\n  {%- set error_message = '\n    Warning: the `identifier` macro is no longer supported and will be deprecated in a future release of dbt-utils. \\\n    Use `adapter.quote` instead. The {}.{} model triggered this warning. \\\n    '.format(model.package_name, model.name) -%}\n  {%- do exceptions.warn(error_message) -%}\n  {{ return(adapter.dispatch('identifier', 'dbt_utils') (value)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__identifier"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.444434}, "macro.dbt_utils.default__identifier": {"unique_id": "macro.dbt_utils.default__identifier", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\identifier.sql", "original_file_path": "macros\\cross_db_utils\\identifier.sql", "name": "default__identifier", "macro_sql": "{% macro default__identifier(value) -%}\t\n    \"{{ value }}\"\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4454162}, "macro.dbt_utils.bigquery__identifier": {"unique_id": "macro.dbt_utils.bigquery__identifier", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\identifier.sql", "original_file_path": "macros\\cross_db_utils\\identifier.sql", "name": "bigquery__identifier", "macro_sql": "{% macro bigquery__identifier(value) -%}\t\n    `{{ value }}`\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4454162}, "macro.dbt_utils.intersect": {"unique_id": "macro.dbt_utils.intersect", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\intersect.sql", "original_file_path": "macros\\cross_db_utils\\intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__intersect"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4464161}, "macro.dbt_utils.default__intersect": {"unique_id": "macro.dbt_utils.default__intersect", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\intersect.sql", "original_file_path": "macros\\cross_db_utils\\intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4464161}, "macro.dbt_utils.bigquery__intersect": {"unique_id": "macro.dbt_utils.bigquery__intersect", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\intersect.sql", "original_file_path": "macros\\cross_db_utils\\intersect.sql", "name": "bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4464161}, "macro.dbt_utils.last_day": {"unique_id": "macro.dbt_utils.last_day", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\last_day.sql", "original_file_path": "macros\\cross_db_utils\\last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt_utils') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.447627}, "macro.dbt_utils.default_last_day": {"unique_id": "macro.dbt_utils.default_last_day", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\last_day.sql", "original_file_path": "macros\\cross_db_utils\\last_day.sql", "name": "default_last_day", "macro_sql": "\n\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd(datepart, '1', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4486287}, "macro.dbt_utils.default__last_day": {"unique_id": "macro.dbt_utils.default__last_day", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\last_day.sql", "original_file_path": "macros\\cross_db_utils\\last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4486287}, "macro.dbt_utils.postgres__last_day": {"unique_id": "macro.dbt_utils.postgres__last_day", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\last_day.sql", "original_file_path": "macros\\cross_db_utils\\last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd('month', '3', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc", "macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4496691}, "macro.dbt_utils.redshift__last_day": {"unique_id": "macro.dbt_utils.redshift__last_day", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\last_day.sql", "original_file_path": "macros\\cross_db_utils\\last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n\n    {{ return(dbt_utils.default__last_day(date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4496691}, "macro.dbt_utils.length": {"unique_id": "macro.dbt_utils.length", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\length.sql", "original_file_path": "macros\\cross_db_utils\\length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__length"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.450671}, "macro.dbt_utils.default__length": {"unique_id": "macro.dbt_utils.default__length", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\length.sql", "original_file_path": "macros\\cross_db_utils\\length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n    \n    length(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.450671}, "macro.dbt_utils.redshift__length": {"unique_id": "macro.dbt_utils.redshift__length", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\length.sql", "original_file_path": "macros\\cross_db_utils\\length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4516737}, "macro.dbt_utils.string_literal": {"unique_id": "macro.dbt_utils.string_literal", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\literal.sql", "original_file_path": "macros\\cross_db_utils\\literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt_utils') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4516737}, "macro.dbt_utils.default__string_literal": {"unique_id": "macro.dbt_utils.default__string_literal", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\literal.sql", "original_file_path": "macros\\cross_db_utils\\literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4526722}, "macro.dbt_utils.position": {"unique_id": "macro.dbt_utils.position", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\position.sql", "original_file_path": "macros\\cross_db_utils\\position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt_utils') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__position"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4526722}, "macro.dbt_utils.default__position": {"unique_id": "macro.dbt_utils.default__position", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\position.sql", "original_file_path": "macros\\cross_db_utils\\position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4536693}, "macro.dbt_utils.bigquery__position": {"unique_id": "macro.dbt_utils.bigquery__position", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\position.sql", "original_file_path": "macros\\cross_db_utils\\position.sql", "name": "bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n        \n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4536693}, "macro.dbt_utils.replace": {"unique_id": "macro.dbt_utils.replace", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\replace.sql", "original_file_path": "macros\\cross_db_utils\\replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt_utils') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4546294}, "macro.dbt_utils.default__replace": {"unique_id": "macro.dbt_utils.default__replace", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\replace.sql", "original_file_path": "macros\\cross_db_utils\\replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n    \n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4546294}, "macro.dbt_utils.right": {"unique_id": "macro.dbt_utils.right", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\right.sql", "original_file_path": "macros\\cross_db_utils\\right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt_utils') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__right"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4566581}, "macro.dbt_utils.default__right": {"unique_id": "macro.dbt_utils.default__right", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\right.sql", "original_file_path": "macros\\cross_db_utils\\right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.456944}, "macro.dbt_utils.bigquery__right": {"unique_id": "macro.dbt_utils.bigquery__right", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\right.sql", "original_file_path": "macros\\cross_db_utils\\right.sql", "name": "bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.456944}, "macro.dbt_utils.snowflake__right": {"unique_id": "macro.dbt_utils.snowflake__right", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\right.sql", "original_file_path": "macros\\cross_db_utils\\right.sql", "name": "snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.456944}, "macro.dbt_utils.safe_cast": {"unique_id": "macro.dbt_utils.safe_cast", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\safe_cast.sql", "original_file_path": "macros\\cross_db_utils\\safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt_utils') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4579446}, "macro.dbt_utils.default__safe_cast": {"unique_id": "macro.dbt_utils.default__safe_cast", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\safe_cast.sql", "original_file_path": "macros\\cross_db_utils\\safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4579446}, "macro.dbt_utils.snowflake__safe_cast": {"unique_id": "macro.dbt_utils.snowflake__safe_cast", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\safe_cast.sql", "original_file_path": "macros\\cross_db_utils\\safe_cast.sql", "name": "snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.458989}, "macro.dbt_utils.bigquery__safe_cast": {"unique_id": "macro.dbt_utils.bigquery__safe_cast", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\safe_cast.sql", "original_file_path": "macros\\cross_db_utils\\safe_cast.sql", "name": "bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.458989}, "macro.dbt_utils.split_part": {"unique_id": "macro.dbt_utils.split_part", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\split_part.sql", "original_file_path": "macros\\cross_db_utils\\split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt_utils') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4599888}, "macro.dbt_utils.default__split_part": {"unique_id": "macro.dbt_utils.default__split_part", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\split_part.sql", "original_file_path": "macros\\cross_db_utils\\split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4599888}, "macro.dbt_utils.bigquery__split_part": {"unique_id": "macro.dbt_utils.bigquery__split_part", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\split_part.sql", "original_file_path": "macros\\cross_db_utils\\split_part.sql", "name": "bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4609854}, "macro.dbt_utils.width_bucket": {"unique_id": "macro.dbt_utils.width_bucket", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\width_bucket.sql", "original_file_path": "macros\\cross_db_utils\\width_bucket.sql", "name": "width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.462991}, "macro.dbt_utils.default__width_bucket": {"unique_id": "macro.dbt_utils.default__width_bucket", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\width_bucket.sql", "original_file_path": "macros\\cross_db_utils\\width_bucket.sql", "name": "default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }},\n                    {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.463986}, "macro.dbt_utils.redshift__width_bucket": {"unique_id": "macro.dbt_utils.redshift__width_bucket", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\width_bucket.sql", "original_file_path": "macros\\cross_db_utils\\width_bucket.sql", "name": "redshift__width_bucket", "macro_sql": "{% macro redshift__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is exactly at the bucket edge\n        case\n            when\n                {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }} %\n                {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                 = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4650075}, "macro.dbt_utils.snowflake__width_bucket": {"unique_id": "macro.dbt_utils.snowflake__width_bucket", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\width_bucket.sql", "original_file_path": "macros\\cross_db_utils\\width_bucket.sql", "name": "snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4650075}, "macro.dbt_utils._is_ephemeral": {"unique_id": "macro.dbt_utils._is_ephemeral", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\_is_ephemeral.sql", "original_file_path": "macros\\cross_db_utils\\_is_ephemeral.sql", "name": "_is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4671288}, "macro.dbt_utils._is_relation": {"unique_id": "macro.dbt_utils._is_relation", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\cross_db_utils\\_is_relation.sql", "original_file_path": "macros\\cross_db_utils\\_is_relation.sql", "name": "_is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4681706}, "macro.dbt_utils.log_info": {"unique_id": "macro.dbt_utils.log_info", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\log_info.sql", "original_file_path": "macros\\jinja_helpers\\log_info.sql", "name": "log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4691725}, "macro.dbt_utils.default__log_info": {"unique_id": "macro.dbt_utils.default__log_info", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\log_info.sql", "original_file_path": "macros\\jinja_helpers\\log_info.sql", "name": "default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4691725}, "macro.dbt_utils.pretty_log_format": {"unique_id": "macro.dbt_utils.pretty_log_format", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\pretty_log_format.sql", "original_file_path": "macros\\jinja_helpers\\pretty_log_format.sql", "name": "pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4701698}, "macro.dbt_utils.default__pretty_log_format": {"unique_id": "macro.dbt_utils.default__pretty_log_format", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\pretty_log_format.sql", "original_file_path": "macros\\jinja_helpers\\pretty_log_format.sql", "name": "default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4701698}, "macro.dbt_utils.pretty_time": {"unique_id": "macro.dbt_utils.pretty_time", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\pretty_time.sql", "original_file_path": "macros\\jinja_helpers\\pretty_time.sql", "name": "pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4711566}, "macro.dbt_utils.default__pretty_time": {"unique_id": "macro.dbt_utils.default__pretty_time", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\pretty_time.sql", "original_file_path": "macros\\jinja_helpers\\pretty_time.sql", "name": "default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4721756}, "macro.dbt_utils.slugify": {"unique_id": "macro.dbt_utils.slugify", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\jinja_helpers\\slugify.sql", "original_file_path": "macros\\jinja_helpers\\slugify.sql", "name": "slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4731812}, "macro.dbt_utils.get_period_boundaries": {"unique_id": "macro.dbt_utils.get_period_boundaries", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\materializations\\insert_by_period_materialization.sql", "original_file_path": "macros\\materializations\\insert_by_period_materialization.sql", "name": "get_period_boundaries", "macro_sql": "{% macro get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n    {{ return(adapter.dispatch('get_period_boundaries', 'dbt_utils')(target_schema, target_table, timestamp_field, start_date, stop_date, period)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_boundaries"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.481313}, "macro.dbt_utils.default__get_period_boundaries": {"unique_id": "macro.dbt_utils.default__get_period_boundaries", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\materializations\\insert_by_period_materialization.sql", "original_file_path": "macros\\materializations\\insert_by_period_materialization.sql", "name": "default__get_period_boundaries", "macro_sql": "{% macro default__get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n\n  {% call statement('period_boundaries', fetch_result=True) -%}\n    with data as (\n      select\n          coalesce(max(\"{{timestamp_field}}\"), '{{start_date}}')::timestamp as start_timestamp,\n          coalesce(\n            {{dbt_utils.dateadd('millisecond',\n                                -1,\n                                \"nullif('\" ~ stop_date ~ \"','')::timestamp\")}},\n            {{dbt_utils.current_timestamp()}}\n          ) as stop_timestamp\n      from \"{{target_schema}}\".\"{{target_table}}\"\n    )\n\n    select\n      start_timestamp,\n      stop_timestamp,\n      {{dbt_utils.datediff('start_timestamp',\n                           'stop_timestamp',\n                           period)}}  + 1 as num_periods\n    from data\n  {%- endcall %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4823525}, "macro.dbt_utils.get_period_sql": {"unique_id": "macro.dbt_utils.get_period_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\materializations\\insert_by_period_materialization.sql", "original_file_path": "macros\\materializations\\insert_by_period_materialization.sql", "name": "get_period_sql", "macro_sql": "{% macro get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n    {{ return(adapter.dispatch('get_period_sql', 'dbt_utils')(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4833121}, "macro.dbt_utils.default__get_period_sql": {"unique_id": "macro.dbt_utils.default__get_period_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\materializations\\insert_by_period_materialization.sql", "original_file_path": "macros\\materializations\\insert_by_period_materialization.sql", "name": "default__get_period_sql", "macro_sql": "{% macro default__get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n\n  {%- set period_filter -%}\n    (\"{{timestamp_field}}\" >  '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' and\n     \"{{timestamp_field}}\" <= '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' + interval '1 {{period}}' and\n     \"{{timestamp_field}}\" <  '{{stop_timestamp}}'::timestamp)\n  {%- endset -%}\n\n  {%- set filtered_sql = sql | replace(\"__PERIOD_FILTER__\", period_filter) -%}\n\n  select\n    {{target_cols_csv}}\n  from (\n    {{filtered_sql}}\n  )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4843566}, "macro.dbt_utils.materialization_insert_by_period_default": {"unique_id": "macro.dbt_utils.materialization_insert_by_period_default", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\materializations\\insert_by_period_materialization.sql", "original_file_path": "macros\\materializations\\insert_by_period_materialization.sql", "name": "materialization_insert_by_period_default", "macro_sql": "{% materialization insert_by_period, default -%}\n  {%- set timestamp_field = config.require('timestamp_field') -%}\n  {%- set start_date = config.require('start_date') -%}\n  {%- set stop_date = config.get('stop_date') or '' -%}}\n  {%- set period = config.get('period') or 'week' -%}\n\n  {%- if sql.find('__PERIOD_FILTER__') == -1 -%}\n    {%- set error_message -%}\n      Model '{{ model.unique_id }}' does not include the required string '__PERIOD_FILTER__' in its sql\n    {%- endset -%}\n    {{ exceptions.raise_compiler_error(error_message) }}\n  {%- endif -%}\n\n  {%- set identifier = model['name'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, type='table') -%}\n\n  {%- set non_destructive_mode = (flags.NON_DESTRUCTIVE == True) -%}\n  {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n\n  {%- set should_truncate = (non_destructive_mode and full_refresh_mode and exists_as_table) -%}\n  {%- set should_drop = (not should_truncate and (full_refresh_mode or exists_not_as_table)) -%}\n  {%- set force_create = (flags.FULL_REFRESH and not flags.NON_DESTRUCTIVE) -%}\n\n  -- setup\n  {% if old_relation is none -%}\n    -- noop\n  {%- elif should_truncate -%}\n    {{adapter.truncate_relation(old_relation)}}\n  {%- elif should_drop -%}\n    {{adapter.drop_relation(old_relation)}}\n    {%- set old_relation = none -%}\n  {%- endif %}\n\n  {{run_hooks(pre_hooks, inside_transaction=False)}}\n\n  -- `begin` happens here, so `commit` after it to finish the transaction\n  {{run_hooks(pre_hooks, inside_transaction=True)}}\n  {% call statement() -%}\n    begin; -- make extra sure we've closed out the transaction\n    commit;\n  {%- endcall %}\n\n  -- build model\n  {% if force_create or old_relation is none -%}\n    {# Create an empty target table -#}\n    {% call statement('main') -%}\n      {%- set empty_sql = sql | replace(\"__PERIOD_FILTER__\", 'false') -%}\n      {{create_table_as(False, target_relation, empty_sql)}}\n    {%- endcall %}\n  {%- endif %}\n\n  {% set _ = dbt_utils.get_period_boundaries(schema,\n                                              identifier,\n                                              timestamp_field,\n                                              start_date,\n                                              stop_date,\n                                              period) %}\n  {%- set start_timestamp = load_result('period_boundaries')['data'][0][0] | string -%}\n  {%- set stop_timestamp = load_result('period_boundaries')['data'][0][1] | string -%}\n  {%- set num_periods = load_result('period_boundaries')['data'][0][2] | int -%}\n\n  {% set target_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set target_cols_csv = target_columns | map(attribute='quoted') | join(', ') -%}\n  {%- set loop_vars = {'sum_rows_inserted': 0} -%}\n\n  -- commit each period as a separate transaction\n  {% for i in range(num_periods) -%}\n    {%- set msg = \"Running for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) -%}\n    {{ dbt_utils.log_info(msg) }}\n\n    {%- set tmp_identifier = model['name'] ~ '__dbt_incremental_period' ~ i ~ '_tmp' -%}\n    {%- set tmp_relation = api.Relation.create(identifier=tmp_identifier,\n                                               schema=schema, type='table') -%}\n    {% call statement() -%}\n      {% set tmp_table_sql = dbt_utils.get_period_sql(target_cols_csv,\n                                                       sql,\n                                                       timestamp_field,\n                                                       period,\n                                                       start_timestamp,\n                                                       stop_timestamp,\n                                                       i) %}\n      {{dbt.create_table_as(True, tmp_relation, tmp_table_sql)}}\n    {%- endcall %}\n\n    {{adapter.expand_target_column_types(from_relation=tmp_relation,\n                                         to_relation=target_relation)}}\n    {%- set name = 'main-' ~ i -%}\n    {% call statement(name, fetch_result=True) -%}\n      insert into {{target_relation}} ({{target_cols_csv}})\n      (\n          select\n              {{target_cols_csv}}\n          from {{tmp_relation.include(schema=False)}}\n      );\n    {%- endcall %}\n    {% set result = load_result('main-' ~ i) %}\n    {% if 'response' in result.keys() %} {# added in v0.19.0 #}\n        {% set rows_inserted = result['response']['rows_affected'] %}\n    {% else %} {# older versions #}\n        {% set rows_inserted = result['status'].split(\" \")[2] | int %}\n    {% endif %}\n    \n    {%- set sum_rows_inserted = loop_vars['sum_rows_inserted'] + rows_inserted -%}\n    {%- if loop_vars.update({'sum_rows_inserted': sum_rows_inserted}) %} {% endif -%}\n\n    {%- set msg = \"Ran for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) ~ \"; \" ~ rows_inserted ~ \" records inserted\" -%}\n    {{ dbt_utils.log_info(msg) }}\n\n  {%- endfor %}\n\n  {% call statement() -%}\n    begin;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=True)}}\n\n  {% call statement() -%}\n    commit;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=False)}}\n\n  {%- set status_string = \"INSERT \" ~ loop_vars['sum_rows_inserted'] -%}\n\n  {% call noop_statement('main', status_string) -%}\n    -- no-op\n  {%- endcall %}\n\n  -- Return the relations created in this materialization\n  {{ return({'relations': [target_relation]}) }}  \n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_utils.get_period_boundaries", "macro.dbt_utils.log_info", "macro.dbt_utils.get_period_sql", "macro.dbt.noop_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4945486}, "macro.dbt_utils.test_accepted_range": {"unique_id": "macro.dbt_utils.test_accepted_range", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\accepted_range.sql", "original_file_path": "macros\\schema_tests\\accepted_range.sql", "name": "test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4965408}, "macro.dbt_utils.default__test_accepted_range": {"unique_id": "macro.dbt_utils.default__test_accepted_range", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\accepted_range.sql", "original_file_path": "macros\\schema_tests\\accepted_range.sql", "name": "default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4966857}, "macro.dbt_utils.test_at_least_one": {"unique_id": "macro.dbt_utils.test_at_least_one", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\at_least_one.sql", "original_file_path": "macros\\schema_tests\\at_least_one.sql", "name": "test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.497729}, "macro.dbt_utils.default__test_at_least_one": {"unique_id": "macro.dbt_utils.default__test_at_least_one", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\at_least_one.sql", "original_file_path": "macros\\schema_tests\\at_least_one.sql", "name": "default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name) %}\n\nselect *\nfrom (\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      count({{ column_name }}) as filler_column\n\n    from {{ model }}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4987302}, "macro.dbt_utils.test_cardinality_equality": {"unique_id": "macro.dbt_utils.test_cardinality_equality", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\cardinality_equality.sql", "original_file_path": "macros\\schema_tests\\cardinality_equality.sql", "name": "test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.4997}, "macro.dbt_utils.default__test_cardinality_equality": {"unique_id": "macro.dbt_utils.default__test_cardinality_equality", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\cardinality_equality.sql", "original_file_path": "macros\\schema_tests\\cardinality_equality.sql", "name": "default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt_utils.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt_utils.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5006876}, "macro.dbt_utils.test_equality": {"unique_id": "macro.dbt_utils.test_equality", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\equality.sql", "original_file_path": "macros\\schema_tests\\equality.sql", "name": "test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.501729}, "macro.dbt_utils.default__test_equality": {"unique_id": "macro.dbt_utils.default__test_equality", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\equality.sql", "original_file_path": "macros\\schema_tests\\equality.sql", "name": "default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.503728}, "macro.dbt_utils.test_equal_rowcount": {"unique_id": "macro.dbt_utils.test_equal_rowcount", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\equal_rowcount.sql", "original_file_path": "macros\\schema_tests\\equal_rowcount.sql", "name": "test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5047278}, "macro.dbt_utils.default__test_equal_rowcount": {"unique_id": "macro.dbt_utils.default__test_equal_rowcount", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\equal_rowcount.sql", "original_file_path": "macros\\schema_tests\\equal_rowcount.sql", "name": "default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5057323}, "macro.dbt_utils.test_expression_is_true": {"unique_id": "macro.dbt_utils.test_expression_is_true", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\expression_is_true.sql", "original_file_path": "macros\\schema_tests\\expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None, condition='1=1') %}\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name, condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5068817}, "macro.dbt_utils.default__test_expression_is_true": {"unique_id": "macro.dbt_utils.default__test_expression_is_true", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\expression_is_true.sql", "original_file_path": "macros\\schema_tests\\expression_is_true.sql", "name": "default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name, condition) %}\n\nwith meet_condition as (\n    select * from {{ model }} where {{ condition }}\n)\n\nselect\n    *\nfrom meet_condition\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5068817}, "macro.dbt_utils.test_fewer_rows_than": {"unique_id": "macro.dbt_utils.test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\fewer_rows_than.sql", "original_file_path": "macros\\schema_tests\\fewer_rows_than.sql", "name": "test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5079255}, "macro.dbt_utils.default__test_fewer_rows_than": {"unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\fewer_rows_than.sql", "original_file_path": "macros\\schema_tests\\fewer_rows_than.sql", "name": "default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model) %}\n\n{{ config(fail_calc = 'coalesce(row_count_delta, 0)') }}\n\nwith a as (\n\n    select count(*) as count_our_model from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_comparison_model from {{ compare_model }}\n\n),\ncounts as (\n\n    select\n        count_our_model,\n        count_comparison_model\n    from a\n    cross join b\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5089273}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\mutually_exclusive_ranges.sql", "original_file_path": "macros\\schema_tests\\mutually_exclusive_ranges.sql", "name": "test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5129228}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\mutually_exclusive_ranges.sql", "original_file_path": "macros\\schema_tests\\mutually_exclusive_ranges.sql", "name": "default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions nore cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.517078}, "macro.dbt_utils.test_not_accepted_values": {"unique_id": "macro.dbt_utils.test_not_accepted_values", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\not_accepted_values.sql", "original_file_path": "macros\\schema_tests\\not_accepted_values.sql", "name": "test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5180793}, "macro.dbt_utils.default__test_not_accepted_values": {"unique_id": "macro.dbt_utils.default__test_not_accepted_values", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\not_accepted_values.sql", "original_file_path": "macros\\schema_tests\\not_accepted_values.sql", "name": "default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5190506}, "macro.dbt_utils.test_not_constant": {"unique_id": "macro.dbt_utils.test_not_constant", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\not_constant.sql", "original_file_path": "macros\\schema_tests\\not_constant.sql", "name": "test_not_constant", "macro_sql": "{% test not_constant(model, column_name) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5200915}, "macro.dbt_utils.default__test_not_constant": {"unique_id": "macro.dbt_utils.default__test_not_constant", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\not_constant.sql", "original_file_path": "macros\\schema_tests\\not_constant.sql", "name": "default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name) %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5200915}, "macro.dbt_utils.test_not_null_proportion": {"unique_id": "macro.dbt_utils.test_not_null_proportion", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\not_null_proportion.sql", "original_file_path": "macros\\schema_tests\\not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.nps_mi_2021.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5220978}, "macro.dbt_utils.default__test_not_null_proportion": {"unique_id": "macro.dbt_utils.default__test_not_null_proportion", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\not_null_proportion.sql", "original_file_path": "macros\\schema_tests\\not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\nwith validation as (\n  select\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5240586}, "macro.dbt_utils.test_recency": {"unique_id": "macro.dbt_utils.test_recency", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\recency.sql", "original_file_path": "macros\\schema_tests\\recency.sql", "name": "test_recency", "macro_sql": "{% test recency(model, field, datepart, interval) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5250928}, "macro.dbt_utils.default__test_recency": {"unique_id": "macro.dbt_utils.default__test_recency", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\recency.sql", "original_file_path": "macros\\schema_tests\\recency.sql", "name": "default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval) %}\n\n{% set threshold = dbt_utils.dateadd(datepart, interval * -1, dbt_utils.current_timestamp()) %}\n\nwith recency as (\n\n    select max({{field}}) as most_recent\n    from {{ model }}\n\n)\n\nselect\n\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5262084}, "macro.dbt_utils.test_relationships_where": {"unique_id": "macro.dbt_utils.test_relationships_where", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\relationships_where.sql", "original_file_path": "macros\\schema_tests\\relationships_where.sql", "name": "test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5272827}, "macro.dbt_utils.default__test_relationships_where": {"unique_id": "macro.dbt_utils.default__test_relationships_where", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\relationships_where.sql", "original_file_path": "macros\\schema_tests\\relationships_where.sql", "name": "default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5282688}, "macro.dbt_utils.test_sequential_values": {"unique_id": "macro.dbt_utils.test_sequential_values", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\sequential_values.sql", "original_file_path": "macros\\schema_tests\\sequential_values.sql", "name": "test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart)) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5292847}, "macro.dbt_utils.default__test_sequential_values": {"unique_id": "macro.dbt_utils.default__test_sequential_values", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\sequential_values.sql", "original_file_path": "macros\\schema_tests\\sequential_values.sql", "name": "default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None) %}\n\nwith windowed as (\n\n    select\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            order by {{ column_name }}\n        ) as previous_{{ column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt_utils.type_timestamp() }})= cast({{ dbt_utils.dateadd(datepart, interval, 'previous_' + column_name) }} as {{ dbt_utils.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = previous_{{ column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5302777}, "macro.dbt_utils.test_not_null_where": {"unique_id": "macro.dbt_utils.test_not_null_where", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\test_not_null_where.sql", "original_file_path": "macros\\schema_tests\\test_not_null_where.sql", "name": "test_not_null_where", "macro_sql": "{% test not_null_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.not_null_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `not_null` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_not_null_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5312808}, "macro.dbt_utils.default__test_not_null_where": {"unique_id": "macro.dbt_utils.default__test_not_null_where", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\test_not_null_where.sql", "original_file_path": "macros\\schema_tests\\test_not_null_where.sql", "name": "default__test_not_null_where", "macro_sql": "{% macro default__test_not_null_where(model, column_name) %}\r\n  {{ return(test_not_null(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.532282}, "macro.dbt_utils.test_unique_where": {"unique_id": "macro.dbt_utils.test_unique_where", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\test_unique_where.sql", "original_file_path": "macros\\schema_tests\\test_unique_where.sql", "name": "test_unique_where", "macro_sql": "{% test unique_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.unique_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `unique` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_unique_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.533282}, "macro.dbt_utils.default__test_unique_where": {"unique_id": "macro.dbt_utils.default__test_unique_where", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\test_unique_where.sql", "original_file_path": "macros\\schema_tests\\test_unique_where.sql", "name": "default__test_unique_where", "macro_sql": "{% macro default__test_unique_where(model, column_name) %}\r\n  {{ return(test_unique(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.533282}, "macro.dbt_utils.test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\unique_combination_of_columns.sql", "original_file_path": "macros\\schema_tests\\unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5342836}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\schema_tests\\unique_combination_of_columns.sql", "original_file_path": "macros\\schema_tests\\unique_combination_of_columns.sql", "name": "default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5364056}, "macro.dbt_utils.get_intervals_between": {"unique_id": "macro.dbt_utils.get_intervals_between", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "name": "get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5375881}, "macro.dbt_utils.default__get_intervals_between": {"unique_id": "macro.dbt_utils.default__get_intervals_between", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "name": "default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{dbt_utils.datediff(start_date, end_date, datepart)}}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5395894}, "macro.dbt_utils.date_spine": {"unique_id": "macro.dbt_utils.date_spine", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "name": "date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5395894}, "macro.dbt_utils.default__date_spine": {"unique_id": "macro.dbt_utils.default__date_spine", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "name": "default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt_utils.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5405934}, "macro.dbt_utils.get_powers_of_two": {"unique_id": "macro.dbt_utils.get_powers_of_two", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "name": "get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5415885}, "macro.dbt_utils.default__get_powers_of_two": {"unique_id": "macro.dbt_utils.default__get_powers_of_two", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "name": "default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.542588}, "macro.dbt_utils.generate_series": {"unique_id": "macro.dbt_utils.generate_series", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "name": "generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5435896}, "macro.dbt_utils.default__generate_series": {"unique_id": "macro.dbt_utils.default__generate_series", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "name": "default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5445578}, "macro.dbt_utils.get_column_values": {"unique_id": "macro.dbt_utils.get_column_values", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_column_values.sql", "original_file_path": "macros\\sql\\get_column_values.sql", "name": "get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5467842}, "macro.dbt_utils.default__get_column_values": {"unique_id": "macro.dbt_utils.default__get_column_values", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_column_values.sql", "original_file_path": "macros\\sql\\get_column_values.sql", "name": "default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n{% if default is none %}\n    {% set default = [] %}\n{% endif %}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return(default) }}\n    {% endif %}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5488274}, "macro.dbt_utils.get_query_results_as_dict": {"unique_id": "macro.dbt_utils.get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_query_results_as_dict.sql", "original_file_path": "macros\\sql\\get_query_results_as_dict.sql", "name": "get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.549823}, "macro.dbt_utils.default__get_query_results_as_dict": {"unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_query_results_as_dict.sql", "original_file_path": "macros\\sql\\get_query_results_as_dict.sql", "name": "default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5517848}, "macro.dbt_utils.get_relations_by_pattern": {"unique_id": "macro.dbt_utils.get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_relations_by_pattern.sql", "original_file_path": "macros\\sql\\get_relations_by_pattern.sql", "name": "get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5528276}, "macro.dbt_utils.default__get_relations_by_pattern": {"unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_relations_by_pattern.sql", "original_file_path": "macros\\sql\\get_relations_by_pattern.sql", "name": "default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5548267}, "macro.dbt_utils.get_relations_by_prefix": {"unique_id": "macro.dbt_utils.get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_relations_by_prefix.sql", "original_file_path": "macros\\sql\\get_relations_by_prefix.sql", "name": "get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5558283}, "macro.dbt_utils.default__get_relations_by_prefix": {"unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_relations_by_prefix.sql", "original_file_path": "macros\\sql\\get_relations_by_prefix.sql", "name": "default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5579991}, "macro.dbt_utils.get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "name": "get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5600064}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "name": "default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5610013}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "name": "bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                case table_type\n                    when 'BASE TABLE' then 'table'\n                    else lower(table_type)\n                end as table_type\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5620012}, "macro.dbt_utils._bigquery__get_matching_schemata": {"unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "name": "_bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5629983}, "macro.dbt_utils.get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_tables_by_prefix_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_prefix_sql.sql", "name": "get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5640402}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\get_tables_by_prefix_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_prefix_sql.sql", "name": "default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5649993}, "macro.dbt_utils.group_by": {"unique_id": "macro.dbt_utils.group_by", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\groupby.sql", "original_file_path": "macros\\sql\\groupby.sql", "name": "group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5660784}, "macro.dbt_utils.default__group_by": {"unique_id": "macro.dbt_utils.default__group_by", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\groupby.sql", "original_file_path": "macros\\sql\\groupby.sql", "name": "default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5660784}, "macro.dbt_utils.degrees_to_radians": {"unique_id": "macro.dbt_utils.degrees_to_radians", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "name": "degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5681221}, "macro.dbt_utils.haversine_distance": {"unique_id": "macro.dbt_utils.haversine_distance", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "name": "haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5681221}, "macro.dbt_utils.default__haversine_distance": {"unique_id": "macro.dbt_utils.default__haversine_distance", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "name": "default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5710802}, "macro.dbt_utils.bigquery__haversine_distance": {"unique_id": "macro.dbt_utils.bigquery__haversine_distance", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "name": "bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5750818}, "macro.dbt_utils.nullcheck": {"unique_id": "macro.dbt_utils.nullcheck", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\nullcheck.sql", "original_file_path": "macros\\sql\\nullcheck.sql", "name": "nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5763948}, "macro.dbt_utils.default__nullcheck": {"unique_id": "macro.dbt_utils.default__nullcheck", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\nullcheck.sql", "original_file_path": "macros\\sql\\nullcheck.sql", "name": "default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5773995}, "macro.dbt_utils.nullcheck_table": {"unique_id": "macro.dbt_utils.nullcheck_table", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\nullcheck_table.sql", "original_file_path": "macros\\sql\\nullcheck_table.sql", "name": "nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5794115}, "macro.dbt_utils.default__nullcheck_table": {"unique_id": "macro.dbt_utils.default__nullcheck_table", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\nullcheck_table.sql", "original_file_path": "macros\\sql\\nullcheck_table.sql", "name": "default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5794115}, "macro.dbt_utils.pivot": {"unique_id": "macro.dbt_utils.pivot", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\pivot.sql", "original_file_path": "macros\\sql\\pivot.sql", "name": "pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5823972}, "macro.dbt_utils.default__pivot": {"unique_id": "macro.dbt_utils.default__pivot", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\pivot.sql", "original_file_path": "macros\\sql\\pivot.sql", "name": "default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for v in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ v }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ v ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ v ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5843976}, "macro.dbt_utils.safe_add": {"unique_id": "macro.dbt_utils.safe_add", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\safe_add.sql", "original_file_path": "macros\\sql\\safe_add.sql", "name": "safe_add", "macro_sql": "{%- macro safe_add() -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(*varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5853982}, "macro.dbt_utils.default__safe_add": {"unique_id": "macro.dbt_utils.default__safe_add", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\safe_add.sql", "original_file_path": "macros\\sql\\safe_add.sql", "name": "default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add() -%}\n\n{% set fields = [] %}\n\n{%- for field in varargs -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.586567}, "macro.dbt_utils.star": {"unique_id": "macro.dbt_utils.star", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\star.sql", "original_file_path": "macros\\sql\\star.sql", "name": "star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5875697}, "macro.dbt_utils.default__star": {"unique_id": "macro.dbt_utils.default__star", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\star.sql", "original_file_path": "macros\\sql\\star.sql", "name": "default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {%- do dbt_utils._is_relation(from, 'star') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n\n        {%- endif %}\n    {%- endfor %}\n\n    {%- for col in include_cols %}\n\n        {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }}\n        {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n\n    {%- endfor -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5905693}, "macro.dbt_utils.surrogate_key": {"unique_id": "macro.dbt_utils.surrogate_key", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\surrogate_key.sql", "original_file_path": "macros\\sql\\surrogate_key.sql", "name": "surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.59157}, "macro.dbt_utils.default__surrogate_key": {"unique_id": "macro.dbt_utils.default__surrogate_key", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\surrogate_key.sql", "original_file_path": "macros\\sql\\surrogate_key.sql", "name": "default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- if varargs|length >= 1 or field_list is string %}\n\n{%- set error_message = '\nWarning: the `surrogate_key` macro now takes a single list argument instead of \\\nmultiple string arguments. Support for multiple string arguments will be \\\ndeprecated in a future release of dbt-utils. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{# first argument is not included in varargs, so add first element to field_list_xf #}\n{%- set field_list_xf = [field_list] -%}\n\n{%- for field in varargs %}\n{%- set _ = field_list_xf.append(field) -%}\n{%- endfor -%}\n\n{%- else -%}\n\n{# if using list, just set field_list_xf as field_list #}\n{%- set field_list_xf = field_list -%}\n\n{%- endif -%}\n\n\n{%- set fields = [] -%}\n\n{%- for field in field_list_xf -%}\n\n    {%- set _ = fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- set _ = fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{dbt_utils.hash(dbt_utils.concat(fields))}}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.hash", "macro.dbt_utils.concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.593569}, "macro.dbt_utils.union_relations": {"unique_id": "macro.dbt_utils.union_relations", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\union.sql", "original_file_path": "macros\\sql\\union.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.5966556}, "macro.dbt_utils.default__union_relations": {"unique_id": "macro.dbt_utils.default__union_relations", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\union.sql", "original_file_path": "macros\\sql\\union.sql", "name": "default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.6016586}, "macro.dbt_utils.unpivot": {"unique_id": "macro.dbt_utils.unpivot", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\unpivot.sql", "original_file_path": "macros\\sql\\unpivot.sql", "name": "unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.6056576}, "macro.dbt_utils.default__unpivot": {"unique_id": "macro.dbt_utils.default__unpivot", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\sql\\unpivot.sql", "original_file_path": "macros\\sql\\unpivot.sql", "name": "default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n\n    {% if table %}\n        {%- set error_message = '\n            Warning: the `unpivot` macro no longer accepts a `table` parameter. \\\n            This parameter will be deprecated in a future release of dbt-utils. Use the `relation` parameter instead. \\\n            The {}.{} model triggered this warning. \\\n            '.format(model.package_name, model.name) -%}\n        {%- do exceptions.warn(error_message) -%}\n    {% endif %}\n\n    {% if relation and table %}\n        {{ exceptions.raise_compiler_error(\"Error: both the `relation` and `table` parameters were provided to `unpivot` macro. Choose one only (we recommend `relation`).\") }}\n    {% elif not relation and table %}\n        {% set relation=table %}\n    {% elif not relation and not table %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt_utils.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt_utils.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.type_string", "macro.dbt_utils.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.60978}, "macro.dbt_utils.get_url_host": {"unique_id": "macro.dbt_utils.get_url_host", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\web\\get_url_host.sql", "original_file_path": "macros\\web\\get_url_host.sql", "name": "get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.6107807}, "macro.dbt_utils.default__get_url_host": {"unique_id": "macro.dbt_utils.default__get_url_host", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\web\\get_url_host.sql", "original_file_path": "macros\\web\\get_url_host.sql", "name": "default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt_utils.split_part(\n        dbt_utils.split_part(\n            dbt_utils.replace(\n                dbt_utils.replace(\n                    dbt_utils.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt_utils.safe_cast(\n        parsed,\n        dbt_utils.type_string()\n        )}}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.replace", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.6117802}, "macro.dbt_utils.get_url_parameter": {"unique_id": "macro.dbt_utils.get_url_parameter", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\web\\get_url_parameter.sql", "original_file_path": "macros\\web\\get_url_parameter.sql", "name": "get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.612781}, "macro.dbt_utils.default__get_url_parameter": {"unique_id": "macro.dbt_utils.default__get_url_parameter", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\web\\get_url_parameter.sql", "original_file_path": "macros\\web\\get_url_parameter.sql", "name": "default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt_utils.split_part(dbt_utils.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.612781}, "macro.dbt_utils.get_url_path": {"unique_id": "macro.dbt_utils.get_url_path", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\web\\get_url_path.sql", "original_file_path": "macros\\web\\get_url_path.sql", "name": "get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.6137805}, "macro.dbt_utils.default__get_url_path": {"unique_id": "macro.dbt_utils.default__get_url_path", "package_name": "dbt_utils", "root_path": "D:\\Docker\\DBT2\\dbt-env\\Scripts\\dbt_project_postgres\\dbt_main\\dbt_packages\\dbt_utils", "path": "macros\\web\\get_url_path.sql", "original_file_path": "macros\\web\\get_url_path.sql", "name": "default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url = \n        dbt_utils.replace(\n            dbt_utils.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{dbt_utils.position(\"'/'\", stripped_url)}}, 0),\n            {{dbt_utils.position(\"'?'\", stripped_url)}} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt_utils.split_part(\n            dbt_utils.right(\n                stripped_url, \n                dbt_utils.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ), \n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt_utils.safe_cast(\n        parsed_path,\n        dbt_utils.type_string()\n    )}}\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt_utils.position", "macro.dbt_utils.split_part", "macro.dbt_utils.right", "macro.dbt_utils.length", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1642359250.6157804}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "d:\\docker\\dbt2\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "overview.md", "original_file_path": "docs\\overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.nps_mi_2021.src_postcode_phncode": ["model.nps_mi_2021.POSTCODE"], "model.nps_mi_2021.PRIMARY_HEALTH_NETWORK": ["seed.nps_mi_2021.PHNCODE_DATA"], "model.nps_mi_2021.POSTCODE": ["seed.nps_mi_2021.POSTCODE_DATA"], "seed.nps_mi_2021.PHNCODE_DATA": [], "seed.nps_mi_2021.POSTCODE_DATA": [], "test.nps_mi_2021.dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.4da88fdc6d": ["model.nps_mi_2021.POSTCODE"], "model.nps_mi_2021.PATHOLOGY_RESULT": ["model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_pathology_result_phc_bp", "model.nps_mi_2021.src_pathology_result_phc_md"], "model.nps_mi_2021.src_pathology_result_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_SITE_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_SITE_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_MD_OMOP"], "model.nps_mi_2021.ALCOHOL_STATUS": ["model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_alcohol_phc_bp", "model.nps_mi_2021.src_alcohol_phc_md"], "model.nps_mi_2021.src_alcohol_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_alcohol_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER": ["model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_matched_phc_md"], "model.nps_mi_2021.src_matched_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP"], "model.nps_mi_2021.src_matched_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP"], "model.nps_mi_2021.src_matched_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP"], "model.nps_mi_2021.src_matched_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP"], "model.nps_mi_2021.CLINICAL_USER": ["model.nps_mi_2021.src_clinical_user_bp", "model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_clinical_user_phc_bp", "model.nps_mi_2021.src_clinical_user_phc_md"], "model.nps_mi_2021.src_clinical_user_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP"], "model.nps_mi_2021.src_clinical_user_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP"], "model.nps_mi_2021.DIAGNOSIS": ["model.nps_mi_2021.src_active_patients", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_DIAGNOSIS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_DIAGNOSIS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_DIAGNOSIS_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP"], "model.nps_mi_2021.SCRIPT_ITEM": ["model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "model.nps_mi_2021.src_script_item_grh_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_script_item_grh_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_script_item_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_script_item_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.PRESCRIPTION": ["model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_prescription_phc_md"], "model.nps_mi_2021.src_prescription_grh_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_prescription_grh_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_prescription_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_prescription_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.src_alcohol_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_alcohol_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.SMOKING_STATUS": ["model.nps_mi_2021.src_smoking_bp", "model.nps_mi_2021.src_smoking_md", "model.nps_mi_2021.src_smoking_phc_bp", "model.nps_mi_2021.src_smoking_phc_md"], "model.nps_mi_2021.src_smoking_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_smoking_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.ALLERGY_REACTION": ["model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_reaction_phc_md"], "model.nps_mi_2021.src_allergy_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_allergy_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_reaction_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_MD_OMOP"], "model.nps_mi_2021.src_reaction_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP"], "model.nps_mi_2021.BILLING_SERVICE": ["model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_phc_md"], "model.nps_mi_2021.src_billing_service_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_billing_service_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_billing_service_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_billing_service_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.REFERRALS": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.src_active_patients": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.ENCOUNTER": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data"], "model.nps_mi_2021.src_encounter_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_encounter_md_excld_sensitive_data": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_encounter_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.ENCOUNTER_REASON": ["model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data"], "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_TYPE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_TYPE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_TYPE_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.IMMUNISATION": ["model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_immunization_phc_md"], "model.nps_mi_2021.src_immunization_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_immunization_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_immunization_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_immunization_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS": ["model.nps_mi_2021.src_long_bp", "model.nps_mi_2021.src_long_md", "model.nps_mi_2021.src_long_phc_bp", "model.nps_mi_2021.src_long_phc_md"], "model.nps_mi_2021.src_long_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_long_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_long_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_long_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.OBSERVATION": ["model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_observation_phc_md"], "model.nps_mi_2021.src_observation_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_observation_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_observation_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_observation_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.PATHOLOGY": ["model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_phc_md"], "model.nps_mi_2021.src_pathology_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_pathology_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_pathology_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_pathology_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.src_pathology_result_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_pathology_result_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_pathology_result_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.REQUESTED_TEST": ["model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_requested_test_phc_md"], "model.nps_mi_2021.src_requested_test_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP"], "model.nps_mi_2021.src_requested_test_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP"], "model.nps_mi_2021.src_requested_test_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP"], "model.nps_mi_2021.src_requested_test_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP"], "model.nps_mi_2021.src_smoking_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP"], "model.nps_mi_2021.src_smoking_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP"], "model.nps_mi_2021.src_clinical_user_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP"], "model.nps_mi_2021.PRACTICE_CONTACT": ["model.nps_mi_2021.src_practice_contact_bp", "model.nps_mi_2021.src_practice_contact_md", "model.nps_mi_2021.src_practice_contact_phc_bp", "model.nps_mi_2021.src_practice_contact_phc_md"], "model.nps_mi_2021.src_practice_contact_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP"], "model.nps_mi_2021.src_practice_contact_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP"], "model.nps_mi_2021.src_practice_contact_phc_bp": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP"], "model.nps_mi_2021.src_clinical_user_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP"], "model.nps_mi_2021.src_practice_contact_phc_md": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP"], "model.nps_mi_2021.PATHOLOGY_ALBUMIN": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_ALBUMIN_OMOP"], "model.nps_mi_2021.PATHOLOGY_EGFR": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_GFR_OMOP"], "model.nps_mi_2021.PATHOLOGY_HBA1C": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_HBA1C_OMOP"], "model.nps_mi_2021.PATHOLOGY_LIPIDS": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_LIPIDS_OMOP"], "model.nps_mi_2021.PRACTICE_RECRUITMENT": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PHC_OMOP"], "model.nps_mi_2021.SITE": ["source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP"], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.2205f46cd2": ["model.nps_mi_2021.SITE"], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.052e187c1f": ["model.nps_mi_2021.SITE"], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.74d7b07101": ["model.nps_mi_2021.SITE"], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.77aa18e311": ["model.nps_mi_2021.SITE"], "model.nps_mi_2021.PATIENT": ["model.nps_mi_2021.src_patients_bp", "model.nps_mi_2021.src_patients_md", "model.nps_mi_2021.src_patients_phc_bp", "model.nps_mi_2021.src_patients_phc_md"], "model.nps_mi_2021.src_patients_bp": ["model.nps_mi_2021.src_postcode_phncode", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE"], "model.nps_mi_2021.src_patients_md": ["model.nps_mi_2021.src_postcode_phncode", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE"], "model.nps_mi_2021.src_patients_phc_bp": ["model.nps_mi_2021.src_postcode_phncode", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE"], "model.nps_mi_2021.src_patients_phc_md": ["model.nps_mi_2021.src_postcode_phncode", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP", "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP", "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE"], "model.nps_mi_2021.test_get_phn_codes": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK"], "model.nps_mi_2021.test_phn_percent": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK"], "test.nps_mi_2021.relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_.5e80f16b64": ["model.nps_mi_2021.PRIMARY_HEALTH_NETWORK", "model.nps_mi_2021.test_get_phn_codes"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.1fd49f355a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.5eb848e427": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string.10c7ced156": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1.2c19e44c9f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.846ac26707": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM.5302f76f97": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM.3776826794": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.e3a6618d67": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.89635f761b": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.a96531a840": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string.8888773815": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime.88760a3bf8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime.a39095e9d6": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.a680eef112": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.74f627f4cf": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string.13e7565f62": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1.e3e3343ea6": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID.ee6534c4f6": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.9b91680f29": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM.c7f7d5a0a8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM.9f3a3cf321": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.2d52e9b62e": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.5ef9d67fa3": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.4ab27ecd0c": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string.ec45fa6736": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime.67a06fa1c6": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime.2a6fa5e8df": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.5ca59c218a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.b865ba6625": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string.b02963d614": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1.fd714909db": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID.95dac6d029": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.ba9f53c643": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM.190669a7bd": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM.30b29be29c": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.e6e90aebd5": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.aa8023999f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.efcb049473": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string.a348363466": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime.840ee0415d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime.776ee3829c": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime.06793428fa": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime.3575ba9248": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.5e339707bf": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.fa917fec4c": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string.aa3ceea01b": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER.b09d3160ef": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.c7c06685d3": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.ce865e7dfd": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string.699240662a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.d35102fc07": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.3f1a577594": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string.35b87fc341": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1.b9271e0869": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID.5d6da0b44f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD.422805cff4": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM.1df77c56c5": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM.06c1fd0354": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.afde74abbb": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.db877ef8ce": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.cb3ba12f02": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string.365a3dc0c2": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.5f256407a9": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.1720383e1b": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.84c8809b85": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string.ccef86a17d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime.28495dcbeb": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime.d290c025c0": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.4d5b2aff42": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.e92036c72b": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string.675b6df74f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1.50166821c0": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID.0f6535467e": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.e2105f54f0": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM.7d876e47e9": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM.ae40878b99": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.8d7e3c4349": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.63feb4a016": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.62e2e3b638": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string.c82580e626": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime.f10448be72": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime.bcb06831f8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime.79e8e8d9bf": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.f7ebbb98d0": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.3a20765014": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string.e6dc7da5ac": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1.bb695a2638": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID.29b08089ee": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC.91dad824e7": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM.763321588e": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM.18b37002e8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.5e5d7f08d6": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.76b3d307e3": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.ca5b5fa887": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string.4761b6841d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime.d540a96328": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime.0af2a2bf66": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.20e5c10167": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.0d930daa0c": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string.7d5ae53e72": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1.a4a4ab82b7": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID.3b52e192b5": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.6f37d9a460": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM.83a81824c7": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM.b352c945c2": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c8f4795651": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.237196fdbb": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c9a15fbf04": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string.623fb18c42": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime.435ce410a1": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime.9031c53a57": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.e5d82452b4": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.8fc68ba0ac": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string.9358535707": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1.9efa18b1cc": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID.b1ee3d1352": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.8e09d9bbb0": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM.4550056a41": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM.df285b185f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.efa9fcbdf5": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.6714a2cf69": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.47faefc17a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string.701807bd76": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime.b65e56b988": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime.33498972fa": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime.dbea157205": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.75f07a569f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.5554a5f286": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string.d21d602399": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID.ccffdc9b09": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.761dde4cb8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.2a6d8e9ede": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string.b5b324c083": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID.f7540b2473": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.875495fdfd": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REFERRALS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.fd50271a42": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REQUESTED_TEST"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.c5d35cc7e8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.7091c71229": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID.1add980c05": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.7aa4258877": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.e440c18fff": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID.2259a8262b": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.59f3f86a32": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.20650e611e": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID.0ce3c5efb6": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.9a3b36b73f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.c13c76b9bd": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID.059598ccde": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.c5b3e3b412": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.DIAGNOSIS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.5c70331cfd": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRESCRIPTION"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.e1a2c03e02": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SCRIPT_ITEM"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.3a73ee7acc": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.LONGITUDINAL_CIS_PATIENT_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.199e825804": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.af6aaac5c1": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string.45cac7427f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1.38cc79f27a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID.5ad07734a5": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.f7ee803ff4": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM.9bc33ced47": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM.d96cb0f782": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.e6e95a9205": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.6da019df1f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.89fc247464": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string.c514d1862f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime.ce0a647d0d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime.ee61e9fe2f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime.938e115f1e": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime.89b4b7788d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime.ba4a9eae36": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime.a2d3ec20bf": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH.9b8f0caad9": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.3bc2bb7ac7": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.ccc09c7626": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string.e4f994a08a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1.1f48500f58": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID.95fe960b65": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.a9e3ed73d7": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM.0bf54300f5": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM.97ed916dc1": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.5d67a221bb": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.7629c151d8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.0a35c39b4d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string.1d3fd828d0": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime.bfe72fc6d8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime.117778f76d": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime.833336f00f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.ec20f9d54e": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.dc524994bf": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string.01a82207b7": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1.a0803660da": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE.bcd558e979": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.dfd2426837": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.7ab80d5240": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.73b17b4635": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string.82aa30da07": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime.bb805e9a0b": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime.3a35359e09": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.8f956873c3": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.47ab9662bd": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string.695a57764a": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1.0d678885de": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID.335661aacc": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_.fc9b914173": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM.0638fa2e69": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM.b2bac72ebb": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.a12d73eff8": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.574f708515": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.0dc3c8525f": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string.5b93d24673": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime.92bf1d2ccc": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime.22e11eeba4": ["source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_SITE_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_SITE_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_DIAGNOSIS_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_SITE_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_DIAGNOSIS_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_DIAGNOSIS_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_TYPE_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_TYPE_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_ENCOUNTER_SITE": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP1": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_ALBUMIN_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_GFR_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_HBA1C_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_LIPIDS_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PHC_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_TYPE_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REFERRALS": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REQUESTED_TEST": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.DIAGNOSIS": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRESCRIPTION": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SCRIPT_ITEM": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.LONGITUDINAL_CIS_PATIENT_STATUS": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.POSTCODE": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS": []}, "child_map": {"model.nps_mi_2021.src_postcode_phncode": ["model.nps_mi_2021.src_patients_bp", "model.nps_mi_2021.src_patients_md", "model.nps_mi_2021.src_patients_phc_bp", "model.nps_mi_2021.src_patients_phc_md"], "model.nps_mi_2021.PRIMARY_HEALTH_NETWORK": ["test.nps_mi_2021.relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_.5e80f16b64"], "model.nps_mi_2021.POSTCODE": ["model.nps_mi_2021.src_postcode_phncode", "test.nps_mi_2021.dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.4da88fdc6d"], "seed.nps_mi_2021.PHNCODE_DATA": ["model.nps_mi_2021.PRIMARY_HEALTH_NETWORK"], "seed.nps_mi_2021.POSTCODE_DATA": ["model.nps_mi_2021.POSTCODE"], "test.nps_mi_2021.dbt_utils_not_null_proportion_POSTCODE_0_95__IRSAD_SCORE_2016.4da88fdc6d": [], "model.nps_mi_2021.PATHOLOGY_RESULT": [], "model.nps_mi_2021.src_pathology_result_phc_md": ["model.nps_mi_2021.PATHOLOGY_RESULT"], "model.nps_mi_2021.ALCOHOL_STATUS": [], "model.nps_mi_2021.src_alcohol_bp": ["model.nps_mi_2021.ALCOHOL_STATUS"], "model.nps_mi_2021.src_alcohol_phc_bp": ["model.nps_mi_2021.ALCOHOL_STATUS"], "model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER": [], "model.nps_mi_2021.src_matched_bp": ["model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "model.nps_mi_2021.src_matched_md": ["model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "model.nps_mi_2021.src_matched_phc_bp": ["model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "model.nps_mi_2021.src_matched_phc_md": ["model.nps_mi_2021.PATIENT_MATCHED_USUAL_PROVIDER"], "model.nps_mi_2021.CLINICAL_USER": [], "model.nps_mi_2021.src_clinical_user_bp": ["model.nps_mi_2021.CLINICAL_USER"], "model.nps_mi_2021.src_clinical_user_md": ["model.nps_mi_2021.CLINICAL_USER"], "model.nps_mi_2021.DIAGNOSIS": [], "model.nps_mi_2021.SCRIPT_ITEM": [], "model.nps_mi_2021.src_script_item_grh_bp": ["model.nps_mi_2021.SCRIPT_ITEM"], "model.nps_mi_2021.src_script_item_grh_md": ["model.nps_mi_2021.SCRIPT_ITEM"], "model.nps_mi_2021.src_script_item_phc_bp": ["model.nps_mi_2021.SCRIPT_ITEM"], "model.nps_mi_2021.src_script_item_phc_md": ["model.nps_mi_2021.SCRIPT_ITEM"], "model.nps_mi_2021.PRESCRIPTION": [], "model.nps_mi_2021.src_prescription_grh_bp": ["model.nps_mi_2021.PRESCRIPTION"], "model.nps_mi_2021.src_prescription_grh_md": ["model.nps_mi_2021.PRESCRIPTION"], "model.nps_mi_2021.src_prescription_phc_bp": ["model.nps_mi_2021.PRESCRIPTION"], "model.nps_mi_2021.src_prescription_phc_md": ["model.nps_mi_2021.PRESCRIPTION"], "model.nps_mi_2021.src_alcohol_md": ["model.nps_mi_2021.ALCOHOL_STATUS"], "model.nps_mi_2021.src_alcohol_phc_md": ["model.nps_mi_2021.ALCOHOL_STATUS"], "model.nps_mi_2021.SMOKING_STATUS": [], "model.nps_mi_2021.src_smoking_md": ["model.nps_mi_2021.SMOKING_STATUS"], "model.nps_mi_2021.src_smoking_phc_md": ["model.nps_mi_2021.SMOKING_STATUS"], "model.nps_mi_2021.ALLERGY_REACTION": [], "model.nps_mi_2021.src_allergy_bp": ["model.nps_mi_2021.ALLERGY_REACTION"], "model.nps_mi_2021.src_allergy_phc_bp": ["model.nps_mi_2021.ALLERGY_REACTION"], "model.nps_mi_2021.src_reaction_md": ["model.nps_mi_2021.ALLERGY_REACTION"], "model.nps_mi_2021.src_reaction_phc_md": ["model.nps_mi_2021.ALLERGY_REACTION"], "model.nps_mi_2021.BILLING_SERVICE": [], "model.nps_mi_2021.src_billing_service_bp": ["model.nps_mi_2021.BILLING_SERVICE"], "model.nps_mi_2021.src_billing_service_md": ["model.nps_mi_2021.BILLING_SERVICE"], "model.nps_mi_2021.src_billing_service_phc_bp": ["model.nps_mi_2021.BILLING_SERVICE"], "model.nps_mi_2021.src_billing_service_phc_md": ["model.nps_mi_2021.BILLING_SERVICE"], "model.nps_mi_2021.REFERRALS": [], "model.nps_mi_2021.src_active_patients": ["model.nps_mi_2021.DIAGNOSIS"], "model.nps_mi_2021.ENCOUNTER": [], "model.nps_mi_2021.src_encounter_bp": ["model.nps_mi_2021.ENCOUNTER"], "model.nps_mi_2021.src_encounter_md_excld_sensitive_data": ["model.nps_mi_2021.ENCOUNTER"], "model.nps_mi_2021.src_encounter_phc_bp": ["model.nps_mi_2021.ENCOUNTER"], "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data": ["model.nps_mi_2021.ENCOUNTER"], "model.nps_mi_2021.ENCOUNTER_REASON": [], "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data": ["model.nps_mi_2021.ENCOUNTER_REASON"], "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data": ["model.nps_mi_2021.ENCOUNTER_REASON"], "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data": ["model.nps_mi_2021.ENCOUNTER_REASON"], "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data": ["model.nps_mi_2021.ENCOUNTER_REASON"], "model.nps_mi_2021.IMMUNISATION": [], "model.nps_mi_2021.src_immunization_bp": ["model.nps_mi_2021.IMMUNISATION"], "model.nps_mi_2021.src_immunization_md": ["model.nps_mi_2021.IMMUNISATION"], "model.nps_mi_2021.src_immunization_phc_bp": ["model.nps_mi_2021.IMMUNISATION"], "model.nps_mi_2021.src_immunization_phc_md": ["model.nps_mi_2021.IMMUNISATION"], "model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS": [], "model.nps_mi_2021.src_long_bp": ["model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS"], "model.nps_mi_2021.src_long_md": ["model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS"], "model.nps_mi_2021.src_long_phc_bp": ["model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS"], "model.nps_mi_2021.src_long_phc_md": ["model.nps_mi_2021.LONGITUDINAL_CIS_PATIENT_STATUS"], "model.nps_mi_2021.OBSERVATION": [], "model.nps_mi_2021.src_observation_bp": ["model.nps_mi_2021.OBSERVATION"], "model.nps_mi_2021.src_observation_md": ["model.nps_mi_2021.OBSERVATION"], "model.nps_mi_2021.src_observation_phc_bp": ["model.nps_mi_2021.OBSERVATION"], "model.nps_mi_2021.src_observation_phc_md": ["model.nps_mi_2021.OBSERVATION"], "model.nps_mi_2021.PATHOLOGY": [], "model.nps_mi_2021.src_pathology_bp": ["model.nps_mi_2021.PATHOLOGY"], "model.nps_mi_2021.src_pathology_md": ["model.nps_mi_2021.PATHOLOGY"], "model.nps_mi_2021.src_pathology_phc_bp": ["model.nps_mi_2021.PATHOLOGY"], "model.nps_mi_2021.src_pathology_phc_md": ["model.nps_mi_2021.PATHOLOGY"], "model.nps_mi_2021.src_pathology_result_bp": ["model.nps_mi_2021.PATHOLOGY_RESULT"], "model.nps_mi_2021.src_pathology_result_md": ["model.nps_mi_2021.PATHOLOGY_RESULT"], "model.nps_mi_2021.src_pathology_result_phc_bp": ["model.nps_mi_2021.PATHOLOGY_RESULT"], "model.nps_mi_2021.REQUESTED_TEST": [], "model.nps_mi_2021.src_requested_test_bp": ["model.nps_mi_2021.REQUESTED_TEST"], "model.nps_mi_2021.src_requested_test_md": ["model.nps_mi_2021.REQUESTED_TEST"], "model.nps_mi_2021.src_requested_test_phc_bp": ["model.nps_mi_2021.REQUESTED_TEST"], "model.nps_mi_2021.src_requested_test_phc_md": ["model.nps_mi_2021.REQUESTED_TEST"], "model.nps_mi_2021.src_smoking_bp": ["model.nps_mi_2021.SMOKING_STATUS"], "model.nps_mi_2021.src_smoking_phc_bp": ["model.nps_mi_2021.SMOKING_STATUS"], "model.nps_mi_2021.src_clinical_user_phc_bp": ["model.nps_mi_2021.CLINICAL_USER"], "model.nps_mi_2021.PRACTICE_CONTACT": [], "model.nps_mi_2021.src_practice_contact_bp": ["model.nps_mi_2021.PRACTICE_CONTACT"], "model.nps_mi_2021.src_practice_contact_md": ["model.nps_mi_2021.PRACTICE_CONTACT"], "model.nps_mi_2021.src_practice_contact_phc_bp": ["model.nps_mi_2021.PRACTICE_CONTACT"], "model.nps_mi_2021.src_clinical_user_phc_md": ["model.nps_mi_2021.CLINICAL_USER"], "model.nps_mi_2021.src_practice_contact_phc_md": ["model.nps_mi_2021.PRACTICE_CONTACT"], "model.nps_mi_2021.PATHOLOGY_ALBUMIN": [], "model.nps_mi_2021.PATHOLOGY_EGFR": [], "model.nps_mi_2021.PATHOLOGY_HBA1C": [], "model.nps_mi_2021.PATHOLOGY_LIPIDS": [], "model.nps_mi_2021.PRACTICE_RECRUITMENT": [], "model.nps_mi_2021.SITE": ["test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.052e187c1f", "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.2205f46cd2", "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.74d7b07101", "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.77aa18e311"], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_EXPORTLOGS__True__0.2205f46cd2": [], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_REQUEST_DATARESET__True__0.052e187c1f": [], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSERVICE_ENABLED__True__0.74d7b07101": [], "test.nps_mi_2021.dbt_utils_accepted_range_SITE_SITE_WEBSITE_ENABLED__True__0.77aa18e311": [], "model.nps_mi_2021.PATIENT": [], "model.nps_mi_2021.src_patients_bp": ["model.nps_mi_2021.PATIENT"], "model.nps_mi_2021.src_patients_md": ["model.nps_mi_2021.PATIENT"], "model.nps_mi_2021.src_patients_phc_bp": ["model.nps_mi_2021.PATIENT"], "model.nps_mi_2021.src_patients_phc_md": ["model.nps_mi_2021.PATIENT"], "model.nps_mi_2021.test_get_phn_codes": ["test.nps_mi_2021.relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_.5e80f16b64"], "model.nps_mi_2021.test_phn_percent": [], "test.nps_mi_2021.relationships_test_get_phn_codes_PHN_CODE_2017__PHN_CODE_2017__ref_PRIMARY_HEALTH_NETWORK_.5e80f16b64": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.1fd49f355a": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.5eb848e427": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string.10c7ced156": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1.2c19e44c9f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.846ac26707": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM.5302f76f97": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM.3776826794": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.e3a6618d67": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.89635f761b": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.a96531a840": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string.8888773815": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime.88760a3bf8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime.a39095e9d6": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.a680eef112": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.74f627f4cf": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string.13e7565f62": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1.e3e3343ea6": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID.ee6534c4f6": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.9b91680f29": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM.c7f7d5a0a8": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM.9f3a3cf321": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.2d52e9b62e": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.5ef9d67fa3": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.4ab27ecd0c": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string.ec45fa6736": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime.67a06fa1c6": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime.2a6fa5e8df": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.5ca59c218a": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.b865ba6625": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string.b02963d614": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1.fd714909db": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID.95dac6d029": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.ba9f53c643": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM.190669a7bd": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM.30b29be29c": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.e6e90aebd5": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.aa8023999f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.efcb049473": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string.a348363466": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime.840ee0415d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime.776ee3829c": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime.06793428fa": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime.3575ba9248": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.5e339707bf": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.fa917fec4c": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string.aa3ceea01b": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER.b09d3160ef": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.c7c06685d3": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.ce865e7dfd": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string.699240662a": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.d35102fc07": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.3f1a577594": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string.35b87fc341": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1.b9271e0869": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID.5d6da0b44f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD.422805cff4": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM.1df77c56c5": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM.06c1fd0354": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.afde74abbb": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.db877ef8ce": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.cb3ba12f02": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string.365a3dc0c2": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.5f256407a9": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.1720383e1b": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.84c8809b85": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string.ccef86a17d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime.28495dcbeb": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime.d290c025c0": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.4d5b2aff42": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.e92036c72b": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string.675b6df74f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1.50166821c0": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID.0f6535467e": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.e2105f54f0": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM.7d876e47e9": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM.ae40878b99": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.8d7e3c4349": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.63feb4a016": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.62e2e3b638": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string.c82580e626": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime.f10448be72": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime.bcb06831f8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime.79e8e8d9bf": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.f7ebbb98d0": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.3a20765014": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string.e6dc7da5ac": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1.bb695a2638": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID.29b08089ee": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC.91dad824e7": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM.763321588e": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM.18b37002e8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.5e5d7f08d6": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.76b3d307e3": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.ca5b5fa887": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string.4761b6841d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime.d540a96328": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime.0af2a2bf66": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.20e5c10167": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.0d930daa0c": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string.7d5ae53e72": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1.a4a4ab82b7": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID.3b52e192b5": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.6f37d9a460": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM.83a81824c7": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM.b352c945c2": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c8f4795651": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.237196fdbb": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c9a15fbf04": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string.623fb18c42": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime.435ce410a1": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime.9031c53a57": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.e5d82452b4": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.8fc68ba0ac": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string.9358535707": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1.9efa18b1cc": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID.b1ee3d1352": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.8e09d9bbb0": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM.4550056a41": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM.df285b185f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.efa9fcbdf5": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.6714a2cf69": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.47faefc17a": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string.701807bd76": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime.b65e56b988": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime.33498972fa": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime.dbea157205": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.75f07a569f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.5554a5f286": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string.d21d602399": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID.ccffdc9b09": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.761dde4cb8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.2a6d8e9ede": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string.b5b324c083": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID.f7540b2473": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.875495fdfd": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.fd50271a42": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.c5d35cc7e8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.7091c71229": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID.1add980c05": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.7aa4258877": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.e440c18fff": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID.2259a8262b": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.59f3f86a32": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.20650e611e": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID.0ce3c5efb6": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.9a3b36b73f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.c13c76b9bd": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID.059598ccde": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.c5b3e3b412": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.5c70331cfd": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.e1a2c03e02": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.3a73ee7acc": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.199e825804": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.af6aaac5c1": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string.45cac7427f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1.38cc79f27a": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID.5ad07734a5": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.f7ee803ff4": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM.9bc33ced47": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM.d96cb0f782": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.e6e95a9205": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.6da019df1f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.89fc247464": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string.c514d1862f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime.ce0a647d0d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime.ee61e9fe2f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime.938e115f1e": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime.89b4b7788d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime.ba4a9eae36": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime.a2d3ec20bf": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH.9b8f0caad9": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.3bc2bb7ac7": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.ccc09c7626": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string.e4f994a08a": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1.1f48500f58": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID.95fe960b65": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.a9e3ed73d7": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM.0bf54300f5": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM.97ed916dc1": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.5d67a221bb": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.7629c151d8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.0a35c39b4d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string.1d3fd828d0": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime.bfe72fc6d8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime.117778f76d": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime.833336f00f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.ec20f9d54e": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.dc524994bf": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string.01a82207b7": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1.a0803660da": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE.bcd558e979": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.dfd2426837": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.7ab80d5240": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.73b17b4635": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string.82aa30da07": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime.bb805e9a0b": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime.3a35359e09": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.8f956873c3": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.47ab9662bd": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string.695a57764a": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1.0d678885de": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID.335661aacc": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_.fc9b914173": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM.0638fa2e69": [], "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM.b2bac72ebb": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.a12d73eff8": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.574f708515": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.0dc3c8525f": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string.5b93d24673": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime.92bf1d2ccc": [], "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime.22e11eeba4": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_ENCOUNTER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_SITE_RESULT_OMOP": ["model.nps_mi_2021.src_pathology_result_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_SITE_RESULT_OMOP": ["model.nps_mi_2021.src_pathology_result_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": ["model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_alcohol_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATIENT_USUAL_PROVIDER_OMOP": ["model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_matched_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATIENT_USUAL_PROVIDER_OMOP": ["model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_matched_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRACTITIONER_OMOP": ["model.nps_mi_2021.src_clinical_user_bp", "model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_DIAGNOSIS_OMOP": ["model.nps_mi_2021.DIAGNOSIS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_SITE_RESULT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_DIAGNOSIS_OMOP": ["model.nps_mi_2021.DIAGNOSIS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_DIAGNOSIS_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.DIAGNOSIS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_DIAGNOSIS_OMOP": ["model.nps_mi_2021.DIAGNOSIS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_OMOP": ["model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SCRIPT_ITEM_OMOP": ["model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SCRIPT_SCRIPT_ITEM_OMOP": ["model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SCRIPT_SCRIPT_ITEM_OMOP": ["model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_BP_OMOP": ["model.nps_mi_2021.src_script_item_grh_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_BP_OMOP": ["model.nps_mi_2021.src_script_item_grh_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_MD_OMOP": ["model.nps_mi_2021.src_script_item_grh_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_BP_OMOP": ["model.nps_mi_2021.src_script_item_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_ITEM_PHC_MD_OMOP": ["model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_MD_OMOP": ["model.nps_mi_2021.src_script_item_grh_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_BP_OMOP": ["model.nps_mi_2021.src_script_item_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SCRIPT_PHC_MD_OMOP": ["model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PRESCRIPTION_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PRESCRIPTION_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PRESCRIPTION_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_BP_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_script_item_grh_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PRESCRIPTION_MD_OMOP": ["model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_script_item_grh_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_BP_OMOP": ["model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_script_item_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_PHC_MD_OMOP": ["model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_script_item_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_MEDICINE_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_prescription_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_BP_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_MEDICINE_SCRIPT_ITEM_MD_OMOP": ["model.nps_mi_2021.src_prescription_grh_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_BP_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_prescription_grh_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_MD_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_prescription_grh_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_prescription_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PRESCRIPTION_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_prescription_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PRESCRIPTION_SCRIPT_ITEM_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": ["model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_alcohol_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": ["model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_alcohol_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_BP_OMOP": ["model.nps_mi_2021.src_alcohol_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALCOHOL_STATUS_PHC_BP_OMOP": ["model.nps_mi_2021.src_alcohol_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_CLINICAL_MD_OMOP": ["model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_alcohol_phc_md", "model.nps_mi_2021.src_smoking_md", "model.nps_mi_2021.src_smoking_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_CLINICAL_MD_OMOP": ["model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_alcohol_phc_md", "model.nps_mi_2021.src_smoking_md", "model.nps_mi_2021.src_smoking_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_MD_OMOP": ["model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_smoking_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_CLINICAL_PHC_MD_OMOP": ["model.nps_mi_2021.src_alcohol_phc_md", "model.nps_mi_2021.src_smoking_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_CLINICAL_MD_OMOP": ["model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_alcohol_phc_md", "model.nps_mi_2021.src_smoking_md", "model.nps_mi_2021.src_smoking_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_ALLERGY_OMOP": ["model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_reaction_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_ALLERGY_OMOP": ["model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_reaction_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_ALLERGY_OMOP": ["model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_reaction_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_BP_OMOP": ["model.nps_mi_2021.src_allergy_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_SERVICE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_BILLING_SERVICE_OMOP": ["model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_SERVICE_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_BILLING_SERVICE_OMOP": ["model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_OMOP": ["model.nps_mi_2021.REFERRALS", "model.nps_mi_2021.src_active_patients", "model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_alcohol_phc_bp", "model.nps_mi_2021.src_alcohol_phc_md", "model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_phc_md", "model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_immunization_phc_md", "model.nps_mi_2021.src_long_bp", "model.nps_mi_2021.src_long_md", "model.nps_mi_2021.src_long_phc_bp", "model.nps_mi_2021.src_long_phc_md", "model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_matched_phc_md", "model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_observation_phc_md", "model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_phc_md", "model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_pathology_result_phc_bp", "model.nps_mi_2021.src_patients_bp", "model.nps_mi_2021.src_patients_md", "model.nps_mi_2021.src_patients_phc_bp", "model.nps_mi_2021.src_patients_phc_md", "model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_reaction_phc_md", "model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_requested_test_phc_md", "model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_script_item_phc_md", "model.nps_mi_2021.src_smoking_bp", "model.nps_mi_2021.src_smoking_md", "model.nps_mi_2021.src_smoking_phc_bp", "model.nps_mi_2021.src_smoking_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BILLING_SERVICE_OMOP": ["model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BILLING_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BILLING_PATIENT_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PROVIDER_OMOP": ["model.nps_mi_2021.src_clinical_user_bp", "model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_clinical_user_phc_bp", "model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_practice_contact_bp", "model.nps_mi_2021.src_practice_contact_md", "model.nps_mi_2021.src_practice_contact_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_BP_OMOP": ["model.nps_mi_2021.src_clinical_user_bp", "model.nps_mi_2021.src_clinical_user_phc_bp", "model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_practice_contact_bp", "model.nps_mi_2021.src_practice_contact_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_LOGIN_SITE_PROVIDER_MD_OMOP": ["model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_clinical_user_phc_md", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_md", "model.nps_mi_2021.src_practice_contact_md", "model.nps_mi_2021.src_practice_contact_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PROVIDER_MD_OMOP": ["model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_clinical_user_phc_md", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_md", "model.nps_mi_2021.src_practice_contact_md", "model.nps_mi_2021.src_practice_contact_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_ENCOUNTER_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_ENCOUNTER_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_ENCOUNTER_REASON_BP_OMOP": ["model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_TYPE_MD_OMOP": ["model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_ENCOUNTER_REASON_BP_OMOP": ["model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_REASON_BP_OMOP": ["model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_ENCOUNTER_TYPE_MD_OMOP": ["model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_IMMUNISATION_OMOP": ["model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_immunization_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_ENCOUNTER_SITE": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_PATIENT_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_IMMUNISATION_SITE_PATIENT_OMOP": ["model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_immunization_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_ENCOUNTER_SITE_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_PATIENT_PROVIDER_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_IMMUNISATION_SITE_PATIENT_OMOP": ["model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_immunization_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_OBSERVATION_OMOP": ["model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_observation_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_OBSERVATION_OMOP": ["model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_observation_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_OMOP": ["model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_OMOP": ["model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_PATHOLOGY_RESULT_OMOP": ["model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_pathology_result_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_PATHOLOGY_RESULT_OMOP": ["model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_pathology_result_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SITE_OMOP": ["model.nps_mi_2021.src_long_bp", "model.nps_mi_2021.src_long_md", "model.nps_mi_2021.src_long_phc_bp", "model.nps_mi_2021.src_long_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_REQUESTED_TEST_OMOP": ["model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_requested_test_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_REQUESTED_TEST_OMOP": ["model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_requested_test_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP1": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SITE_OMOP": ["model.nps_mi_2021.src_long_bp", "model.nps_mi_2021.src_long_md", "model.nps_mi_2021.src_long_phc_bp", "model.nps_mi_2021.src_long_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": ["model.nps_mi_2021.src_smoking_bp", "model.nps_mi_2021.src_smoking_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": ["model.nps_mi_2021.src_smoking_bp", "model.nps_mi_2021.src_smoking_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LNK_BDV_PATHOLOGY_OMOP": ["model.nps_mi_2021.PATHOLOGY_ALBUMIN", "model.nps_mi_2021.PATHOLOGY_EGFR", "model.nps_mi_2021.PATHOLOGY_HBA1C", "model.nps_mi_2021.PATHOLOGY_LIPIDS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.LSAT_BDV_PATHOLOGY_OMOP": ["model.nps_mi_2021.PATHOLOGY_ALBUMIN", "model.nps_mi_2021.PATHOLOGY_EGFR", "model.nps_mi_2021.PATHOLOGY_HBA1C", "model.nps_mi_2021.PATHOLOGY_LIPIDS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_OMOP": ["model.nps_mi_2021.PRACTICE_RECRUITMENT", "model.nps_mi_2021.SITE"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_REQUESTED_TEST_OMOP": ["model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_requested_test_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_RESULT_OMOP": ["model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_pathology_result_phc_bp", "model.nps_mi_2021.src_pathology_result_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_OBSERVATION_OMOP": ["model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_observation_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_PATHOLOGY_OMOP": ["model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": ["model.nps_mi_2021.src_smoking_bp", "model.nps_mi_2021.src_smoking_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.HUB_BDV_PATHOLOGY_OMOP": ["model.nps_mi_2021.PATHOLOGY_ALBUMIN", "model.nps_mi_2021.PATHOLOGY_EGFR", "model.nps_mi_2021.PATHOLOGY_HBA1C", "model.nps_mi_2021.PATHOLOGY_LIPIDS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_ALBUMIN_OMOP": ["model.nps_mi_2021.PATHOLOGY_ALBUMIN"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_GFR_OMOP": ["model.nps_mi_2021.PATHOLOGY_EGFR"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_HBA1C_OMOP": ["model.nps_mi_2021.PATHOLOGY_HBA1C"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_PHC_BP_OMOP": ["model.nps_mi_2021.src_smoking_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_SMOKING_STATUS_BP_OMOP": ["model.nps_mi_2021.src_smoking_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_PATHOLOGY_LIPIDS_OMOP": ["model.nps_mi_2021.PATHOLOGY_LIPIDS"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_BP_OMOP": ["model.nps_mi_2021.REFERRALS", "model.nps_mi_2021.src_active_patients", "model.nps_mi_2021.src_alcohol_bp", "model.nps_mi_2021.src_allergy_bp", "model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data", "model.nps_mi_2021.src_immunization_bp", "model.nps_mi_2021.src_long_bp", "model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_observation_bp", "model.nps_mi_2021.src_pathology_bp", "model.nps_mi_2021.src_pathology_result_bp", "model.nps_mi_2021.src_patients_bp", "model.nps_mi_2021.src_prescription_grh_bp", "model.nps_mi_2021.src_requested_test_bp", "model.nps_mi_2021.src_script_item_grh_bp", "model.nps_mi_2021.src_smoking_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_MD_OMOP": ["model.nps_mi_2021.REFERRALS", "model.nps_mi_2021.src_active_patients", "model.nps_mi_2021.src_alcohol_md", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data", "model.nps_mi_2021.src_immunization_md", "model.nps_mi_2021.src_long_md", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_matched_phc_md", "model.nps_mi_2021.src_observation_md", "model.nps_mi_2021.src_pathology_md", "model.nps_mi_2021.src_pathology_result_md", "model.nps_mi_2021.src_patients_md", "model.nps_mi_2021.src_prescription_grh_md", "model.nps_mi_2021.src_reaction_md", "model.nps_mi_2021.src_requested_test_md", "model.nps_mi_2021.src_script_item_grh_md", "model.nps_mi_2021.src_smoking_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_BP_OMOP": ["model.nps_mi_2021.REFERRALS", "model.nps_mi_2021.src_active_patients", "model.nps_mi_2021.src_alcohol_phc_bp", "model.nps_mi_2021.src_allergy_phc_bp", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data", "model.nps_mi_2021.src_immunization_phc_bp", "model.nps_mi_2021.src_long_phc_bp", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_observation_phc_bp", "model.nps_mi_2021.src_pathology_phc_bp", "model.nps_mi_2021.src_pathology_result_phc_bp", "model.nps_mi_2021.src_patients_phc_bp", "model.nps_mi_2021.src_prescription_phc_bp", "model.nps_mi_2021.src_requested_test_phc_bp", "model.nps_mi_2021.src_script_item_phc_bp", "model.nps_mi_2021.src_smoking_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_BP_OMOP": ["model.nps_mi_2021.src_requested_test_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_GRH_MD_OMOP": ["model.nps_mi_2021.src_requested_test_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_BP_OMOP": ["model.nps_mi_2021.src_requested_test_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_REQUESTED_TEST_PHC_MD_OMOP": ["model.nps_mi_2021.src_requested_test_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_GRH_OMOP": ["model.nps_mi_2021.PRACTICE_RECRUITMENT", "model.nps_mi_2021.SITE"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_SITE_OMOP": ["model.nps_mi_2021.PRACTICE_RECRUITMENT", "model.nps_mi_2021.SITE"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PHC_OMOP": ["model.nps_mi_2021.PRACTICE_RECRUITMENT"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_BP_OMOP": ["model.nps_mi_2021.src_pathology_result_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_BP_OMOP": ["model.nps_mi_2021.src_pathology_result_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_MD_OMOP": ["model.nps_mi_2021.src_pathology_result_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_RESULT_PHC_MD_OMOP": ["model.nps_mi_2021.src_pathology_result_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_BP_OMOP": ["model.nps_mi_2021.src_pathology_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_BP_OMOP": ["model.nps_mi_2021.src_pathology_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_MD_OMOP": ["model.nps_mi_2021.src_pathology_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_PATHOLOGY_PHC_MD_OMOP": ["model.nps_mi_2021.src_pathology_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_BP_OMOP": ["model.nps_mi_2021.src_observation_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_BP_OMOP": ["model.nps_mi_2021.src_observation_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_MD_OMOP": ["model.nps_mi_2021.src_observation_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_OBSERVATION_PHC_MD_OMOP": ["model.nps_mi_2021.src_observation_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_BP_OMOP": ["model.nps_mi_2021.src_immunization_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_MD_OMOP": ["model.nps_mi_2021.src_immunization_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_BP_OMOP": ["model.nps_mi_2021.src_immunization_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_IMMUNISATION_PHC_MD_OMOP": ["model.nps_mi_2021.src_immunization_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_TYPE_MD_OMOP": ["model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_BP_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_REASON_PHC_BP_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_ENCOUNTER_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_BP_OMOP": ["model.nps_mi_2021.src_encounter_bp", "model.nps_mi_2021.src_encounter_reason_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTER_PHC_BP_OMOP": ["model.nps_mi_2021.src_encounter_phc_bp", "model.nps_mi_2021.src_encounter_reason_phc_bp_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_MD_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_encounter_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_ENCOUNTR_PHC_MD_EXCLD_SENSITIVE_DATA_OMOP": ["model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_BP_OMOP": ["model.nps_mi_2021.src_clinical_user_bp", "model.nps_mi_2021.src_matched_bp", "model.nps_mi_2021.src_practice_contact_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_MD_OMOP": ["model.nps_mi_2021.src_clinical_user_md", "model.nps_mi_2021.src_matched_md", "model.nps_mi_2021.src_practice_contact_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_BP_OMOP": ["model.nps_mi_2021.src_clinical_user_phc_bp", "model.nps_mi_2021.src_matched_phc_bp", "model.nps_mi_2021.src_practice_contact_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PROVIDER_PHC_MD_OMOP": ["model.nps_mi_2021.src_clinical_user_phc_md", "model.nps_mi_2021.src_matched_phc_md", "model.nps_mi_2021.src_practice_contact_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_PHC_MD_OMOP": ["model.nps_mi_2021.REFERRALS", "model.nps_mi_2021.src_active_patients", "model.nps_mi_2021.src_alcohol_phc_md", "model.nps_mi_2021.src_billing_service_phc_md", "model.nps_mi_2021.src_encounter_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_encounter_reason_phc_md_excld_sensitive_data", "model.nps_mi_2021.src_immunization_phc_md", "model.nps_mi_2021.src_long_phc_md", "model.nps_mi_2021.src_observation_phc_md", "model.nps_mi_2021.src_pathology_phc_md", "model.nps_mi_2021.src_patients_phc_md", "model.nps_mi_2021.src_prescription_phc_md", "model.nps_mi_2021.src_reaction_phc_md", "model.nps_mi_2021.src_requested_test_phc_md", "model.nps_mi_2021.src_script_item_phc_md", "model.nps_mi_2021.src_smoking_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_MD_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_BP_OMOP": ["model.nps_mi_2021.src_billing_service_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_BP_OMOP": ["model.nps_mi_2021.src_billing_service_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_MD_OMOP": ["model.nps_mi_2021.src_billing_service_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_SERVICE_PHC_MD_OMOP": ["model.nps_mi_2021.src_billing_service_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BDV_BILLING_SERVICE_OMOP": ["model.nps_mi_2021.src_billing_service_bp", "model.nps_mi_2021.src_billing_service_md", "model.nps_mi_2021.src_billing_service_phc_bp", "model.nps_mi_2021.src_billing_service_phc_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_BILLING_PHC_BP_OMOP": [], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_ALLERGY_PHC_BP_OMOP": ["model.nps_mi_2021.src_allergy_phc_bp"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_MD_OMOP": ["model.nps_mi_2021.src_reaction_md"], "source.nps_mi_2021.B_SREDH_NPS_MI_SF_RDV_BDV_2021.SAT_SITE_PATIENT_REACTION_PHC_MD_OMOP": ["model.nps_mi_2021.src_reaction_phc_md"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALCOHOL_STATUS": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.846ac26707", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.e3a6618d67", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.1fd49f355a", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_RECORD_ID__6__1.2c19e44c9f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_CREATED_DATETIME__datetime.88760a3bf8", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER__string.8888773815", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID__string.10c7ced156", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_UPDATED_DATETIME__datetime.a39095e9d6", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.a96531a840", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_PATIENT_NUMBER.89635f761b", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SITE_ID.5eb848e427", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_SOURCE_SYSTEM.5302f76f97", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALCOHOL_STATUS_0_95__SOURCE_SYSTEM.3776826794"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ALLERGY_REACTION": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.9b91680f29", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.2d52e9b62e", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.a680eef112", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_RECORD_ID__6__1.e3e3343ea6", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_CREATED_DATETIME__datetime.67a06fa1c6", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER__string.ec45fa6736", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID__string.13e7565f62", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_UPDATED_DATETIME__datetime.2a6fa5e8df", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.4ab27ecd0c", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_PATIENT_NUMBER.5ef9d67fa3", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SITE_ID.74f627f4cf", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_SOURCE_SYSTEM.c7f7d5a0a8", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__RECORD_ID.ee6534c4f6", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ALLERGY_REACTION_0_95__SOURCE_SYSTEM.9f3a3cf321"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.BILLING_SERVICE": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.ba9f53c643", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.e6e90aebd5", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.5ca59c218a", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_ID__6__1.fd714909db", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_CREATED_DATETIME__datetime.840ee0415d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER__string.a348363466", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SERVICE_DATETIME__datetime.06793428fa", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID__string.b02963d614", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_UPDATED_DATETIME__datetime.776ee3829c", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_VISIT_DATETIME__datetime.3575ba9248", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.efcb049473", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_PATIENT_NUMBER.aa8023999f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SITE_ID.b865ba6625", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_SOURCE_SYSTEM.190669a7bd", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SERVICE_ID.95dac6d029", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_BILLING_SERVICE_0_95__SOURCE_SYSTEM.30b29be29c"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT_MATCHED_USUAL_PROVIDER": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.5e339707bf", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.c7c06685d3", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER__string.aa3ceea01b", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID__string.699240662a", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_PATIENT_NUMBER.fa917fec4c", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_SITE_ID.ce865e7dfd", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_MATCHED_USUAL_PROVIDER_0_95__PATIENT_NUMBER.b09d3160ef"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.CLINICAL_USER": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD.422805cff4", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.afde74abbb", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.5f256407a9", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.d35102fc07", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SERVICE_ID__6__1.b9271e0869", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_CREATED_DATETIME__datetime.28495dcbeb", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER__string.365a3dc0c2", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER__string.ccef86a17d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_UPDATED_DATETIME__datetime.d290c025c0", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID__string.35b87fc341", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.cb3ba12f02", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.84c8809b85", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PRESCRIBER_NUMBER.db877ef8ce", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_PROVIDER_NUMBER.1720383e1b", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SITE_ID.3f1a577594", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_SOURCE_SYSTEM.1df77c56c5", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SERVICE_ID.5d6da0b44f", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_CLINICAL_USER_0_95__SOURCE_SYSTEM.06c1fd0354"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.e2105f54f0", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.8d7e3c4349", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.4d5b2aff42", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_ENCOUNTER_ID__8__1.50166821c0", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_CREATED_DATETIME__datetime.f10448be72", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER__string.c82580e626", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID__string.675b6df74f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_UPDATED_DATETIME__datetime.bcb06831f8", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_VISIT_DATETIME__datetime.79e8e8d9bf", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.62e2e3b638", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_PATIENT_NUMBER.63feb4a016", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SITE_ID.e92036c72b", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_SOURCE_SYSTEM.7d876e47e9", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__ENCOUNTER_ID.0f6535467e", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_0_95__SOURCE_SYSTEM.ae40878b99"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.ENCOUNTER_REASON": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM__PHC_BP__BP__MD__MD_PHC.91dad824e7", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.5e5d7f08d6", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.f7ebbb98d0", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_ENCOUNTER_ID__8__1.bb695a2638", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_CREATED_DATETIME__datetime.d540a96328", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER__string.4761b6841d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID__string.e6dc7da5ac", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_UPDATED_DATETIME__datetime.0af2a2bf66", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.ca5b5fa887", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_PATIENT_NUMBER.76b3d307e3", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SITE_ID.3a20765014", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_SOURCE_SYSTEM.763321588e", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__ENCOUNTER_ID.29b08089ee", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_ENCOUNTER_REASON_0_95__SOURCE_SYSTEM.18b37002e8"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.IMMUNISATION": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.6f37d9a460", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c8f4795651", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.20e5c10167", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_IMMUNISATION_ID__8__1.a4a4ab82b7", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_CREATED_DATETIME__datetime.435ce410a1", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER__string.623fb18c42", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID__string.7d5ae53e72", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_UPDATED_DATETIME__datetime.9031c53a57", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.c9a15fbf04", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_PATIENT_NUMBER.237196fdbb", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SITE_ID.0d930daa0c", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_SOURCE_SYSTEM.83a81824c7", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__IMMUNISATION_ID.3b52e192b5", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_IMMUNISATION_0_95__SOURCE_SYSTEM.b352c945c2"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.OBSERVATION": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.8e09d9bbb0", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.efa9fcbdf5", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.e5d82452b4", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_ID__8__1.9efa18b1cc", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_CREATED_DATETIME__datetime.b65e56b988", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_OBSERVATION_DATETIME__datetime.dbea157205", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER__string.701807bd76", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID__string.9358535707", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_UPDATED_DATETIME__datetime.33498972fa", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.47faefc17a", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_PATIENT_NUMBER.6714a2cf69", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SITE_ID.8fc68ba0ac", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_SOURCE_SYSTEM.4550056a41", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__OBSERVATION_ID.b1ee3d1352", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_OBSERVATION_0_95__SOURCE_SYSTEM.df285b185f"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_CONTACT": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.75f07a569f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID__string.d21d602399", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_SITE_ID.5554a5f286", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_CONTACT_0_95__SITE_ID.ccffdc9b09"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRACTICE_RECRUITMENT": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.761dde4cb8", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID__string.b5b324c083", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_SITE_ID.2a6d8e9ede", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRACTICE_RECRUITMENT_0_95__SITE_ID.f7540b2473"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REFERRALS": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REFERRALS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.875495fdfd"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.REQUESTED_TEST": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_REQUESTED_TEST_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.fd50271a42"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_ALBUMIN": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.c5d35cc7e8", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_PATHOLOGY_ID.7091c71229", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_ALBUMIN_0_95__PATHOLOGY_ID.1add980c05"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_EGFR": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.7aa4258877", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_PATHOLOGY_ID.e440c18fff", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_EGFR_0_95__PATHOLOGY_ID.2259a8262b"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_LIPIDS": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.59f3f86a32", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_PATHOLOGY_ID.20650e611e", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_LIPIDS_0_95__PATHOLOGY_ID.0ce3c5efb6"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_HBA1C": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.9a3b36b73f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_PATHOLOGY_ID.c13c76b9bd", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_HBA1C_0_95__PATHOLOGY_ID.059598ccde"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.DIAGNOSIS": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_DIAGNOSIS_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.c5b3e3b412"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRESCRIPTION": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PRESCRIPTION_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.5c70331cfd"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SCRIPT_ITEM": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SCRIPT_ITEM_SOURCE_SYSTEM__BP_PHC__MD_PHC__BP__MD.e1a2c03e02"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.LONGITUDINAL_CIS_PATIENT_STATUS": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_LONGITUDINAL_CIS_PATIENT_STATUS_SOURCE_SYSTEM__PHC_BP__PHC_MD__BP__MD.3a73ee7acc"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.f7ee803ff4", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.e6e95a9205", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.199e825804", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATHOLOGY_ID__8__1.38cc79f27a", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_COLLECTION_DATE__datetime.ba4a9eae36", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_CREATED_DATETIME__datetime.ce0a647d0d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_IMPORT_DATE__datetime.a2d3ec20bf", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER__string.c514d1862f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REPORT_DATE__datetime.89b4b7788d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_REQUEST_DATE__datetime.938e115f1e", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID__string.45cac7427f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_UPDATED_DATETIME__datetime.ee61e9fe2f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.89fc247464", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_PATIENT_NUMBER.6da019df1f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SITE_ID.af6aaac5c1", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_SOURCE_SYSTEM.9bc33ced47", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__PATHOLOGY_ID.5ad07734a5", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_0_95__SOURCE_SYSTEM.d96cb0f782"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SITE": ["model.nps_mi_2021.src_patients_bp", "model.nps_mi_2021.src_patients_md", "model.nps_mi_2021.src_patients_phc_bp", "model.nps_mi_2021.src_patients_phc_md", "test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SITE_SITE_EXTRACTION_TYPE__PHC__GRH.9b8f0caad9"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATHOLOGY_RESULT": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM__BP_PHC__BP__MD__MD_PHC.a9e3ed73d7", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.5d67a221bb", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.3bc2bb7ac7", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATHOLOGY_RESULT_ID__8__1.1f48500f58", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_CREATED_DATETIME__datetime.bfe72fc6d8", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER__string.1d3fd828d0", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_RESULT_DATE__datetime.833336f00f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID__string.e4f994a08a", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_UPDATED_DATETIME__datetime.117778f76d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.0a35c39b4d", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_PATIENT_NUMBER.7629c151d8", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SITE_ID.ccc09c7626", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_SOURCE_SYSTEM.0bf54300f5", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__PATHOLOGY_RESULT_ID.95fe960b65", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATHOLOGY_RESULT_0_95__SOURCE_SYSTEM.97ed916dc1"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PATIENT": ["test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.dfd2426837", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.ec20f9d54e", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_POSTCODE__8__1.a0803660da", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_CREATED_DATE__datetime.bb805e9a0b", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_MODIFIED_DATE__datetime.3a35359e09", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER__string.82aa30da07", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID__string.01a82207b7", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.73b17b4635", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_PATIENT_NUMBER.7ab80d5240", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_SITE_ID.dc524994bf", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_PATIENT_0_95__PATIENT_POSTCODE.bcd558e979"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.PRIMARY_HEALTH_NETWORK": ["model.nps_mi_2021.test_get_phn_codes", "model.nps_mi_2021.test_phn_percent"], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.POSTCODE": [], "source.nps_mi_2021.C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021.SMOKING_STATUS": ["test.nps_mi_2021.dbt_expectations_source_expect_column_distinct_values_to_contain_set_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM__PHC_BP__BP__MD__PHC_MD_.fc9b914173", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.a12d73eff8", "test.nps_mi_2021.dbt_expectations_source_expect_column_to_exist_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.8f956873c3", "test.nps_mi_2021.dbt_expectations_source_expect_column_value_lengths_to_be_between_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_RECORD_ID__8__1.0d678885de", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_CREATED_DATETIME__datetime.92bf1d2ccc", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER__string.5b93d24673", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID__string.695a57764a", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_of_type_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_UPDATED_DATETIME__datetime.22e11eeba4", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_be_unique_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.0dc3c8525f", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_PATIENT_NUMBER.574f708515", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SITE_ID.47ab9662bd", "test.nps_mi_2021.dbt_expectations_source_expect_column_values_to_not_be_null_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_SOURCE_SYSTEM.0638fa2e69", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__RECORD_ID.335661aacc", "test.nps_mi_2021.dbt_utils_source_not_null_proportion_C_SREDH_NPS_MI_STAGING_SIMPLIFIED_2021_SMOKING_STATUS_0_95__SOURCE_SYSTEM.b2bac72ebb"]}}